

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 23 15:15:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 1.41
    59                           ; Generated 25/01/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4520 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  0013B2                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _CircumFactor
    98  0013B2  00C8               	dw	200
    99                           
   100                           	psect	smallconst
   101  000600                     __psmallconst:
   102                           	opt stack 0
   103  000600  00                 	db	0
   104  000601                     _KeyArrayConfig:
   105                           	opt stack 0
   106  000601  0F                 	db	15
   107  000602  00                 	db	0
   108  000603  0004               	dw	4
   109  000605  0004               	dw	4
   110  000607  0064               	dw	100
   111  000609  10                 	db	16
   112  00060A  00                 	db	0
   113  00060B  0004               	dw	4
   114  00060D  0004               	dw	4
   115  00060F  0064               	dw	100
   116  000611                     __end_of_KeyArrayConfig:
   117                           	opt stack 0
   118  000611                     _SevenSegmentMAP:
   119                           	opt stack 0
   120  000611  FC                 	db	252
   121  000612  60                 	db	96
   122  000613  DA                 	db	218
   123  000614  F2                 	db	242
   124  000615  66                 	db	102
   125  000616  B6                 	db	182
   126  000617  BE                 	db	190
   127  000618  E0                 	db	224
   128  000619  FE                 	db	254
   129  00061A  F6                 	db	246
   130  00061B  01                 	db	1
   131  00061C                     __end_of_SevenSegmentMAP:
   132                           	opt stack 0
   133  00061C  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	nvCOMRAM
   136  00006B                     __pnvCOMRAM:
   137                           	opt stack 0
   138  00006B                     _bIsAnodeUsed:
   139                           	opt stack 0
   140  00006B                     	ds	1
   141  0000                     _TMR1	set	4046
   142  0000                     _TMR3H	set	4019
   143  0000                     _TMR3L	set	4018
   144  0000                     _TMR0L	set	4054
   145  0000                     _INTCON2bits	set	4081
   146  0000                     _T3CON	set	4017
   147  0000                     _T1CON	set	4045
   148  0000                     _T0CON	set	4053
   149  0000                     _INTCON3	set	4080
   150  0000                     _INTCON	set	4082
   151  0000                     _PORTBbits	set	3969
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISC	set	3988
   154  0000                     _TRISD	set	3989
   155  0000                     _LATD	set	3980
   156  0000                     _PORTD	set	3971
   157  0000                     _LATC	set	3979
   158  0000                     _PORTC	set	3970
   159  0000                     _INT1IF	set	32640
   160  0000                     _INT0IF	set	32657
   161  0000                     _TMR2IF	set	31985
   162  0000                     _TMR3IE	set	32001
   163  0000                     _TMR3IF	set	32009
   164  0000                     _TMR1IE	set	31976
   165  0000                     _TMR1IF	set	31984
   166  0000                     _TMR0IE	set	32661
   167  0000                     _TMR0IF	set	32658
   168                           
   169                           ; #config settings
   170  0000                     
   171                           	psect	cinit
   172  0011A2                     __pcinit:
   173                           	opt stack 0
   174  0011A2                     start_initialization:
   175                           	opt stack 0
   176  0011A2                     __initialization:
   177                           	opt stack 0
   178                           
   179                           ; Initialize objects allocated to COMRAM (2 bytes)
   180                           ; load TBLPTR registers with __pidataCOMRAM
   181  0011A2  0EB2               	movlw	low __pidataCOMRAM
   182  0011A4  6EF6               	movwf	tblptrl,c
   183  0011A6  0E13               	movlw	high __pidataCOMRAM
   184  0011A8  6EF7               	movwf	tblptrh,c
   185  0011AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   186  0011AC  6EF8               	movwf	tblptru,c
   187  0011AE  0009               	tblrd		*+	;fetch initializer
   188  0011B0  CFF5 F069          	movff	tablat,__pdataCOMRAM
   189  0011B4  0009               	tblrd		*+	;fetch initializer
   190  0011B6  CFF5 F06A          	movff	tablat,__pdataCOMRAM+1
   191                           
   192                           ; Clear objects allocated to COMRAM (54 bytes)
   193  0011BA  EE00  F001         	lfsr	0,__pbssCOMRAM
   194  0011BE  0E36               	movlw	54
   195  0011C0                     clear_0:
   196  0011C0  6AEE               	clrf	postinc0,c
   197  0011C2  06E8               	decf	wreg,f,c
   198  0011C4  E1FD               	bnz	clear_0
   199  0011C6                     end_of_initialization:
   200                           	opt stack 0
   201  0011C6                     __end_of__initialization:
   202                           	opt stack 0
   203  0011C6  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204  0011C8  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205  0011CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  0011CC  6EF8               	movwf	tblptru,c
   207  0011CE  0100               	movlb	0
   208  0011D0  EFBF  F009         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	bssCOMRAM
   217  000001                     __pbssCOMRAM:
   218                           	opt stack 0
   219  000001                     _ArrayTask:
   220                           	opt stack 0
   221  000001                     	ds	16
   222  000011                     _BCDNumber:
   223                           	opt stack 0
   224  000011                     	ds	8
   225  000019                     _DistTravelCntr:
   226                           	opt stack 0
   227  000019                     	ds	4
   228  00001D                     _HWtimerCount:
   229                           	opt stack 0
   230  00001D                     	ds	2
   231  00001F                     _LapTimeTenthMilli:
   232                           	opt stack 0
   233  00001F                     	ds	2
   234  000021                     _LapDistanceCounter:
   235                           	opt stack 0
   236  000021                     	ds	2
   237  000023                     APP_MANAGE@bIsBlinkMode:
   238                           	opt stack 0
   239  000023                     	ds	2
   240  000025                     APP_MANAGE@blinkIndex:
   241                           	opt stack 0
   242  000025                     	ds	2
   243  000027                     RunScheduler@TaskIndex:
   244                           	opt stack 0
   245  000027                     	ds	1
   246  000028                     _HwTimerOVFLcount:
   247                           	opt stack 0
   248  000028                     	ds	1
   249  000029                     _TimerOVFLcount:
   250                           	opt stack 0
   251  000029                     	ds	1
   252  00002A                     _LapCounter:
   253                           	opt stack 0
   254  00002A                     	ds	1
   255  00002B                     _NotifyFlag:
   256                           	opt stack 0
   257  00002B                     	ds	1
   258  00002C                     BCDManage7segment@BlinkCounter:
   259                           	opt stack 0
   260  00002C                     	ds	1
   261  00002D                     _BlinkFlag:
   262                           	opt stack 0
   263  00002D                     	ds	1
   264  00002E                     _BlinkDuration:
   265                           	opt stack 0
   266  00002E                     	ds	1
   267  00002F                     _BlinkIndex:
   268                           	opt stack 0
   269  00002F                     	ds	1
   270  000030                     _KeyInternalData:
   271                           	opt stack 0
   272  000030                     	ds	6
   273  000036                     BCDManage7segment@DigitIndex:
   274                           	opt stack 0
   275  000036                     	ds	1
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	dataCOMRAM
   284  000069                     __pdataCOMRAM:
   285                           	opt stack 0
   286  000069                     _CircumFactor:
   287                           	opt stack 0
   288  000069                     	ds	2
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	cstackBANK0
   297  000080                     __pcstackBANK0:
   298                           	opt stack 0
   299  000080                     GetAvgSpeed@bIsKph:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x0
   303  000080                     	ds	1
   304  000081                     GetAvgSpeed@KphMphFactor:
   305                           	opt stack 0
   306                           
   307                           ; 4 bytes @ 0x1
   308  000081                     	ds	4
   309  000085                     GetAvgSpeed@AvgSpeedKphMph:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x5
   313  000085                     	ds	2
   314  000087                     APP_MANAGE@AvgSpeedKph:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x7
   318  000087                     	ds	2
   319  000089                     APP_MANAGE@TravelledDistance:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x9
   323  000089                     	ds	2
   324  00008B                     APP_MANAGE@keystatus:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0xB
   328  00008B                     	ds	1
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336                           	psect	cstackCOMRAM
   337  000037                     __pcstackCOMRAM:
   338                           	opt stack 0
   339  000037                     ?_ReloadHWtimer:
   340                           	opt stack 0
   341  000037                     SchedulerTick@TaskIndex:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x0
   345  000037                     	ds	2
   346  000039                     ReloadHWtimer@TimerId:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x2
   350  000039                     	ds	1
   351  00003A                     ReloadHWtimer@ElapsedTime:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x3
   355  00003A                     	ds	2
   356  00003C                     ??_ISR:
   357                           
   358                           ; 1 bytes @ 0x5
   359  00003C                     	ds	14
   360  00004A                     ?___wmul:
   361                           	opt stack 0
   362  00004A                     ?___lwdiv:
   363                           	opt stack 0
   364  00004A                     ?_GetDistance:
   365                           	opt stack 0
   366  00004A                     ?___lmul:
   367                           	opt stack 0
   368  00004A                     BCDInitialize@bIsCommonAnode:
   369                           	opt stack 0
   370  00004A                     BlinkDigit@duration:
   371                           	opt stack 0
   372  00004A                     GetKeyStatus@KeyStatus:
   373                           	opt stack 0
   374  00004A                     HWI_4Digit_WRITE@value:
   375                           	opt stack 0
   376  00004A                     HWI_8Digit_WRITE@value:
   377                           	opt stack 0
   378  00004A                     HWI_DIGI_READ@pin:
   379                           	opt stack 0
   380  00004A                     SetCircumfirunce@Circum:
   381                           	opt stack 0
   382  00004A                     CreateTask@MangeFunction:
   383                           	opt stack 0
   384  00004A                     ___wmul@multiplier:
   385                           	opt stack 0
   386  00004A                     ___lwdiv@dividend:
   387                           	opt stack 0
   388  00004A                     ___lmul@multiplier:
   389                           	opt stack 0
   390                           
   391                           ; 4 bytes @ 0x13
   392  00004A                     	ds	1
   393  00004B                     BlinkDigit@Index:
   394                           	opt stack 0
   395  00004B                     GetKeyStatus@KeyID:
   396                           	opt stack 0
   397  00004B                     HWI_4Digit_WRITE@port:
   398                           	opt stack 0
   399  00004B                     HWI_8Digit_WRITE@port:
   400                           	opt stack 0
   401  00004B                     HWI_DIGI_READ@HWIread:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x14
   405  00004B                     	ds	1
   406  00004C                     ??_BCDManage7segment:
   407  00004C                     CreateTask@TaskId:
   408                           	opt stack 0
   409  00004C                     ___wmul@multiplicand:
   410                           	opt stack 0
   411  00004C                     ___lwdiv@divisor:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x15
   415  00004C                     	ds	1
   416  00004D                     CreateTask@Period:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x16
   420  00004D                     	ds	1
   421  00004E                     BCDManage7segment@Index:
   422                           	opt stack 0
   423  00004E                     MangeKeys@KeyState:
   424                           	opt stack 0
   425  00004E                     ___lwdiv@counter:
   426                           	opt stack 0
   427  00004E                     ___wmul@product:
   428                           	opt stack 0
   429  00004E                     ___lmul@multiplicand:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x17
   433  00004E                     	ds	1
   434  00004F                     BCDManage7segment@BCD:
   435                           	opt stack 0
   436  00004F                     MangeKeys@HWIreading:
   437                           	opt stack 0
   438  00004F                     ___lwdiv@quotient:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  00004F                     	ds	1
   443  000050                     MangeKeys@KeyID:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x19
   447  000050                     	ds	1
   448  000051                     ManageDrivers@LoopIndex:
   449                           	opt stack 0
   450  000051                     BCDsendNumber@Number:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x1A
   454  000051                     	ds	1
   455  000052                     ___lmul@product:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x1B
   459  000052                     	ds	1
   460  000053                     BCDsendNumber@DecimalPlace:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x1C
   464  000053                     	ds	1
   465  000054                     ??_BCDsendNumber:
   466                           
   467                           ; 1 bytes @ 0x1D
   468  000054                     	ds	2
   469  000056                     ?___lldiv:
   470                           	opt stack 0
   471  000056                     BCDsendNumber@Link:
   472                           	opt stack 0
   473  000056                     ___lldiv@dividend:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x1F
   477  000056                     	ds	2
   478  000058                     BCDsendNumber@Output:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x21
   482  000058                     	ds	2
   483  00005A                     BCDsendNumber@Buffer:
   484                           	opt stack 0
   485  00005A                     ___lldiv@divisor:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x23
   489  00005A                     	ds	2
   490  00005C                     BCDsendNumber@LoopIndex:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x25
   494  00005C                     	ds	2
   495  00005E                     ___lldiv@quotient:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x27
   499  00005E                     	ds	4
   500  000062                     ___lldiv@counter:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x2B
   504  000062                     	ds	1
   505  000063                     ??_SpeedCalcManage:
   506  000063                     ?_GetAvgSpeed:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x2C
   510  000063                     	ds	2
   511  000065                     SpeedCalcManage@HundredMeterReference:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x2E
   515  000065                     	ds	2
   516  000067                     
   517                           ; 1 bytes @ 0x30
   518  000067                     	ds	2
   519  000069                     tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           
   526                           ; 1 bytes @ 0x32
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 78 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels required when called:   10
   552 ;; This function calls:
   553 ;;		_Start_App
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  00137E                     __ptext0:
   561                           	opt stack 0
   562  00137E                     _main:
   563                           	opt stack 21
   564                           
   565                           ;main.c: 80: Start_App();
   566                           
   567                           ;incstack = 0
   568  00137E  ECDE  F007         	call	_Start_App	;wreg free
   569                           
   570                           ;main.c: 81: return;
   571  001382  EF07  F000         	goto	start
   572  001386                     __end_of_main:
   573                           	opt stack 0
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           
   581 ;; *************** function _Start_App *****************
   582 ;; Defined at:
   583 ;;		line 21 in file "../../../../OS/OS_manage/OS_manage.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   597 ;;      Params:         0       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    9
   604 ;; This function calls:
   605 ;;		_APP_INITIALIZE
   606 ;;		_BCDInitialize
   607 ;;		_CreateTask
   608 ;;		_HWI_DIGITAL_INITIALIZE
   609 ;;		_HWI_INTERRUPTS_INTITALIZE
   610 ;;		_RunScheduler
   611 ;;		_SpeedCalcNotifyInitialize
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text1
   618  000FBC                     __ptext1:
   619                           	opt stack 0
   620  000FBC                     _Start_App:
   621                           	opt stack 21
   622                           
   623                           ;OS_manage.c: 23: HWI_INTERRUPTS_INTITALIZE();
   624                           
   625                           ;incstack = 0
   626  000FBC  EC94  F008         	call	_HWI_INTERRUPTS_INTITALIZE	;wreg free
   627                           
   628                           ;OS_manage.c: 24: HWI_DIGITAL_INITIALIZE();
   629  000FC0  EC83  F009         	call	_HWI_DIGITAL_INITIALIZE	;wreg free
   630                           
   631                           ;OS_manage.c: 25: SpeedCalcNotifyInitialize();
   632  000FC4  ECDA  F009         	call	_SpeedCalcNotifyInitialize	;wreg free
   633                           
   634                           ;OS_manage.c: 26: APP_INITIALIZE();
   635  000FC8  ECDB  F009         	call	_APP_INITIALIZE	;wreg free
   636                           
   637                           ;OS_manage.c: 27: BCDInitialize(1);
   638  000FCC  0E01               	movlw	1
   639  000FCE  ECC3  F009         	call	_BCDInitialize
   640                           
   641                           ;OS_manage.c: 29: CreateTask( ManageSpeedCalc, (unsigned char)0 , (unsigned char) 20);
   642  000FD2  0E9A               	movlw	low _ManageSpeedCalc
   643  000FD4  6E4A               	movwf	CreateTask@MangeFunction,c
   644  000FD6  0E13               	movlw	high _ManageSpeedCalc
   645  000FD8  6E4B               	movwf	CreateTask@MangeFunction+1,c
   646  000FDA  0E00               	movlw	0
   647  000FDC  6E4C               	movwf	CreateTask@TaskId,c
   648  000FDE  0E14               	movlw	20
   649  000FE0  6E4D               	movwf	CreateTask@Period,c
   650  000FE2  EC14  F008         	call	_CreateTask	;wreg free
   651                           
   652                           ;OS_manage.c: 31: CreateTask( ManageApplication, (unsigned char)2 , (unsigned char) 100)
      +                          ;
   653  000FE6  0E94               	movlw	low _ManageApplication
   654  000FE8  6E4A               	movwf	CreateTask@MangeFunction,c
   655  000FEA  0E13               	movlw	high _ManageApplication
   656  000FEC  6E4B               	movwf	CreateTask@MangeFunction+1,c
   657  000FEE  0E02               	movlw	2
   658  000FF0  6E4C               	movwf	CreateTask@TaskId,c
   659  000FF2  0E64               	movlw	100
   660  000FF4  6E4D               	movwf	CreateTask@Period,c
   661  000FF6  EC14  F008         	call	_CreateTask	;wreg free
   662                           
   663                           ;OS_manage.c: 33: CreateTask( DisplayAlphaNumeric, (unsigned char)1 , (unsigned char) 4)
      +                          ;
   664  000FFA  0E8E               	movlw	low _DisplayAlphaNumeric
   665  000FFC  6E4A               	movwf	CreateTask@MangeFunction,c
   666  000FFE  0E13               	movlw	high _DisplayAlphaNumeric
   667  001000  6E4B               	movwf	CreateTask@MangeFunction+1,c
   668  001002  0E01               	movlw	1
   669  001004  6E4C               	movwf	CreateTask@TaskId,c
   670  001006  0E04               	movlw	4
   671  001008  6E4D               	movwf	CreateTask@Period,c
   672  00100A  EC14  F008         	call	_CreateTask	;wreg free
   673                           
   674                           ;OS_manage.c: 35: CreateTask( ManageDrivers , (unsigned char)3 , (unsigned char) 10);
   675  00100E  0E20               	movlw	low _ManageDrivers
   676  001010  6E4A               	movwf	CreateTask@MangeFunction,c
   677  001012  0E13               	movlw	high _ManageDrivers
   678  001014  6E4B               	movwf	CreateTask@MangeFunction+1,c
   679  001016  0E03               	movlw	3
   680  001018  6E4C               	movwf	CreateTask@TaskId,c
   681  00101A  0E0A               	movlw	10
   682  00101C  6E4D               	movwf	CreateTask@Period,c
   683  00101E  EC14  F008         	call	_CreateTask	;wreg free
   684                           
   685                           ;OS_manage.c: 37: RunScheduler();
   686  001022  EC57  F007         	call	_RunScheduler	;wreg free
   687  001026  0012               	return		;funcret
   688  001028                     __end_of_Start_App:
   689                           	opt stack 0
   690                           tblptru	equ	0xFF8
   691                           tblptrh	equ	0xFF7
   692                           tblptrl	equ	0xFF6
   693                           tablat	equ	0xFF5
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           
   697 ;; *************** function _SpeedCalcNotifyInitialize *****************
   698 ;; Defined at:
   699 ;;		line 24 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		None
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   713 ;;      Params:         0       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    4
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_Start_App
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text2
   728  0013B4                     __ptext2:
   729                           	opt stack 0
   730  0013B4                     _SpeedCalcNotifyInitialize:
   731                           	opt stack 25
   732                           
   733                           ;incstack = 0
   734  0013B4  0012               	return		;funcret
   735  0013B6                     __end_of_SpeedCalcNotifyInitialize:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           wreg	equ	0xFE8
   743                           
   744 ;; *************** function _RunScheduler *****************
   745 ;; Defined at:
   746 ;;		line 25 in file "../../../../OS/Scheduler/Scheduler.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          2       0       0       0       0       0       0
   763 ;;      Totals:         2       0       0       0       0       0       0
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    8
   767 ;; This function calls:
   768 ;;		_DisplayAlphaNumeric
   769 ;;		_ManageApplication
   770 ;;		_ManageDrivers
   771 ;;		_ManageSpeedCalc
   772 ;; This function is called by:
   773 ;;		_Start_App
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text3
   778  000EAE                     __ptext3:
   779                           	opt stack 0
   780  000EAE                     _RunScheduler:
   781                           	opt stack 21
   782  000EAE                     
   783                           ;Scheduler.c: 29: {
   784                           ;Scheduler.c: 30: for(TaskIndex = (unsigned char)0 ; TaskIndex < 4 ; TaskIndex++)
   785  000EAE  0E00               	movlw	0
   786  000EB0  6E27               	movwf	RunScheduler@TaskIndex,c
   787  000EB2                     l2021:
   788  000EB2  0E03               	movlw	3
   789  000EB4  6427               	cpfsgt	RunScheduler@TaskIndex,c
   790  000EB6  D001               	goto	l2025
   791  000EB8  D7FA               	goto	l2019
   792  000EBA                     l2025:
   793                           
   794                           ;Scheduler.c: 31: {
   795                           ;Scheduler.c: 32: if(ArrayTask[TaskIndex].Period <= ArrayTask[TaskIndex].TickCounter)
   796  000EBA  5027               	movf	RunScheduler@TaskIndex,w,c
   797  000EBC  0D04               	mullw	4
   798  000EBE  0E02               	movlw	2
   799  000EC0  26F3               	addwf	prodl,f,c
   800  000EC2  0E00               	movlw	0
   801  000EC4  22F4               	addwfc	prodh,f,c
   802  000EC6  0E01               	movlw	low _ArrayTask
   803  000EC8  24F3               	addwf	prodl,w,c
   804  000ECA  6ED9               	movwf	fsr2l,c
   805  000ECC  0E00               	movlw	high _ArrayTask
   806  000ECE  20F4               	addwfc	prodh,w,c
   807  000ED0  6EDA               	movwf	fsr2h,c
   808  000ED2  5027               	movf	RunScheduler@TaskIndex,w,c
   809  000ED4  0D04               	mullw	4
   810  000ED6  0E03               	movlw	3
   811  000ED8  26F3               	addwf	prodl,f,c
   812  000EDA  0E00               	movlw	0
   813  000EDC  22F4               	addwfc	prodh,f,c
   814  000EDE  0E01               	movlw	low _ArrayTask
   815  000EE0  24F3               	addwf	prodl,w,c
   816  000EE2  6EE1               	movwf	fsr1l,c
   817  000EE4  0E00               	movlw	high _ArrayTask
   818  000EE6  20F4               	addwfc	prodh,w,c
   819  000EE8  6EE2               	movwf	fsr1h,c
   820  000EEA  50DE               	movf	postinc2,w,c
   821  000EEC  5CE6               	subwf	postinc1,w,c
   822  000EEE  A0D8               	btfss	status,0,c
   823  000EF0  D022               	goto	l2031
   824                           
   825                           ;Scheduler.c: 33: {
   826                           ;Scheduler.c: 34: ArrayTask[TaskIndex].ManageFunction();
   827  000EF2  5027               	movf	RunScheduler@TaskIndex,w,c
   828  000EF4  0D04               	mullw	4
   829  000EF6  0E01               	movlw	low _ArrayTask
   830  000EF8  24F3               	addwf	prodl,w,c
   831  000EFA  6ED9               	movwf	fsr2l,c
   832  000EFC  0E00               	movlw	high _ArrayTask
   833  000EFE  20F4               	addwfc	prodh,w,c
   834  000F00  6EDA               	movwf	fsr2h,c
   835  000F02  D801               	call	u1288
   836  000F04  D00A               	goto	l2029
   837  000F06                     u1288:
   838  000F06  0005               	push	
   839  000F08  6EFA               	movwf	pclath,c
   840  000F0A  50DE               	movf	postinc2,w,c
   841  000F0C  6EFD               	movwf	tosl,c
   842  000F0E  50DE               	movf	postinc2,w,c
   843  000F10  6EFE               	movwf	tosh,c
   844  000F12  50F8               	movf	tblptru,w,c
   845  000F14  6EFF               	movwf	tosu,c
   846  000F16  50FA               	movf	pclath,w,c
   847  000F18  0012               	return		;indir
   848  000F1A                     l2029:
   849                           
   850                           ;Scheduler.c: 35: ArrayTask[TaskIndex].TickCounter = (unsigned char)0;
   851  000F1A  5027               	movf	RunScheduler@TaskIndex,w,c
   852  000F1C  0D04               	mullw	4
   853  000F1E  0E03               	movlw	3
   854  000F20  26F3               	addwf	prodl,f,c
   855  000F22  0E00               	movlw	0
   856  000F24  22F4               	addwfc	prodh,f,c
   857  000F26  0E01               	movlw	low _ArrayTask
   858  000F28  24F3               	addwf	prodl,w,c
   859  000F2A  6ED9               	movwf	fsr2l,c
   860  000F2C  0E00               	movlw	high _ArrayTask
   861  000F2E  20F4               	addwfc	prodh,w,c
   862  000F30  6EDA               	movwf	fsr2h,c
   863  000F32  0E00               	movlw	0
   864  000F34  6EDF               	movwf	indf2,c
   865  000F36                     l2031:
   866  000F36  2A27               	incf	RunScheduler@TaskIndex,f,c
   867  000F38  D7BC               	goto	l2021
   868  000F3A                     __end_of_RunScheduler:
   869                           	opt stack 0
   870                           tosu	equ	0xFFF
   871                           tosh	equ	0xFFE
   872                           tosl	equ	0xFFD
   873                           pclath	equ	0xFFA
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           prodh	equ	0xFF4
   879                           prodl	equ	0xFF3
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postinc1	equ	0xFE6
   883                           fsr1h	equ	0xFE2
   884                           fsr1l	equ	0xFE1
   885                           indf2	equ	0xFDF
   886                           postinc2	equ	0xFDE
   887                           fsr2h	equ	0xFDA
   888                           fsr2l	equ	0xFD9
   889                           status	equ	0xFD8
   890                           
   891 ;; *************** function _ManageDrivers *****************
   892 ;; Defined at:
   893 ;;		line 54 in file "../../../../OS/OS_manage/OS_manage.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  LoopIndex       1   26[COMRAM] unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         0       0       0       0       0       0       0
   908 ;;      Locals:         1       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0
   910 ;;      Totals:         1       0       0       0       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    6
   914 ;; This function calls:
   915 ;;		_MangeKeys
   916 ;; This function is called by:
   917 ;;		_Start_App
   918 ;;		_RunScheduler
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  001320                     __ptext4:
   924                           	opt stack 0
   925  001320                     _ManageDrivers:
   926                           	opt stack 22
   927                           
   928                           ;OS_manage.c: 56: unsigned char LoopIndex;
   929                           ;OS_manage.c: 57: for(LoopIndex = (unsigned char)0 ; LoopIndex < (unsigned char)2 ; Loop
      +                          Index++)
   930                           
   931                           ;incstack = 0
   932  001320  0E00               	movlw	0
   933  001322  6E51               	movwf	ManageDrivers@LoopIndex,c
   934  001324                     l1315:
   935  001324  0E01               	movlw	1
   936  001326  6451               	cpfsgt	ManageDrivers@LoopIndex,c
   937  001328  D001               	goto	l1319
   938  00132A  0012               	return	
   939  00132C                     l1319:
   940                           
   941                           ;OS_manage.c: 58: {
   942                           ;OS_manage.c: 59: MangeKeys(LoopIndex);
   943  00132C  5051               	movf	ManageDrivers@LoopIndex,w,c
   944  00132E  EC0F  F003         	call	_MangeKeys
   945  001332  2A51               	incf	ManageDrivers@LoopIndex,f,c
   946  001334  D7F7               	goto	l1315
   947  001336                     __end_of_ManageDrivers:
   948                           	opt stack 0
   949                           tosu	equ	0xFFF
   950                           tosh	equ	0xFFE
   951                           tosl	equ	0xFFD
   952                           pclath	equ	0xFFA
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           prodh	equ	0xFF4
   958                           prodl	equ	0xFF3
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postinc1	equ	0xFE6
   962                           fsr1h	equ	0xFE2
   963                           fsr1l	equ	0xFE1
   964                           indf2	equ	0xFDF
   965                           postinc2	equ	0xFDE
   966                           fsr2h	equ	0xFDA
   967                           fsr2l	equ	0xFD9
   968                           status	equ	0xFD8
   969                           
   970 ;; *************** function _DisplayAlphaNumeric *****************
   971 ;; Defined at:
   972 ;;		line 41 in file "../../../../OS/OS_manage/OS_manage.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   986 ;;      Params:         0       0       0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0
   989 ;;      Totals:         0       0       0       0       0       0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    6
   993 ;; This function calls:
   994 ;;		_BCDManage7segment
   995 ;; This function is called by:
   996 ;;		_Start_App
   997 ;;		_RunScheduler
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text5
  1002  00138E                     __ptext5:
  1003                           	opt stack 0
  1004  00138E                     _DisplayAlphaNumeric:
  1005                           	opt stack 22
  1006                           
  1007                           ;OS_manage.c: 43: BCDManage7segment();
  1008                           
  1009                           ;incstack = 0
  1010  00138E  ECC3  F006         	call	_BCDManage7segment	;wreg free
  1011  001392  0012               	return		;funcret
  1012  001394                     __end_of_DisplayAlphaNumeric:
  1013                           	opt stack 0
  1014                           tosu	equ	0xFFF
  1015                           tosh	equ	0xFFE
  1016                           tosl	equ	0xFFD
  1017                           pclath	equ	0xFFA
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           prodh	equ	0xFF4
  1023                           prodl	equ	0xFF3
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           postinc1	equ	0xFE6
  1027                           fsr1h	equ	0xFE2
  1028                           fsr1l	equ	0xFE1
  1029                           indf2	equ	0xFDF
  1030                           postinc2	equ	0xFDE
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8
  1034                           
  1035 ;; *************** function _ManageApplication *****************
  1036 ;; Defined at:
  1037 ;;		line 45 in file "../../../../OS/OS_manage/OS_manage.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         0       0       0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    7
  1058 ;; This function calls:
  1059 ;;		_APP_MANAGE
  1060 ;; This function is called by:
  1061 ;;		_Start_App
  1062 ;;		_RunScheduler
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text6
  1067  001394                     __ptext6:
  1068                           	opt stack 0
  1069  001394                     _ManageApplication:
  1070                           	opt stack 21
  1071                           
  1072                           ;OS_manage.c: 47: APP_MANAGE();
  1073                           
  1074                           ;incstack = 0
  1075  001394  ECA1  F005         	call	_APP_MANAGE	;wreg free
  1076  001398  0012               	return		;funcret
  1077  00139A                     __end_of_ManageApplication:
  1078                           	opt stack 0
  1079                           tosu	equ	0xFFF
  1080                           tosh	equ	0xFFE
  1081                           tosl	equ	0xFFD
  1082                           pclath	equ	0xFFA
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           prodh	equ	0xFF4
  1088                           prodl	equ	0xFF3
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postinc1	equ	0xFE6
  1092                           fsr1h	equ	0xFE2
  1093                           fsr1l	equ	0xFE1
  1094                           indf2	equ	0xFDF
  1095                           postinc2	equ	0xFDE
  1096                           fsr2h	equ	0xFDA
  1097                           fsr2l	equ	0xFD9
  1098                           status	equ	0xFD8
  1099                           
  1100 ;; *************** function _ManageSpeedCalc *****************
  1101 ;; Defined at:
  1102 ;;		line 49 in file "../../../../OS/OS_manage/OS_manage.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         0       0       0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    6
  1123 ;; This function calls:
  1124 ;;		_SpeedCalcManage
  1125 ;; This function is called by:
  1126 ;;		_Start_App
  1127 ;;		_RunScheduler
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text7
  1132  00139A                     __ptext7:
  1133                           	opt stack 0
  1134  00139A                     _ManageSpeedCalc:
  1135                           	opt stack 22
  1136                           
  1137                           ;OS_manage.c: 51: SpeedCalcManage();
  1138                           
  1139                           ;incstack = 0
  1140  00139A  EC0F  F007         	call	_SpeedCalcManage	;wreg free
  1141  00139E  0012               	return		;funcret
  1142  0013A0                     __end_of_ManageSpeedCalc:
  1143                           	opt stack 0
  1144                           tosu	equ	0xFFF
  1145                           tosh	equ	0xFFE
  1146                           tosl	equ	0xFFD
  1147                           pclath	equ	0xFFA
  1148                           tblptru	equ	0xFF8
  1149                           tblptrh	equ	0xFF7
  1150                           tblptrl	equ	0xFF6
  1151                           tablat	equ	0xFF5
  1152                           prodh	equ	0xFF4
  1153                           prodl	equ	0xFF3
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postinc1	equ	0xFE6
  1157                           fsr1h	equ	0xFE2
  1158                           fsr1l	equ	0xFE1
  1159                           indf2	equ	0xFDF
  1160                           postinc2	equ	0xFDE
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _SpeedCalcManage *****************
  1166 ;; Defined at:
  1167 ;;		line 63 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  HundredMeter    2   46[COMRAM] unsigned short 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1181 ;;      Params:         0       0       0       0       0       0       0
  1182 ;;      Locals:         2       0       0       0       0       0       0
  1183 ;;      Temps:          2       0       0       0       0       0       0
  1184 ;;      Totals:         4       0       0       0       0       0       0
  1185 ;;Total ram usage:        4 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    5
  1188 ;; This function calls:
  1189 ;;		___lldiv
  1190 ;;		___lwdiv
  1191 ;;		___wmul
  1192 ;; This function is called by:
  1193 ;;		_ManageSpeedCalc
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text8
  1198  000E1E                     __ptext8:
  1199                           	opt stack 0
  1200  000E1E                     _SpeedCalcManage:
  1201                           	opt stack 22
  1202                           
  1203                           ;SpeedCalc.c: 65: unsigned short HundredMeterReference;
  1204                           ;SpeedCalc.c: 67: LapTimeTenthMilli = (HWtimerCount/(unsigned short)100) +
  1205                           ;SpeedCalc.c: 68: ((unsigned short)TimerOVFLcount * (unsigned short)655);
  1206                           
  1207                           ;incstack = 0
  1208  000E1E  C01D  F04A         	movff	_HWtimerCount,___lwdiv@dividend	;volatile
  1209  000E22  C01E  F04B         	movff	_HWtimerCount+1,___lwdiv@dividend+1	;volatile
  1210  000E26  0E00               	movlw	0
  1211  000E28  6E4D               	movwf	___lwdiv@divisor+1,c
  1212  000E2A  0E64               	movlw	100
  1213  000E2C  6E4C               	movwf	___lwdiv@divisor,c
  1214  000E2E  EC6B  F008         	call	___lwdiv	;wreg free
  1215  000E32  C04A  F063         	movff	?___lwdiv,??_SpeedCalcManage
  1216  000E36  C04B  F064         	movff	?___lwdiv+1,??_SpeedCalcManage+1
  1217  000E3A  C029  F04A         	movff	_TimerOVFLcount,___wmul@multiplier
  1218  000E3E  6A4B               	clrf	___wmul@multiplier+1,c
  1219  000E40  0E02               	movlw	2
  1220  000E42  6E4D               	movwf	___wmul@multiplicand+1,c
  1221  000E44  0E8F               	movlw	143
  1222  000E46  6E4C               	movwf	___wmul@multiplicand,c
  1223  000E48  EC5D  F009         	call	___wmul	;wreg free
  1224  000E4C  504A               	movf	?___wmul,w,c
  1225  000E4E  2463               	addwf	??_SpeedCalcManage,w,c
  1226  000E50  6E1F               	movwf	_LapTimeTenthMilli,c
  1227  000E52  504B               	movf	?___wmul+1,w,c
  1228  000E54  2064               	addwfc	??_SpeedCalcManage+1,w,c
  1229  000E56  6E20               	movwf	_LapTimeTenthMilli+1,c
  1230                           
  1231                           ;SpeedCalc.c: 70: LapDistanceCounter += LapCounter;
  1232  000E58  502A               	movf	_LapCounter,w,c	;volatile
  1233  000E5A  2621               	addwf	_LapDistanceCounter,f,c
  1234  000E5C  0E00               	movlw	0
  1235  000E5E  2222               	addwfc	_LapDistanceCounter+1,f,c
  1236                           
  1237                           ;SpeedCalc.c: 72: LapCounter = (unsigned char)0;
  1238  000E60  0E00               	movlw	0
  1239  000E62  6E2A               	movwf	_LapCounter,c	;volatile
  1240                           
  1241                           ;SpeedCalc.c: 74: HundredMeterReference = (unsigned short)((unsigned long)100000 /
  1242                           ;SpeedCalc.c: 75: (unsigned long)CircumFactor);
  1243  000E64  0EA0               	movlw	160
  1244  000E66  6E56               	movwf	___lldiv@dividend,c
  1245  000E68  0E86               	movlw	134
  1246  000E6A  6E57               	movwf	___lldiv@dividend+1,c
  1247  000E6C  0E01               	movlw	1
  1248  000E6E  6E58               	movwf	___lldiv@dividend+2,c
  1249  000E70  0E00               	movlw	0
  1250  000E72  6E59               	movwf	___lldiv@dividend+3,c
  1251  000E74  C069  F05A         	movff	_CircumFactor,___lldiv@divisor
  1252  000E78  C06A  F05B         	movff	_CircumFactor+1,___lldiv@divisor+1
  1253  000E7C  6A5C               	clrf	___lldiv@divisor+2,c
  1254  000E7E  6A5D               	clrf	___lldiv@divisor+3,c
  1255  000E80  EC9D  F007         	call	___lldiv	;wreg free
  1256  000E84  C056  F065         	movff	?___lldiv,SpeedCalcManage@HundredMeterReference
  1257  000E88  C057  F066         	movff	?___lldiv+1,SpeedCalcManage@HundredMeterReference+1
  1258                           
  1259                           ;SpeedCalc.c: 77: if(LapDistanceCounter >= HundredMeterReference)
  1260  000E8C  5065               	movf	SpeedCalcManage@HundredMeterReference,w,c
  1261  000E8E  5C21               	subwf	_LapDistanceCounter,w,c
  1262  000E90  5066               	movf	SpeedCalcManage@HundredMeterReference+1,w,c
  1263  000E92  5822               	subwfb	_LapDistanceCounter+1,w,c
  1264  000E94  A0D8               	btfss	status,0,c
  1265  000E96  0012               	return	
  1266                           
  1267                           ;SpeedCalc.c: 78: {
  1268                           ;SpeedCalc.c: 79: DistTravelCntr ++;
  1269  000E98  0E01               	movlw	1
  1270  000E9A  2619               	addwf	_DistTravelCntr,f,c
  1271  000E9C  0E00               	movlw	0
  1272  000E9E  221A               	addwfc	_DistTravelCntr+1,f,c
  1273  000EA0  221B               	addwfc	_DistTravelCntr+2,f,c
  1274  000EA2  221C               	addwfc	_DistTravelCntr+3,f,c
  1275                           
  1276                           ;SpeedCalc.c: 80: LapDistanceCounter -= HundredMeterReference;
  1277  000EA4  5065               	movf	SpeedCalcManage@HundredMeterReference,w,c
  1278  000EA6  5E21               	subwf	_LapDistanceCounter,f,c
  1279  000EA8  5066               	movf	SpeedCalcManage@HundredMeterReference+1,w,c
  1280  000EAA  5A22               	subwfb	_LapDistanceCounter+1,f,c
  1281                           
  1282                           ;SpeedCalc.c: 81: }
  1283  000EAC  0012               	return	
  1284  000EAE                     __end_of_SpeedCalcManage:
  1285                           	opt stack 0
  1286                           tosu	equ	0xFFF
  1287                           tosh	equ	0xFFE
  1288                           tosl	equ	0xFFD
  1289                           pclath	equ	0xFFA
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           prodh	equ	0xFF4
  1295                           prodl	equ	0xFF3
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postinc1	equ	0xFE6
  1299                           fsr1h	equ	0xFE2
  1300                           fsr1l	equ	0xFE1
  1301                           indf2	equ	0xFDF
  1302                           postinc2	equ	0xFDE
  1303                           fsr2h	equ	0xFDA
  1304                           fsr2l	equ	0xFD9
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _MangeKeys *****************
  1308 ;; Defined at:
  1309 ;;		line 29 in file "../../../../Common/Driver/Key/Key.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  KeyID           1    wreg     unsigned char 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  KeyID           1   25[COMRAM] unsigned char 
  1314 ;;  HWIreading      1   24[COMRAM] unsigned char 
  1315 ;;  KeyState        1   23[COMRAM] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         0       0       0       0       0       0       0
  1326 ;;      Locals:         3       0       0       0       0       0       0
  1327 ;;      Temps:          2       0       0       0       0       0       0
  1328 ;;      Totals:         5       0       0       0       0       0       0
  1329 ;;Total ram usage:        5 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    5
  1332 ;; This function calls:
  1333 ;;		_HWI_DIGI_READ
  1334 ;; This function is called by:
  1335 ;;		_ManageDrivers
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text9
  1340  00061E                     __ptext9:
  1341                           	opt stack 0
  1342  00061E                     _MangeKeys:
  1343                           	opt stack 22
  1344                           
  1345                           ;incstack = 0
  1346                           ;MangeKeys@KeyID stored from wreg
  1347  00061E  6E50               	movwf	MangeKeys@KeyID,c
  1348                           
  1349                           ;Key.c: 31: unsigned char HWIreading;
  1350                           ;Key.c: 32: unsigned char KeyState;
  1351                           ;Key.c: 34: KeyState = KeyInternalData[KeyID].KeyState & (unsigned char)0x7F;
  1352  000620  5050               	movf	MangeKeys@KeyID,w,c
  1353  000622  0D03               	mullw	3
  1354  000624  0E30               	movlw	low _KeyInternalData
  1355  000626  24F3               	addwf	prodl,w,c
  1356  000628  6ED9               	movwf	fsr2l,c
  1357  00062A  0E00               	movlw	high _KeyInternalData
  1358  00062C  20F4               	addwfc	prodh,w,c
  1359  00062E  6EDA               	movwf	fsr2h,c
  1360  000630  50DF               	movf	indf2,w,c
  1361  000632  0B7F               	andlw	127
  1362  000634  6E4E               	movwf	MangeKeys@KeyState,c
  1363                           
  1364                           ;Key.c: 35: HWIreading = HWI_DIGI_READ(KeyArrayConfig[KeyID].HWI_ID);
  1365  000636  5050               	movf	MangeKeys@KeyID,w,c
  1366  000638  0D08               	mullw	8
  1367  00063A  0E01               	movlw	low _KeyArrayConfig
  1368  00063C  24F3               	addwf	prodl,w,c
  1369  00063E  6EF6               	movwf	tblptrl,c
  1370  000640  0E06               	movlw	high _KeyArrayConfig
  1371  000642  20F4               	addwfc	prodh,w,c
  1372  000644  6EF7               	movwf	tblptrh,c
  1373  000646                     	if	0	;There are less than 3 active tblptr bytes
  1374  000646                     	endif
  1375  000646  0008               	tblrd		*
  1376  000648  50F5               	movf	tablat,w,c
  1377  00064A  EC03  F009         	call	_HWI_DIGI_READ
  1378  00064E  6E4F               	movwf	MangeKeys@HWIreading,c
  1379                           
  1380                           ;Key.c: 37: switch(KeyState)
  1381  000650  D1F2               	goto	l1285
  1382  000652                     l1239:
  1383                           
  1384                           ;Key.c: 40: if( KeyArrayConfig[KeyID].ActiveValue == HWIreading)
  1385  000652  5050               	movf	MangeKeys@KeyID,w,c
  1386  000654  0D08               	mullw	8
  1387  000656  0E01               	movlw	1
  1388  000658  26F3               	addwf	prodl,f,c
  1389  00065A  0E00               	movlw	0
  1390  00065C  22F4               	addwfc	prodh,f,c
  1391  00065E  0E01               	movlw	low _KeyArrayConfig
  1392  000660  24F3               	addwf	prodl,w,c
  1393  000662  6EF6               	movwf	tblptrl,c
  1394  000664  0E06               	movlw	high _KeyArrayConfig
  1395  000666  20F4               	addwfc	prodh,w,c
  1396  000668  6EF7               	movwf	tblptrh,c
  1397  00066A                     	if	0	;There are less than 3 active tblptr bytes
  1398  00066A                     	endif
  1399  00066A  0008               	tblrd		*
  1400  00066C  50F5               	movf	tablat,w,c
  1401  00066E  184F               	xorwf	MangeKeys@HWIreading,w,c
  1402  000670  A4D8               	btfss	status,2,c
  1403  000672  D059               	goto	l1249
  1404                           
  1405                           ;Key.c: 41: {
  1406                           ;Key.c: 42: KeyInternalData[KeyID].KeyCounter++;
  1407  000674  5050               	movf	MangeKeys@KeyID,w,c
  1408  000676  0D03               	mullw	3
  1409  000678  0E01               	movlw	1
  1410  00067A  26F3               	addwf	prodl,f,c
  1411  00067C  0E00               	movlw	0
  1412  00067E  22F4               	addwfc	prodh,f,c
  1413  000680  0E30               	movlw	low _KeyInternalData
  1414  000682  24F3               	addwf	prodl,w,c
  1415  000684  6ED9               	movwf	fsr2l,c
  1416  000686  0E00               	movlw	high _KeyInternalData
  1417  000688  20F4               	addwfc	prodh,w,c
  1418  00068A  6EDA               	movwf	fsr2h,c
  1419  00068C  2ADE               	incf	postinc2,f,c
  1420  00068E  0E00               	movlw	0
  1421  000690  22DD               	addwfc	postdec2,f,c
  1422                           
  1423                           ;Key.c: 43: if(KeyArrayConfig[KeyID].ShortPress ==
  1424                           ;Key.c: 44: KeyInternalData[KeyID].KeyCounter)
  1425  000692  5050               	movf	MangeKeys@KeyID,w,c
  1426  000694  0D03               	mullw	3
  1427  000696  0E01               	movlw	1
  1428  000698  26F3               	addwf	prodl,f,c
  1429  00069A  0E00               	movlw	0
  1430  00069C  22F4               	addwfc	prodh,f,c
  1431  00069E  0E30               	movlw	low _KeyInternalData
  1432  0006A0  24F3               	addwf	prodl,w,c
  1433  0006A2  6ED9               	movwf	fsr2l,c
  1434  0006A4  0E00               	movlw	high _KeyInternalData
  1435  0006A6  20F4               	addwfc	prodh,w,c
  1436  0006A8  6EDA               	movwf	fsr2h,c
  1437  0006AA  5050               	movf	MangeKeys@KeyID,w,c
  1438  0006AC  0D08               	mullw	8
  1439  0006AE  0E04               	movlw	4
  1440  0006B0  26F3               	addwf	prodl,f,c
  1441  0006B2  0E00               	movlw	0
  1442  0006B4  22F4               	addwfc	prodh,f,c
  1443  0006B6  0E01               	movlw	low _KeyArrayConfig
  1444  0006B8  24F3               	addwf	prodl,w,c
  1445  0006BA  6EF6               	movwf	tblptrl,c
  1446  0006BC  0E06               	movlw	high _KeyArrayConfig
  1447  0006BE  20F4               	addwfc	prodh,w,c
  1448  0006C0  6EF7               	movwf	tblptrh,c
  1449  0006C2                     	if	0	;There are less than 3 active tblptr bytes
  1450  0006C2                     	endif
  1451  0006C2  50DE               	movf	postinc2,w,c
  1452  0006C4  0009               	tblrd		*+
  1453  0006C6  18F5               	xorwf	tablat,w,c
  1454  0006C8  E104               	bnz	u311
  1455  0006CA  50DE               	movf	postinc2,w,c
  1456  0006CC  0009               	tblrd		*+
  1457  0006CE  18F5               	xorwf	tablat,w,c
  1458  0006D0  A4D8               	btfss	status,2,c
  1459  0006D2                     u311:
  1460  0006D2  0012               	return	
  1461                           
  1462                           ;Key.c: 45: {
  1463                           ;Key.c: 46: KeyInternalData[KeyID].KeyState = (unsigned char)0x81;
  1464  0006D4  5050               	movf	MangeKeys@KeyID,w,c
  1465  0006D6  0D03               	mullw	3
  1466  0006D8  0E30               	movlw	low _KeyInternalData
  1467  0006DA  24F3               	addwf	prodl,w,c
  1468  0006DC  6ED9               	movwf	fsr2l,c
  1469  0006DE  0E00               	movlw	high _KeyInternalData
  1470  0006E0  20F4               	addwfc	prodh,w,c
  1471  0006E2  6EDA               	movwf	fsr2h,c
  1472  0006E4  0E81               	movlw	129
  1473  0006E6  6EDF               	movwf	indf2,c
  1474                           
  1475                           ;Key.c: 47: KeyInternalData[KeyID].KeyCounter =
  1476                           ;Key.c: 48: KeyArrayConfig[KeyID].ReleaseTicks;
  1477  0006E8  5050               	movf	MangeKeys@KeyID,w,c
  1478  0006EA  0D08               	mullw	8
  1479  0006EC  0E02               	movlw	2
  1480  0006EE  26F3               	addwf	prodl,f,c
  1481  0006F0  0E00               	movlw	0
  1482  0006F2  22F4               	addwfc	prodh,f,c
  1483  0006F4  0E01               	movlw	low _KeyArrayConfig
  1484  0006F6  24F3               	addwf	prodl,w,c
  1485  0006F8  6EF6               	movwf	tblptrl,c
  1486  0006FA  0E06               	movlw	high _KeyArrayConfig
  1487  0006FC  20F4               	addwfc	prodh,w,c
  1488  0006FE  6EF7               	movwf	tblptrh,c
  1489  000700                     	if	0	;There are less than 3 active tblptr bytes
  1490  000700                     	endif
  1491  000700  5050               	movf	MangeKeys@KeyID,w,c
  1492  000702  0D03               	mullw	3
  1493  000704  0E01               	movlw	1
  1494  000706  26F3               	addwf	prodl,f,c
  1495  000708  0E00               	movlw	0
  1496  00070A  22F4               	addwfc	prodh,f,c
  1497  00070C  0E30               	movlw	low _KeyInternalData
  1498  00070E  24F3               	addwf	prodl,w,c
  1499  000710  6ED9               	movwf	fsr2l,c
  1500  000712  0E00               	movlw	high _KeyInternalData
  1501  000714  20F4               	addwfc	prodh,w,c
  1502  000716  6EDA               	movwf	fsr2h,c
  1503  000718  0009               	tblrd		*+
  1504  00071A  CFF5 FFDE          	movff	tablat,postinc2
  1505  00071E  0008               	tblrd		*
  1506  000720  CFF5 FFDD          	movff	tablat,postdec2
  1507                           
  1508                           ;Key.c: 49: }
  1509                           ;Key.c: 50: }
  1510  000724  0012               	return	
  1511  000726                     l1249:
  1512                           
  1513                           ;Key.c: 51: else
  1514                           ;Key.c: 52: {
  1515                           ;Key.c: 53: KeyInternalData[KeyID].KeyCounter = (unsigned short)0;
  1516  000726  5050               	movf	MangeKeys@KeyID,w,c
  1517  000728  0D03               	mullw	3
  1518  00072A  0E01               	movlw	1
  1519  00072C  26F3               	addwf	prodl,f,c
  1520  00072E  0E00               	movlw	0
  1521  000730  22F4               	addwfc	prodh,f,c
  1522  000732  0E30               	movlw	low _KeyInternalData
  1523  000734  24F3               	addwf	prodl,w,c
  1524  000736  6ED9               	movwf	fsr2l,c
  1525  000738  0E00               	movlw	high _KeyInternalData
  1526  00073A  20F4               	addwfc	prodh,w,c
  1527  00073C  6EDA               	movwf	fsr2h,c
  1528  00073E  0E00               	movlw	0
  1529  000740  6EDE               	movwf	postinc2,c
  1530  000742  0E00               	movlw	0
  1531  000744  6EDD               	movwf	postdec2,c
  1532                           
  1533                           ;Key.c: 54: }
  1534                           ;Key.c: 55: break;
  1535  000746  0012               	return	
  1536  000748                     l1251:
  1537                           
  1538                           ;Key.c: 57: if( KeyArrayConfig[KeyID].ActiveValue == HWIreading)
  1539  000748  5050               	movf	MangeKeys@KeyID,w,c
  1540  00074A  0D08               	mullw	8
  1541  00074C  0E01               	movlw	1
  1542  00074E  26F3               	addwf	prodl,f,c
  1543  000750  0E00               	movlw	0
  1544  000752  22F4               	addwfc	prodh,f,c
  1545  000754  0E01               	movlw	low _KeyArrayConfig
  1546  000756  24F3               	addwf	prodl,w,c
  1547  000758  6EF6               	movwf	tblptrl,c
  1548  00075A  0E06               	movlw	high _KeyArrayConfig
  1549  00075C  20F4               	addwfc	prodh,w,c
  1550  00075E  6EF7               	movwf	tblptrh,c
  1551  000760                     	if	0	;There are less than 3 active tblptr bytes
  1552  000760                     	endif
  1553  000760  0008               	tblrd		*
  1554  000762  50F5               	movf	tablat,w,c
  1555  000764  184F               	xorwf	MangeKeys@HWIreading,w,c
  1556  000766  A4D8               	btfss	status,2,c
  1557  000768  D098               	goto	l1265
  1558                           
  1559                           ;Key.c: 58: {
  1560                           ;Key.c: 59: if ( KeyInternalData[KeyID].KeyCounter >=
  1561                           ;Key.c: 60: KeyArrayConfig[KeyID].ReleaseTicks)
  1562  00076A  5050               	movf	MangeKeys@KeyID,w,c
  1563  00076C  0D08               	mullw	8
  1564  00076E  0E02               	movlw	2
  1565  000770  26F3               	addwf	prodl,f,c
  1566  000772  0E00               	movlw	0
  1567  000774  22F4               	addwfc	prodh,f,c
  1568  000776  0E01               	movlw	low _KeyArrayConfig
  1569  000778  24F3               	addwf	prodl,w,c
  1570  00077A  6EF6               	movwf	tblptrl,c
  1571  00077C  0E06               	movlw	high _KeyArrayConfig
  1572  00077E  20F4               	addwfc	prodh,w,c
  1573  000780  6EF7               	movwf	tblptrh,c
  1574  000782                     	if	0	;There are less than 3 active tblptr bytes
  1575  000782                     	endif
  1576  000782  5050               	movf	MangeKeys@KeyID,w,c
  1577  000784  0D03               	mullw	3
  1578  000786  0E01               	movlw	1
  1579  000788  26F3               	addwf	prodl,f,c
  1580  00078A  0E00               	movlw	0
  1581  00078C  22F4               	addwfc	prodh,f,c
  1582  00078E  0E30               	movlw	low _KeyInternalData
  1583  000790  24F3               	addwf	prodl,w,c
  1584  000792  6ED9               	movwf	fsr2l,c
  1585  000794  0E00               	movlw	high _KeyInternalData
  1586  000796  20F4               	addwfc	prodh,w,c
  1587  000798  6EDA               	movwf	fsr2h,c
  1588  00079A  0009               	tblrd		*+
  1589  00079C  50F5               	movf	tablat,w,c
  1590  00079E  5CDE               	subwf	postinc2,w,c
  1591  0007A0  0009               	tblrd		*+
  1592  0007A2  50F5               	movf	tablat,w,c
  1593  0007A4  58DE               	subwfb	postinc2,w,c
  1594  0007A6  A0D8               	btfss	status,0,c
  1595  0007A8  D059               	goto	l1263
  1596                           
  1597                           ;Key.c: 61: {
  1598                           ;Key.c: 62: KeyInternalData[KeyID].KeyCounter++;
  1599  0007AA  5050               	movf	MangeKeys@KeyID,w,c
  1600  0007AC  0D03               	mullw	3
  1601  0007AE  0E01               	movlw	1
  1602  0007B0  26F3               	addwf	prodl,f,c
  1603  0007B2  0E00               	movlw	0
  1604  0007B4  22F4               	addwfc	prodh,f,c
  1605  0007B6  0E30               	movlw	low _KeyInternalData
  1606  0007B8  24F3               	addwf	prodl,w,c
  1607  0007BA  6ED9               	movwf	fsr2l,c
  1608  0007BC  0E00               	movlw	high _KeyInternalData
  1609  0007BE  20F4               	addwfc	prodh,w,c
  1610  0007C0  6EDA               	movwf	fsr2h,c
  1611  0007C2  2ADE               	incf	postinc2,f,c
  1612  0007C4  0E00               	movlw	0
  1613  0007C6  22DD               	addwfc	postdec2,f,c
  1614                           
  1615                           ;Key.c: 63: if(KeyArrayConfig[KeyID].LongPress ==
  1616                           ;Key.c: 64: KeyInternalData[KeyID].KeyCounter)
  1617  0007C8  5050               	movf	MangeKeys@KeyID,w,c
  1618  0007CA  0D03               	mullw	3
  1619  0007CC  0E01               	movlw	1
  1620  0007CE  26F3               	addwf	prodl,f,c
  1621  0007D0  0E00               	movlw	0
  1622  0007D2  22F4               	addwfc	prodh,f,c
  1623  0007D4  0E30               	movlw	low _KeyInternalData
  1624  0007D6  24F3               	addwf	prodl,w,c
  1625  0007D8  6ED9               	movwf	fsr2l,c
  1626  0007DA  0E00               	movlw	high _KeyInternalData
  1627  0007DC  20F4               	addwfc	prodh,w,c
  1628  0007DE  6EDA               	movwf	fsr2h,c
  1629  0007E0  5050               	movf	MangeKeys@KeyID,w,c
  1630  0007E2  0D08               	mullw	8
  1631  0007E4  0E06               	movlw	6
  1632  0007E6  26F3               	addwf	prodl,f,c
  1633  0007E8  0E00               	movlw	0
  1634  0007EA  22F4               	addwfc	prodh,f,c
  1635  0007EC  0E01               	movlw	low _KeyArrayConfig
  1636  0007EE  24F3               	addwf	prodl,w,c
  1637  0007F0  6EF6               	movwf	tblptrl,c
  1638  0007F2  0E06               	movlw	high _KeyArrayConfig
  1639  0007F4  20F4               	addwfc	prodh,w,c
  1640  0007F6  6EF7               	movwf	tblptrh,c
  1641  0007F8                     	if	0	;There are less than 3 active tblptr bytes
  1642  0007F8                     	endif
  1643  0007F8  50DE               	movf	postinc2,w,c
  1644  0007FA  0009               	tblrd		*+
  1645  0007FC  18F5               	xorwf	tablat,w,c
  1646  0007FE  E104               	bnz	u341
  1647  000800  50DE               	movf	postinc2,w,c
  1648  000802  0009               	tblrd		*+
  1649  000804  18F5               	xorwf	tablat,w,c
  1650  000806  A4D8               	btfss	status,2,c
  1651  000808                     u341:
  1652  000808  0012               	return	
  1653                           
  1654                           ;Key.c: 65: {
  1655                           ;Key.c: 66: KeyInternalData[KeyID].KeyState = (unsigned char)0x82;
  1656  00080A  5050               	movf	MangeKeys@KeyID,w,c
  1657  00080C  0D03               	mullw	3
  1658  00080E  0E30               	movlw	low _KeyInternalData
  1659  000810  24F3               	addwf	prodl,w,c
  1660  000812  6ED9               	movwf	fsr2l,c
  1661  000814  0E00               	movlw	high _KeyInternalData
  1662  000816  20F4               	addwfc	prodh,w,c
  1663  000818  6EDA               	movwf	fsr2h,c
  1664  00081A  0E82               	movlw	130
  1665  00081C  6EDF               	movwf	indf2,c
  1666                           
  1667                           ;Key.c: 67: KeyInternalData[KeyID].KeyCounter =
  1668                           ;Key.c: 68: KeyArrayConfig[KeyID].ReleaseTicks;
  1669  00081E  5050               	movf	MangeKeys@KeyID,w,c
  1670  000820  0D08               	mullw	8
  1671  000822  0E02               	movlw	2
  1672  000824  26F3               	addwf	prodl,f,c
  1673  000826  0E00               	movlw	0
  1674  000828  22F4               	addwfc	prodh,f,c
  1675  00082A  0E01               	movlw	low _KeyArrayConfig
  1676  00082C  24F3               	addwf	prodl,w,c
  1677  00082E  6EF6               	movwf	tblptrl,c
  1678  000830  0E06               	movlw	high _KeyArrayConfig
  1679  000832  20F4               	addwfc	prodh,w,c
  1680  000834  6EF7               	movwf	tblptrh,c
  1681  000836                     	if	0	;There are less than 3 active tblptr bytes
  1682  000836                     	endif
  1683  000836  5050               	movf	MangeKeys@KeyID,w,c
  1684  000838  0D03               	mullw	3
  1685  00083A  0E01               	movlw	1
  1686  00083C  26F3               	addwf	prodl,f,c
  1687  00083E  0E00               	movlw	0
  1688  000840  22F4               	addwfc	prodh,f,c
  1689  000842  0E30               	movlw	low _KeyInternalData
  1690  000844  24F3               	addwf	prodl,w,c
  1691  000846  6ED9               	movwf	fsr2l,c
  1692  000848  0E00               	movlw	high _KeyInternalData
  1693  00084A  20F4               	addwfc	prodh,w,c
  1694  00084C  6EDA               	movwf	fsr2h,c
  1695  00084E  0009               	tblrd		*+
  1696  000850  CFF5 FFDE          	movff	tablat,postinc2
  1697  000854  0008               	tblrd		*
  1698  000856  CFF5 FFDD          	movff	tablat,postdec2
  1699                           
  1700                           ;Key.c: 69: }
  1701                           ;Key.c: 70: }
  1702  00085A  0012               	return	
  1703  00085C                     l1263:
  1704                           
  1705                           ;Key.c: 71: else
  1706                           ;Key.c: 72: {
  1707                           ;Key.c: 73: KeyInternalData[KeyID].KeyCounter =
  1708                           ;Key.c: 74: KeyArrayConfig[KeyID].ReleaseTicks;
  1709  00085C  5050               	movf	MangeKeys@KeyID,w,c
  1710  00085E  0D08               	mullw	8
  1711  000860  0E02               	movlw	2
  1712  000862  26F3               	addwf	prodl,f,c
  1713  000864  0E00               	movlw	0
  1714  000866  22F4               	addwfc	prodh,f,c
  1715  000868  0E01               	movlw	low _KeyArrayConfig
  1716  00086A  24F3               	addwf	prodl,w,c
  1717  00086C  6EF6               	movwf	tblptrl,c
  1718  00086E  0E06               	movlw	high _KeyArrayConfig
  1719  000870  20F4               	addwfc	prodh,w,c
  1720  000872  6EF7               	movwf	tblptrh,c
  1721  000874                     	if	0	;There are less than 3 active tblptr bytes
  1722  000874                     	endif
  1723  000874  5050               	movf	MangeKeys@KeyID,w,c
  1724  000876  0D03               	mullw	3
  1725  000878  0E01               	movlw	1
  1726  00087A  26F3               	addwf	prodl,f,c
  1727  00087C  0E00               	movlw	0
  1728  00087E  22F4               	addwfc	prodh,f,c
  1729  000880  0E30               	movlw	low _KeyInternalData
  1730  000882  24F3               	addwf	prodl,w,c
  1731  000884  6ED9               	movwf	fsr2l,c
  1732  000886  0E00               	movlw	high _KeyInternalData
  1733  000888  20F4               	addwfc	prodh,w,c
  1734  00088A  6EDA               	movwf	fsr2h,c
  1735  00088C  0009               	tblrd		*+
  1736  00088E  CFF5 FFDE          	movff	tablat,postinc2
  1737  000892  0008               	tblrd		*
  1738  000894  CFF5 FFDD          	movff	tablat,postdec2
  1739                           
  1740                           ;Key.c: 75: }
  1741                           ;Key.c: 76: }
  1742  000898  0012               	return	
  1743  00089A                     l1265:
  1744                           
  1745                           ;Key.c: 77: else
  1746                           ;Key.c: 78: {
  1747                           ;Key.c: 79: if ( KeyInternalData[KeyID].KeyCounter >
  1748                           ;Key.c: 80: KeyArrayConfig[KeyID].ReleaseTicks)
  1749  00089A  5050               	movf	MangeKeys@KeyID,w,c
  1750  00089C  0D03               	mullw	3
  1751  00089E  0E01               	movlw	1
  1752  0008A0  26F3               	addwf	prodl,f,c
  1753  0008A2  0E00               	movlw	0
  1754  0008A4  22F4               	addwfc	prodh,f,c
  1755  0008A6  0E30               	movlw	low _KeyInternalData
  1756  0008A8  24F3               	addwf	prodl,w,c
  1757  0008AA  6ED9               	movwf	fsr2l,c
  1758  0008AC  0E00               	movlw	high _KeyInternalData
  1759  0008AE  20F4               	addwfc	prodh,w,c
  1760  0008B0  6EDA               	movwf	fsr2h,c
  1761  0008B2  5050               	movf	MangeKeys@KeyID,w,c
  1762  0008B4  0D08               	mullw	8
  1763  0008B6  0E02               	movlw	2
  1764  0008B8  26F3               	addwf	prodl,f,c
  1765  0008BA  0E00               	movlw	0
  1766  0008BC  22F4               	addwfc	prodh,f,c
  1767  0008BE  0E01               	movlw	low _KeyArrayConfig
  1768  0008C0  24F3               	addwf	prodl,w,c
  1769  0008C2  6EF6               	movwf	tblptrl,c
  1770  0008C4  0E06               	movlw	high _KeyArrayConfig
  1771  0008C6  20F4               	addwfc	prodh,w,c
  1772  0008C8  6EF7               	movwf	tblptrh,c
  1773  0008CA                     	if	0	;There are less than 3 active tblptr bytes
  1774  0008CA                     	endif
  1775  0008CA  50DE               	movf	postinc2,w,c
  1776  0008CC  0009               	tblrd		*+
  1777  0008CE  5CF5               	subwf	tablat,w,c
  1778  0008D0  50DE               	movf	postinc2,w,c
  1779  0008D2  0009               	tblrd		*+
  1780  0008D4  58F5               	subwfb	tablat,w,c
  1781  0008D6  B0D8               	btfsc	status,0,c
  1782  0008D8  D01F               	goto	l1269
  1783                           
  1784                           ;Key.c: 81: {
  1785                           ;Key.c: 82: KeyInternalData[KeyID].KeyCounter =
  1786                           ;Key.c: 83: KeyArrayConfig[KeyID].ReleaseTicks;
  1787  0008DA  5050               	movf	MangeKeys@KeyID,w,c
  1788  0008DC  0D08               	mullw	8
  1789  0008DE  0E02               	movlw	2
  1790  0008E0  26F3               	addwf	prodl,f,c
  1791  0008E2  0E00               	movlw	0
  1792  0008E4  22F4               	addwfc	prodh,f,c
  1793  0008E6  0E01               	movlw	low _KeyArrayConfig
  1794  0008E8  24F3               	addwf	prodl,w,c
  1795  0008EA  6EF6               	movwf	tblptrl,c
  1796  0008EC  0E06               	movlw	high _KeyArrayConfig
  1797  0008EE  20F4               	addwfc	prodh,w,c
  1798  0008F0  6EF7               	movwf	tblptrh,c
  1799  0008F2                     	if	0	;There are less than 3 active tblptr bytes
  1800  0008F2                     	endif
  1801  0008F2  5050               	movf	MangeKeys@KeyID,w,c
  1802  0008F4  0D03               	mullw	3
  1803  0008F6  0E01               	movlw	1
  1804  0008F8  26F3               	addwf	prodl,f,c
  1805  0008FA  0E00               	movlw	0
  1806  0008FC  22F4               	addwfc	prodh,f,c
  1807  0008FE  0E30               	movlw	low _KeyInternalData
  1808  000900  24F3               	addwf	prodl,w,c
  1809  000902  6ED9               	movwf	fsr2l,c
  1810  000904  0E00               	movlw	high _KeyInternalData
  1811  000906  20F4               	addwfc	prodh,w,c
  1812  000908  6EDA               	movwf	fsr2h,c
  1813  00090A  0009               	tblrd		*+
  1814  00090C  CFF5 FFDE          	movff	tablat,postinc2
  1815  000910  0008               	tblrd		*
  1816  000912  CFF5 FFDD          	movff	tablat,postdec2
  1817                           
  1818                           ;Key.c: 84: }
  1819  000916  0012               	return	
  1820  000918                     l1269:
  1821                           
  1822                           ;Key.c: 85: else
  1823                           ;Key.c: 86: {
  1824                           ;Key.c: 87: KeyInternalData[KeyID].KeyCounter--;
  1825  000918  5050               	movf	MangeKeys@KeyID,w,c
  1826  00091A  0D03               	mullw	3
  1827  00091C  0E01               	movlw	1
  1828  00091E  26F3               	addwf	prodl,f,c
  1829  000920  0E00               	movlw	0
  1830  000922  22F4               	addwfc	prodh,f,c
  1831  000924  0E30               	movlw	low _KeyInternalData
  1832  000926  24F3               	addwf	prodl,w,c
  1833  000928  6ED9               	movwf	fsr2l,c
  1834  00092A  0E00               	movlw	high _KeyInternalData
  1835  00092C  20F4               	addwfc	prodh,w,c
  1836  00092E  6EDA               	movwf	fsr2h,c
  1837  000930  06DE               	decf	postinc2,f,c
  1838  000932  0E00               	movlw	0
  1839  000934  5ADD               	subwfb	postdec2,f,c
  1840                           
  1841                           ;Key.c: 88: if(KeyInternalData[KeyID].KeyCounter == (unsigned short)0)
  1842  000936  5050               	movf	MangeKeys@KeyID,w,c
  1843  000938  0D03               	mullw	3
  1844  00093A  0E01               	movlw	1
  1845  00093C  26F3               	addwf	prodl,f,c
  1846  00093E  0E00               	movlw	0
  1847  000940  22F4               	addwfc	prodh,f,c
  1848  000942  0E30               	movlw	low _KeyInternalData
  1849  000944  24F3               	addwf	prodl,w,c
  1850  000946  6ED9               	movwf	fsr2l,c
  1851  000948  0E00               	movlw	high _KeyInternalData
  1852  00094A  20F4               	addwfc	prodh,w,c
  1853  00094C  6EDA               	movwf	fsr2h,c
  1854  00094E  50DE               	movf	postinc2,w,c
  1855  000950  10DE               	iorwf	postinc2,w,c
  1856  000952  A4D8               	btfss	status,2,c
  1857  000954  0012               	return	
  1858                           
  1859                           ;Key.c: 89: {
  1860                           ;Key.c: 90: KeyInternalData[KeyID].KeyState = (unsigned char)0x80;
  1861  000956  5050               	movf	MangeKeys@KeyID,w,c
  1862  000958  0D03               	mullw	3
  1863  00095A  0E30               	movlw	low _KeyInternalData
  1864  00095C  24F3               	addwf	prodl,w,c
  1865  00095E  6ED9               	movwf	fsr2l,c
  1866  000960  0E00               	movlw	high _KeyInternalData
  1867  000962  20F4               	addwfc	prodh,w,c
  1868  000964  6EDA               	movwf	fsr2h,c
  1869  000966  0E80               	movlw	128
  1870  000968  6EDF               	movwf	indf2,c
  1871                           
  1872                           ;Key.c: 91: }
  1873                           ;Key.c: 92: }
  1874                           ;Key.c: 93: }
  1875                           ;Key.c: 94: break;
  1876  00096A  0012               	return	
  1877  00096C                     l1273:
  1878                           
  1879                           ;Key.c: 96: if( KeyArrayConfig[KeyID].ActiveValue == HWIreading)
  1880  00096C  5050               	movf	MangeKeys@KeyID,w,c
  1881  00096E  0D08               	mullw	8
  1882  000970  0E01               	movlw	1
  1883  000972  26F3               	addwf	prodl,f,c
  1884  000974  0E00               	movlw	0
  1885  000976  22F4               	addwfc	prodh,f,c
  1886  000978  0E01               	movlw	low _KeyArrayConfig
  1887  00097A  24F3               	addwf	prodl,w,c
  1888  00097C  6EF6               	movwf	tblptrl,c
  1889  00097E  0E06               	movlw	high _KeyArrayConfig
  1890  000980  20F4               	addwfc	prodh,w,c
  1891  000982  6EF7               	movwf	tblptrh,c
  1892  000984                     	if	0	;There are less than 3 active tblptr bytes
  1893  000984                     	endif
  1894  000984  0008               	tblrd		*
  1895  000986  50F5               	movf	tablat,w,c
  1896  000988  184F               	xorwf	MangeKeys@HWIreading,w,c
  1897  00098A  A4D8               	btfss	status,2,c
  1898  00098C  D01F               	goto	l1277
  1899                           
  1900                           ;Key.c: 97: {
  1901                           ;Key.c: 98: KeyInternalData[KeyID].KeyCounter =
  1902                           ;Key.c: 99: KeyArrayConfig[KeyID].ReleaseTicks;
  1903  00098E  5050               	movf	MangeKeys@KeyID,w,c
  1904  000990  0D08               	mullw	8
  1905  000992  0E02               	movlw	2
  1906  000994  26F3               	addwf	prodl,f,c
  1907  000996  0E00               	movlw	0
  1908  000998  22F4               	addwfc	prodh,f,c
  1909  00099A  0E01               	movlw	low _KeyArrayConfig
  1910  00099C  24F3               	addwf	prodl,w,c
  1911  00099E  6EF6               	movwf	tblptrl,c
  1912  0009A0  0E06               	movlw	high _KeyArrayConfig
  1913  0009A2  20F4               	addwfc	prodh,w,c
  1914  0009A4  6EF7               	movwf	tblptrh,c
  1915  0009A6                     	if	0	;There are less than 3 active tblptr bytes
  1916  0009A6                     	endif
  1917  0009A6  5050               	movf	MangeKeys@KeyID,w,c
  1918  0009A8  0D03               	mullw	3
  1919  0009AA  0E01               	movlw	1
  1920  0009AC  26F3               	addwf	prodl,f,c
  1921  0009AE  0E00               	movlw	0
  1922  0009B0  22F4               	addwfc	prodh,f,c
  1923  0009B2  0E30               	movlw	low _KeyInternalData
  1924  0009B4  24F3               	addwf	prodl,w,c
  1925  0009B6  6ED9               	movwf	fsr2l,c
  1926  0009B8  0E00               	movlw	high _KeyInternalData
  1927  0009BA  20F4               	addwfc	prodh,w,c
  1928  0009BC  6EDA               	movwf	fsr2h,c
  1929  0009BE  0009               	tblrd		*+
  1930  0009C0  CFF5 FFDE          	movff	tablat,postinc2
  1931  0009C4  0008               	tblrd		*
  1932  0009C6  CFF5 FFDD          	movff	tablat,postdec2
  1933                           
  1934                           ;Key.c: 100: }
  1935  0009CA  0012               	return	
  1936  0009CC                     l1277:
  1937                           
  1938                           ;Key.c: 101: else
  1939                           ;Key.c: 102: {
  1940                           ;Key.c: 103: KeyInternalData[KeyID].KeyCounter--;
  1941  0009CC  5050               	movf	MangeKeys@KeyID,w,c
  1942  0009CE  0D03               	mullw	3
  1943  0009D0  0E01               	movlw	1
  1944  0009D2  26F3               	addwf	prodl,f,c
  1945  0009D4  0E00               	movlw	0
  1946  0009D6  22F4               	addwfc	prodh,f,c
  1947  0009D8  0E30               	movlw	low _KeyInternalData
  1948  0009DA  24F3               	addwf	prodl,w,c
  1949  0009DC  6ED9               	movwf	fsr2l,c
  1950  0009DE  0E00               	movlw	high _KeyInternalData
  1951  0009E0  20F4               	addwfc	prodh,w,c
  1952  0009E2  6EDA               	movwf	fsr2h,c
  1953  0009E4  06DE               	decf	postinc2,f,c
  1954  0009E6  0E00               	movlw	0
  1955  0009E8  5ADD               	subwfb	postdec2,f,c
  1956                           
  1957                           ;Key.c: 104: if(KeyInternalData[KeyID].KeyCounter == (unsigned short)0)
  1958  0009EA  5050               	movf	MangeKeys@KeyID,w,c
  1959  0009EC  0D03               	mullw	3
  1960  0009EE  0E01               	movlw	1
  1961  0009F0  26F3               	addwf	prodl,f,c
  1962  0009F2  0E00               	movlw	0
  1963  0009F4  22F4               	addwfc	prodh,f,c
  1964  0009F6  0E30               	movlw	low _KeyInternalData
  1965  0009F8  24F3               	addwf	prodl,w,c
  1966  0009FA  6ED9               	movwf	fsr2l,c
  1967  0009FC  0E00               	movlw	high _KeyInternalData
  1968  0009FE  20F4               	addwfc	prodh,w,c
  1969  000A00  6EDA               	movwf	fsr2h,c
  1970  000A02  50DE               	movf	postinc2,w,c
  1971  000A04  10DE               	iorwf	postinc2,w,c
  1972  000A06  A4D8               	btfss	status,2,c
  1973  000A08  0012               	return	
  1974                           
  1975                           ;Key.c: 105: {
  1976                           ;Key.c: 106: KeyInternalData[KeyID].KeyState = (unsigned char)0x80;
  1977  000A0A  5050               	movf	MangeKeys@KeyID,w,c
  1978  000A0C  0D03               	mullw	3
  1979  000A0E  0E30               	movlw	low _KeyInternalData
  1980  000A10  24F3               	addwf	prodl,w,c
  1981  000A12  6ED9               	movwf	fsr2l,c
  1982  000A14  0E00               	movlw	high _KeyInternalData
  1983  000A16  20F4               	addwfc	prodh,w,c
  1984  000A18  6EDA               	movwf	fsr2h,c
  1985  000A1A  0E80               	movlw	128
  1986  000A1C  6EDF               	movwf	indf2,c
  1987                           
  1988                           ;Key.c: 107: }
  1989                           ;Key.c: 108: }
  1990                           ;Key.c: 109: break;
  1991  000A1E  0012               	return	
  1992  000A20                     l1281:
  1993                           
  1994                           ;Key.c: 111: KeyInternalData[KeyID].KeyState = (unsigned char)0x00;
  1995  000A20  5050               	movf	MangeKeys@KeyID,w,c
  1996  000A22  0D03               	mullw	3
  1997  000A24  0E30               	movlw	low _KeyInternalData
  1998  000A26  24F3               	addwf	prodl,w,c
  1999  000A28  6ED9               	movwf	fsr2l,c
  2000  000A2A  0E00               	movlw	high _KeyInternalData
  2001  000A2C  20F4               	addwfc	prodh,w,c
  2002  000A2E  6EDA               	movwf	fsr2h,c
  2003  000A30  0E00               	movlw	0
  2004  000A32  6EDF               	movwf	indf2,c
  2005                           
  2006                           ;Key.c: 113: }
  2007                           
  2008                           ;Key.c: 112: break;
  2009  000A34  0012               	return	
  2010  000A36                     l1285:
  2011  000A36  504E               	movf	MangeKeys@KeyState,w,c
  2012                           
  2013                           ; Switch size 1, requested type "space"
  2014                           ; Number of cases is 3, Range of values is 0 to 2
  2015                           ; switch strategies available:
  2016                           ; Name         Instructions Cycles
  2017                           ; simple_byte           10     6 (average)
  2018                           ;	Chosen strategy is simple_byte
  2019  000A38  0A00               	xorlw	0	; case 0
  2020  000A3A  B4D8               	btfsc	status,2,c
  2021  000A3C  D60A               	goto	l1239
  2022  000A3E  0A01               	xorlw	1	; case 1
  2023  000A40  B4D8               	btfsc	status,2,c
  2024  000A42  D682               	goto	l1251
  2025  000A44  0A03               	xorlw	3	; case 2
  2026  000A46  B4D8               	btfsc	status,2,c
  2027  000A48  D791               	goto	l1273
  2028  000A4A  D7EA               	goto	l1281
  2029  000A4C                     __end_of_MangeKeys:
  2030                           	opt stack 0
  2031                           tosu	equ	0xFFF
  2032                           tosh	equ	0xFFE
  2033                           tosl	equ	0xFFD
  2034                           pclath	equ	0xFFA
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postinc1	equ	0xFE6
  2044                           fsr1h	equ	0xFE2
  2045                           fsr1l	equ	0xFE1
  2046                           indf2	equ	0xFDF
  2047                           postinc2	equ	0xFDE
  2048                           postdec2	equ	0xFDD
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _HWI_DIGI_READ *****************
  2054 ;; Defined at:
  2055 ;;		line 91 in file "../../HWIsource/HWI_DIGITAL.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  pin             1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  pin             1   19[COMRAM] unsigned char 
  2060 ;;  HWIread         1   20[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      unsigned char 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2070 ;;      Params:         0       0       0       0       0       0       0
  2071 ;;      Locals:         2       0       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0
  2073 ;;      Totals:         2       0       0       0       0       0       0
  2074 ;;Total ram usage:        2 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_MangeKeys
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text10
  2085  001206                     __ptext10:
  2086                           	opt stack 0
  2087  001206                     _HWI_DIGI_READ:
  2088                           	opt stack 22
  2089                           
  2090                           ;incstack = 0
  2091                           ;HWI_DIGI_READ@pin stored from wreg
  2092  001206  6E4A               	movwf	HWI_DIGI_READ@pin,c
  2093                           
  2094                           ;HWI_DIGITAL.c: 93: unsigned char HWIread;
  2095                           ;HWI_DIGITAL.c: 95: switch (pin)
  2096  001208  D00B               	goto	l1159
  2097  00120A                     l312:
  2098                           
  2099                           ;HWI_DIGITAL.c: 98: HWIread = PORTBbits.RB2;
  2100  00120A  0E00               	movlw	0
  2101  00120C  B481               	btfsc	3969,2,c	;volatile
  2102  00120E  0E01               	movlw	1
  2103  001210  D005               	goto	L1
  2104  001212                     l314:
  2105                           
  2106                           ;HWI_DIGITAL.c: 101: HWIread = PORTBbits.RB3;
  2107  001212  0E00               	movlw	0
  2108  001214  B681               	btfsc	3969,3,c	;volatile
  2109  001216  0E01               	movlw	1
  2110  001218  D001               	goto	L1
  2111  00121A                     l1155:
  2112                           
  2113                           ;HWI_DIGITAL.c: 104: HWIread = (unsigned char)0;
  2114  00121A  0E00               	movlw	0
  2115  00121C                     L1:
  2116  00121C  6E4B               	movwf	HWI_DIGI_READ@HWIread,c
  2117                           
  2118                           ;HWI_DIGITAL.c: 106: }
  2119                           
  2120                           ;HWI_DIGITAL.c: 105: break;
  2121  00121E  D008               	goto	l313
  2122  001220                     l1159:
  2123  001220  504A               	movf	HWI_DIGI_READ@pin,w,c
  2124                           
  2125                           ; Switch size 1, requested type "space"
  2126                           ; Number of cases is 2, Range of values is 15 to 16
  2127                           ; switch strategies available:
  2128                           ; Name         Instructions Cycles
  2129                           ; simple_byte            7     4 (average)
  2130                           ;	Chosen strategy is simple_byte
  2131  001222  0A0F               	xorlw	15	; case 15
  2132  001224  B4D8               	btfsc	status,2,c
  2133  001226  D7F1               	goto	l312
  2134  001228  0A1F               	xorlw	31	; case 16
  2135  00122A  B4D8               	btfsc	status,2,c
  2136  00122C  D7F2               	goto	l314
  2137  00122E  D7F5               	goto	l1155
  2138  001230                     l313:
  2139                           
  2140                           ;HWI_DIGITAL.c: 107: return HWIread;
  2141  001230  504B               	movf	HWI_DIGI_READ@HWIread,w,c
  2142  001232  0012               	return		;funcret
  2143  001234                     __end_of_HWI_DIGI_READ:
  2144                           	opt stack 0
  2145                           tosu	equ	0xFFF
  2146                           tosh	equ	0xFFE
  2147                           tosl	equ	0xFFD
  2148                           pclath	equ	0xFFA
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           postinc0	equ	0xFEE
  2156                           wreg	equ	0xFE8
  2157                           postinc1	equ	0xFE6
  2158                           fsr1h	equ	0xFE2
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _APP_MANAGE *****************
  2168 ;; Defined at:
  2169 ;;		line 16 in file "../../../../Common/App/APP.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  TravelledDis    2    9[BANK0 ] unsigned short 
  2174 ;;  AvgSpeedKph     2    7[BANK0 ] unsigned short 
  2175 ;;  keystatus       1   11[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2185 ;;      Params:         0       0       0       0       0       0       0
  2186 ;;      Locals:         0       5       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0
  2188 ;;      Totals:         0       5       0       0       0       0       0
  2189 ;;Total ram usage:        5 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    6
  2192 ;; This function calls:
  2193 ;;		_BCDsendNumber
  2194 ;;		_BlinkDigit
  2195 ;;		_GetAvgSpeed
  2196 ;;		_GetDistance
  2197 ;;		_GetKeyStatus
  2198 ;;		_SetCircumfirunce
  2199 ;;		___wmul
  2200 ;; This function is called by:
  2201 ;;		_ManageApplication
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text11
  2206  000B42                     __ptext11:
  2207                           	opt stack 0
  2208  000B42                     _APP_MANAGE:
  2209                           	opt stack 21
  2210                           
  2211                           ;APP.c: 18: static unsigned blinkIndex = (unsigned char)0;
  2212                           ;APP.c: 19: static unsigned bIsBlinkMode = (unsigned char)0;
  2213                           ;APP.c: 20: unsigned short AvgSpeedKph;
  2214                           ;APP.c: 21: unsigned short TravelledDistance;
  2215                           ;APP.c: 22: unsigned char keystatus;
  2216                           ;APP.c: 25: SetCircumfirunce(2056);
  2217                           
  2218                           ;incstack = 0
  2219  000B42  0E08               	movlw	8
  2220  000B44  6E4B               	movwf	SetCircumfirunce@Circum+1,c
  2221  000B46  0E08               	movlw	8
  2222  000B48  6E4A               	movwf	SetCircumfirunce@Circum,c
  2223  000B4A  ECB5  F009         	call	_SetCircumfirunce	;wreg free
  2224                           
  2225                           ;APP.c: 27: AvgSpeedKph = GetAvgSpeed(1);
  2226  000B4E  0E01               	movlw	1
  2227  000B50  EC74  F006         	call	_GetAvgSpeed
  2228  000B54  C063  F087         	movff	?_GetAvgSpeed,APP_MANAGE@AvgSpeedKph
  2229  000B58  C064  F088         	movff	?_GetAvgSpeed+1,APP_MANAGE@AvgSpeedKph+1
  2230                           
  2231                           ;APP.c: 28: TravelledDistance = GetDistance();
  2232  000B5C  ECA6  F009         	call	_GetDistance	;wreg free
  2233  000B60  C04A  F089         	movff	?_GetDistance,APP_MANAGE@TravelledDistance
  2234  000B64  C04B  F08A         	movff	?_GetDistance+1,APP_MANAGE@TravelledDistance+1
  2235                           
  2236                           ;APP.c: 29: TravelledDistance *= (unsigned short)10;
  2237  000B68  C089  F04A         	movff	APP_MANAGE@TravelledDistance,___wmul@multiplier
  2238  000B6C  C08A  F04B         	movff	APP_MANAGE@TravelledDistance+1,___wmul@multiplier+1
  2239  000B70  0E00               	movlw	0
  2240  000B72  6E4D               	movwf	___wmul@multiplicand+1,c
  2241  000B74  0E0A               	movlw	10
  2242  000B76  6E4C               	movwf	___wmul@multiplicand,c
  2243  000B78  EC5D  F009         	call	___wmul	;wreg free
  2244  000B7C  C04A  F089         	movff	?___wmul,APP_MANAGE@TravelledDistance
  2245  000B80  C04B  F08A         	movff	?___wmul+1,APP_MANAGE@TravelledDistance+1
  2246                           
  2247                           ;APP.c: 30: TravelledDistance /= (unsigned short)16;
  2248  000B84  0100               	movlb	0	; () banked
  2249  000B86  3B89               	swapf	APP_MANAGE@TravelledDistance& (0+255),f,b
  2250  000B88  3B8A               	swapf	(APP_MANAGE@TravelledDistance+1)& (0+255),f,b
  2251  000B8A  0E0F               	movlw	15
  2252  000B8C  1789               	andwf	APP_MANAGE@TravelledDistance& (0+255),f,b
  2253  000B8E  518A               	movf	(APP_MANAGE@TravelledDistance+1)& (0+255),w,b
  2254  000B90  0BF0               	andlw	240
  2255  000B92  1389               	iorwf	APP_MANAGE@TravelledDistance& (0+255),f,b
  2256  000B94  0E0F               	movlw	15
  2257  000B96  178A               	andwf	(APP_MANAGE@TravelledDistance+1)& (0+255),f,b
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;APP.c: 32: BCDsendNumber(AvgSpeedKph,1 );
  2261  000B98  C087  F051         	movff	APP_MANAGE@AvgSpeedKph,BCDsendNumber@Number
  2262  000B9C  C088  F052         	movff	APP_MANAGE@AvgSpeedKph+1,BCDsendNumber@Number+1
  2263  000BA0  0E01               	movlw	1
  2264  000BA2  6E53               	movwf	BCDsendNumber@DecimalPlace,c
  2265  000BA4  EC26  F005         	call	_BCDsendNumber	;wreg free
  2266                           
  2267                           ;APP.c: 34: if(bIsBlinkMode == (unsigned char)0)
  2268  000BA8  5023               	movf	APP_MANAGE@bIsBlinkMode,w,c
  2269  000BAA  1024               	iorwf	APP_MANAGE@bIsBlinkMode+1,w,c
  2270  000BAC  A4D8               	btfss	status,2,c
  2271  000BAE  D00F               	goto	l1983
  2272                           
  2273                           ;APP.c: 35: {
  2274                           ;APP.c: 36: keystatus = GetKeyStatus(0);
  2275  000BB0  0E00               	movlw	0
  2276  000BB2  EC1A  F009         	call	_GetKeyStatus
  2277  000BB6  0100               	movlb	0	; () banked
  2278  000BB8  6F8B               	movwf	APP_MANAGE@keystatus& (0+255),b
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;APP.c: 37: if( keystatus == (unsigned char)0x82)
  2282  000BBA  0E82               	movlw	130
  2283  000BBC  0100               	movlb	0	; () banked
  2284  000BBE  198B               	xorwf	APP_MANAGE@keystatus& (0+255),w,b
  2285  000BC0  A4D8               	btfss	status,2,c
  2286  000BC2  0012               	return	
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;APP.c: 38: {
  2290                           ;APP.c: 39: bIsBlinkMode = (unsigned char)1;
  2291  000BC4  0E00               	movlw	0
  2292  000BC6  6E24               	movwf	APP_MANAGE@bIsBlinkMode+1,c
  2293  000BC8  0E01               	movlw	1
  2294  000BCA  6E23               	movwf	APP_MANAGE@bIsBlinkMode,c
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;APP.c: 40: }
  2298                           ;APP.c: 41: }
  2299  000BCC  0012               	return	
  2300  000BCE                     l1983:
  2301                           
  2302                           ;APP.c: 42: else
  2303                           ;APP.c: 43: {
  2304                           ;APP.c: 44: BlinkDigit(blinkIndex,100);
  2305  000BCE  0E64               	movlw	100
  2306  000BD0  6E4A               	movwf	BlinkDigit@duration,c
  2307  000BD2  5025               	movf	APP_MANAGE@blinkIndex,w,c
  2308  000BD4  ECAF  F009         	call	_BlinkDigit
  2309                           
  2310                           ;APP.c: 45: keystatus = GetKeyStatus(0);
  2311  000BD8  0E00               	movlw	0
  2312  000BDA  EC1A  F009         	call	_GetKeyStatus
  2313  000BDE  0100               	movlb	0	; () banked
  2314  000BE0  6F8B               	movwf	APP_MANAGE@keystatus& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;APP.c: 46: if( keystatus == (unsigned char)0x81)
  2318  000BE2  0E81               	movlw	129
  2319  000BE4  0100               	movlb	0	; () banked
  2320  000BE6  198B               	xorwf	APP_MANAGE@keystatus& (0+255),w,b
  2321  000BE8  A4D8               	btfss	status,2,c
  2322  000BEA  D00C               	goto	l1995
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;APP.c: 47: {
  2326                           ;APP.c: 48: blinkIndex++;
  2327  000BEC  4A25               	infsnz	APP_MANAGE@blinkIndex,f,c
  2328  000BEE  2A26               	incf	APP_MANAGE@blinkIndex+1,f,c
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;APP.c: 49: if(blinkIndex == 4)
  2332  000BF0  0E04               	movlw	4
  2333  000BF2  1825               	xorwf	APP_MANAGE@blinkIndex,w,c
  2334  000BF4  1026               	iorwf	APP_MANAGE@blinkIndex+1,w,c
  2335  000BF6  A4D8               	btfss	status,2,c
  2336  000BF8  0012               	return	
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;APP.c: 50: {
  2340                           ;APP.c: 51: blinkIndex=0;
  2341  000BFA  0E00               	movlw	0
  2342  000BFC  6E26               	movwf	APP_MANAGE@blinkIndex+1,c
  2343  000BFE  0E00               	movlw	0
  2344  000C00  6E25               	movwf	APP_MANAGE@blinkIndex,c
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;APP.c: 52: }
  2348                           ;APP.c: 53: }
  2349  000C02  0012               	return	
  2350  000C04                     l1995:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;APP.c: 54: else
  2354                           ;APP.c: 55: {
  2355                           ;APP.c: 56: keystatus = GetKeyStatus(1);
  2356  000C04  0E01               	movlw	1
  2357  000C06  EC1A  F009         	call	_GetKeyStatus
  2358  000C0A  0100               	movlb	0	; () banked
  2359  000C0C  6F8B               	movwf	APP_MANAGE@keystatus& (0+255),b
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;APP.c: 57: if(keystatus == (unsigned char)0x82 )
  2363  000C0E  0E82               	movlw	130
  2364  000C10  0100               	movlb	0	; () banked
  2365  000C12  198B               	xorwf	APP_MANAGE@keystatus& (0+255),w,b
  2366  000C14  A4D8               	btfss	status,2,c
  2367  000C16  0012               	return	
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;APP.c: 58: {
  2371                           ;APP.c: 59: BlinkDigit(1,0);
  2372  000C18  0E00               	movlw	0
  2373  000C1A  6E4A               	movwf	BlinkDigit@duration,c
  2374  000C1C  0E01               	movlw	1
  2375  000C1E  ECAF  F009         	call	_BlinkDigit
  2376                           
  2377                           ;APP.c: 60: bIsBlinkMode = (unsigned char)0;
  2378  000C22  0E00               	movlw	0
  2379  000C24  6E24               	movwf	APP_MANAGE@bIsBlinkMode+1,c
  2380  000C26  0E00               	movlw	0
  2381  000C28  6E23               	movwf	APP_MANAGE@bIsBlinkMode,c
  2382  000C2A  0012               	return	
  2383  000C2C                     __end_of_APP_MANAGE:
  2384                           	opt stack 0
  2385                           tosu	equ	0xFFF
  2386                           tosh	equ	0xFFE
  2387                           tosl	equ	0xFFD
  2388                           pclath	equ	0xFFA
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postinc1	equ	0xFE6
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _SetCircumfirunce *****************
  2408 ;; Defined at:
  2409 ;;		line 99 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  Circum          2   19[COMRAM] unsigned short 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		None
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         2       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0
  2426 ;;      Totals:         2       0       0       0       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    4
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_APP_MANAGE
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text12
  2438  00136A                     __ptext12:
  2439                           	opt stack 0
  2440  00136A                     _SetCircumfirunce:
  2441                           	opt stack 22
  2442                           
  2443                           ;SpeedCalc.c: 101: CircumFactor = (unsigned short)Circum;
  2444                           
  2445                           ;incstack = 0
  2446  00136A  C04A  F069         	movff	SetCircumfirunce@Circum,_CircumFactor
  2447  00136E  C04B  F06A         	movff	SetCircumfirunce@Circum+1,_CircumFactor+1
  2448  001372  0012               	return		;funcret
  2449  001374                     __end_of_SetCircumfirunce:
  2450                           	opt stack 0
  2451                           tosu	equ	0xFFF
  2452                           tosh	equ	0xFFE
  2453                           tosl	equ	0xFFD
  2454                           pclath	equ	0xFFA
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           prodh	equ	0xFF4
  2460                           prodl	equ	0xFF3
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postinc1	equ	0xFE6
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           indf2	equ	0xFDF
  2467                           postinc2	equ	0xFDE
  2468                           postdec2	equ	0xFDD
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _GetKeyStatus *****************
  2474 ;; Defined at:
  2475 ;;		line 19 in file "../../../../Common/Driver/Key/Key.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  KeyID           1    wreg     unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  KeyID           1   20[COMRAM] unsigned char 
  2480 ;;  KeyStatus       1   19[COMRAM] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      unsigned char 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2490 ;;      Params:         0       0       0       0       0       0       0
  2491 ;;      Locals:         2       0       0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0
  2493 ;;      Totals:         2       0       0       0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    4
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_APP_MANAGE
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text13
  2505  001234                     __ptext13:
  2506                           	opt stack 0
  2507  001234                     _GetKeyStatus:
  2508                           	opt stack 22
  2509                           
  2510                           ;incstack = 0
  2511                           ;GetKeyStatus@KeyID stored from wreg
  2512  001234  6E4B               	movwf	GetKeyStatus@KeyID,c
  2513                           
  2514                           ;Key.c: 21: unsigned char KeyStatus;
  2515                           ;Key.c: 23: KeyStatus = KeyInternalData[KeyID].KeyState;
  2516  001236  504B               	movf	GetKeyStatus@KeyID,w,c
  2517  001238  0D03               	mullw	3
  2518  00123A  0E30               	movlw	low _KeyInternalData
  2519  00123C  24F3               	addwf	prodl,w,c
  2520  00123E  6ED9               	movwf	fsr2l,c
  2521  001240  0E00               	movlw	high _KeyInternalData
  2522  001242  20F4               	addwfc	prodh,w,c
  2523  001244  6EDA               	movwf	fsr2h,c
  2524  001246  50DF               	movf	indf2,w,c
  2525  001248  6E4A               	movwf	GetKeyStatus@KeyStatus,c
  2526                           
  2527                           ;Key.c: 24: KeyInternalData[KeyID].KeyState &= (unsigned char)0x7F;
  2528  00124A  504B               	movf	GetKeyStatus@KeyID,w,c
  2529  00124C  0D03               	mullw	3
  2530  00124E  0E30               	movlw	low _KeyInternalData
  2531  001250  24F3               	addwf	prodl,w,c
  2532  001252  6ED9               	movwf	fsr2l,c
  2533  001254  0E00               	movlw	high _KeyInternalData
  2534  001256  20F4               	addwfc	prodh,w,c
  2535  001258  6EDA               	movwf	fsr2h,c
  2536  00125A  0E7F               	movlw	127
  2537  00125C  16DF               	andwf	indf2,f,c
  2538                           
  2539                           ;Key.c: 26: return KeyStatus;
  2540  00125E  504A               	movf	GetKeyStatus@KeyStatus,w,c
  2541  001260  0012               	return	
  2542  001262                     __end_of_GetKeyStatus:
  2543                           	opt stack 0
  2544                           tosu	equ	0xFFF
  2545                           tosh	equ	0xFFE
  2546                           tosl	equ	0xFFD
  2547                           pclath	equ	0xFFA
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postinc1	equ	0xFE6
  2557                           fsr1h	equ	0xFE2
  2558                           fsr1l	equ	0xFE1
  2559                           indf2	equ	0xFDF
  2560                           postinc2	equ	0xFDE
  2561                           postdec2	equ	0xFDD
  2562                           fsr2h	equ	0xFDA
  2563                           fsr2l	equ	0xFD9
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _GetDistance *****************
  2567 ;; Defined at:
  2568 ;;		line 93 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  4   19[COMRAM] unsigned long 
  2575 ;; Registers used:
  2576 ;;		None
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2582 ;;      Params:         4       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0
  2585 ;;      Totals:         4       0       0       0       0       0       0
  2586 ;;Total ram usage:        4 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    4
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_APP_MANAGE
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text14
  2597  00134C                     __ptext14:
  2598                           	opt stack 0
  2599  00134C                     _GetDistance:
  2600                           	opt stack 22
  2601                           
  2602                           ;SpeedCalc.c: 95: return DistTravelCntr;
  2603                           
  2604                           ;incstack = 0
  2605  00134C  C019  F04A         	movff	_DistTravelCntr,?_GetDistance
  2606  001350  C01A  F04B         	movff	_DistTravelCntr+1,?_GetDistance+1
  2607  001354  C01B  F04C         	movff	_DistTravelCntr+2,?_GetDistance+2
  2608  001358  C01C  F04D         	movff	_DistTravelCntr+3,?_GetDistance+3
  2609  00135C  0012               	return		;funcret
  2610  00135E                     __end_of_GetDistance:
  2611                           	opt stack 0
  2612                           tosu	equ	0xFFF
  2613                           tosh	equ	0xFFE
  2614                           tosl	equ	0xFFD
  2615                           pclath	equ	0xFFA
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           postinc1	equ	0xFE6
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           indf2	equ	0xFDF
  2628                           postinc2	equ	0xFDE
  2629                           postdec2	equ	0xFDD
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function _GetAvgSpeed *****************
  2635 ;; Defined at:
  2636 ;;		line 105 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  bIsKph          1    wreg     unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  bIsKph          1    0[BANK0 ] unsigned char 
  2641 ;;  KphMphFactor    4    1[BANK0 ] unsigned long 
  2642 ;;  AvgSpeedKphM    2    5[BANK0 ] unsigned short 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2   44[COMRAM] unsigned short 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2652 ;;      Params:         2       0       0       0       0       0       0
  2653 ;;      Locals:         0       7       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0
  2655 ;;      Totals:         2       7       0       0       0       0       0
  2656 ;;Total ram usage:        9 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    5
  2659 ;; This function calls:
  2660 ;;		___lldiv
  2661 ;;		___lmul
  2662 ;; This function is called by:
  2663 ;;		_APP_MANAGE
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text15
  2668  000CE8                     __ptext15:
  2669                           	opt stack 0
  2670  000CE8                     _GetAvgSpeed:
  2671                           	opt stack 21
  2672                           
  2673                           ;incstack = 0
  2674                           ;GetAvgSpeed@bIsKph stored from wreg
  2675  000CE8  0100               	movlb	0	; () banked
  2676  000CEA  6F80               	movwf	GetAvgSpeed@bIsKph& (0+255),b
  2677                           
  2678                           ;SpeedCalc.c: 107: unsigned short AvgSpeedKphMph = (unsigned short)0;
  2679  000CEC  0E00               	movlw	0
  2680  000CEE  0100               	movlb	0	; () banked
  2681  000CF0  6F86               	movwf	(GetAvgSpeed@AvgSpeedKphMph+1)& (0+255),b
  2682  000CF2  0E00               	movlw	0
  2683  000CF4  6F85               	movwf	GetAvgSpeed@AvgSpeedKphMph& (0+255),b
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;SpeedCalc.c: 108: unsigned long KphMphFactor;
  2687                           ;SpeedCalc.c: 110: if( (unsigned char)1 == bIsKph )
  2688  000CF6  0100               	movlb	0	; () banked
  2689  000CF8  0580               	decf	GetAvgSpeed@bIsKph& (0+255),w,b
  2690  000CFA  A4D8               	btfss	status,2,c
  2691  000CFC  D005               	goto	l1905
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;SpeedCalc.c: 111: {
  2695                           ;SpeedCalc.c: 112: KphMphFactor = (unsigned long)360;
  2696  000CFE  0E68               	movlw	104
  2697  000D00  0100               	movlb	0	; () banked
  2698  000D02  6F81               	movwf	GetAvgSpeed@KphMphFactor& (0+255),b
  2699  000D04  0E01               	movlw	1
  2700  000D06  D004               	goto	L2
  2701  000D08                     l1905:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;SpeedCalc.c: 114: else
  2705                           ;SpeedCalc.c: 115: {
  2706                           ;SpeedCalc.c: 116: KphMphFactor = (unsigned long)225;
  2707  000D08  0EE1               	movlw	225
  2708  000D0A  0100               	movlb	0	; () banked
  2709  000D0C  6F81               	movwf	GetAvgSpeed@KphMphFactor& (0+255),b
  2710  000D0E  0E00               	movlw	0
  2711  000D10                     L2:
  2712  000D10  6F82               	movwf	(GetAvgSpeed@KphMphFactor+1)& (0+255),b
  2713  000D12  0E00               	movlw	0
  2714  000D14  6F83               	movwf	(GetAvgSpeed@KphMphFactor+2)& (0+255),b
  2715  000D16  0E00               	movlw	0
  2716  000D18  6F84               	movwf	(GetAvgSpeed@KphMphFactor+3)& (0+255),b
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;SpeedCalc.c: 117: }
  2720                           ;SpeedCalc.c: 119: if(LapTimeTenthMilli != (unsigned short)0)
  2721                           
  2722                           ; BSR set to: 0
  2723  000D1A  501F               	movf	_LapTimeTenthMilli,w,c
  2724  000D1C  1020               	iorwf	_LapTimeTenthMilli+1,w,c
  2725  000D1E  B4D8               	btfsc	status,2,c
  2726  000D20  D024               	goto	l1911
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;SpeedCalc.c: 120: {
  2730                           ;SpeedCalc.c: 121: AvgSpeedKphMph = (unsigned short)
  2731                           ;SpeedCalc.c: 122: ((KphMphFactor * (unsigned long)CircumFactor )
  2732                           ;SpeedCalc.c: 123: / (unsigned long)LapTimeTenthMilli);
  2733  000D22  C069  F04A         	movff	_CircumFactor,___lmul@multiplier
  2734  000D26  C06A  F04B         	movff	_CircumFactor+1,___lmul@multiplier+1
  2735  000D2A  6A4C               	clrf	___lmul@multiplier+2,c
  2736  000D2C  6A4D               	clrf	___lmul@multiplier+3,c
  2737  000D2E  C081  F04E         	movff	GetAvgSpeed@KphMphFactor,___lmul@multiplicand
  2738  000D32  C082  F04F         	movff	GetAvgSpeed@KphMphFactor+1,___lmul@multiplicand+1
  2739  000D36  C083  F050         	movff	GetAvgSpeed@KphMphFactor+2,___lmul@multiplicand+2
  2740  000D3A  C084  F051         	movff	GetAvgSpeed@KphMphFactor+3,___lmul@multiplicand+3
  2741  000D3E  EC40  F008         	call	___lmul	;wreg free
  2742  000D42  C04A  F056         	movff	?___lmul,___lldiv@dividend
  2743  000D46  C04B  F057         	movff	?___lmul+1,___lldiv@dividend+1
  2744  000D4A  C04C  F058         	movff	?___lmul+2,___lldiv@dividend+2
  2745  000D4E  C04D  F059         	movff	?___lmul+3,___lldiv@dividend+3
  2746  000D52  C01F  F05A         	movff	_LapTimeTenthMilli,___lldiv@divisor
  2747  000D56  C020  F05B         	movff	_LapTimeTenthMilli+1,___lldiv@divisor+1
  2748  000D5A  6A5C               	clrf	___lldiv@divisor+2,c
  2749  000D5C  6A5D               	clrf	___lldiv@divisor+3,c
  2750  000D5E  EC9D  F007         	call	___lldiv	;wreg free
  2751  000D62  C056  F085         	movff	?___lldiv,GetAvgSpeed@AvgSpeedKphMph
  2752  000D66  C057  F086         	movff	?___lldiv+1,GetAvgSpeed@AvgSpeedKphMph+1
  2753  000D6A                     l1911:
  2754                           
  2755                           ;SpeedCalc.c: 124: }
  2756                           ;SpeedCalc.c: 126: if( (unsigned char)64 == HwTimerOVFLcount)
  2757  000D6A  0E40               	movlw	64
  2758  000D6C  1828               	xorwf	_HwTimerOVFLcount,w,c	;volatile
  2759  000D6E  A4D8               	btfss	status,2,c
  2760  000D70  D005               	goto	l1915
  2761                           
  2762                           ;SpeedCalc.c: 127: {
  2763                           ;SpeedCalc.c: 128: AvgSpeedKphMph = (unsigned short)0;
  2764  000D72  0E00               	movlw	0
  2765  000D74  0100               	movlb	0	; () banked
  2766  000D76  6F86               	movwf	(GetAvgSpeed@AvgSpeedKphMph+1)& (0+255),b
  2767  000D78  0E00               	movlw	0
  2768  000D7A  6F85               	movwf	GetAvgSpeed@AvgSpeedKphMph& (0+255),b
  2769  000D7C                     l1915:
  2770                           
  2771                           ;SpeedCalc.c: 129: }
  2772                           ;SpeedCalc.c: 130: return AvgSpeedKphMph;
  2773  000D7C  C085  F063         	movff	GetAvgSpeed@AvgSpeedKphMph,?_GetAvgSpeed
  2774  000D80  C086  F064         	movff	GetAvgSpeed@AvgSpeedKphMph+1,?_GetAvgSpeed+1
  2775  000D84  0012               	return	
  2776  000D86                     __end_of_GetAvgSpeed:
  2777                           	opt stack 0
  2778                           tosu	equ	0xFFF
  2779                           tosh	equ	0xFFE
  2780                           tosl	equ	0xFFD
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           postinc1	equ	0xFE6
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           postinc2	equ	0xFDE
  2795                           postdec2	equ	0xFDD
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function ___lmul *****************
  2801 ;; Defined at:
  2802 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul32.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  multiplier      4   19[COMRAM] unsigned long 
  2805 ;;  multiplicand    4   23[COMRAM] unsigned long 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  product         4   27[COMRAM] unsigned long 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  4   19[COMRAM] unsigned long 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2817 ;;      Params:         8       0       0       0       0       0       0
  2818 ;;      Locals:         4       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0
  2820 ;;      Totals:        12       0       0       0       0       0       0
  2821 ;;Total ram usage:       12 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    4
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_GetAvgSpeed
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text16
  2832  001080                     __ptext16:
  2833                           	opt stack 0
  2834  001080                     ___lmul:
  2835                           	opt stack 21
  2836                           
  2837                           ;incstack = 0
  2838  001080  0E00               	movlw	0
  2839  001082  6E52               	movwf	___lmul@product,c
  2840  001084  0E00               	movlw	0
  2841  001086  6E53               	movwf	___lmul@product+1,c
  2842  001088  0E00               	movlw	0
  2843  00108A  6E54               	movwf	___lmul@product+2,c
  2844  00108C  0E00               	movlw	0
  2845  00108E  6E55               	movwf	___lmul@product+3,c
  2846  001090                     l1845:
  2847  001090  A04A               	btfss	___lmul@multiplier,0,c
  2848  001092  D008               	goto	l1849
  2849  001094  504E               	movf	___lmul@multiplicand,w,c
  2850  001096  2652               	addwf	___lmul@product,f,c
  2851  001098  504F               	movf	___lmul@multiplicand+1,w,c
  2852  00109A  2253               	addwfc	___lmul@product+1,f,c
  2853  00109C  5050               	movf	___lmul@multiplicand+2,w,c
  2854  00109E  2254               	addwfc	___lmul@product+2,f,c
  2855  0010A0  5051               	movf	___lmul@multiplicand+3,w,c
  2856  0010A2  2255               	addwfc	___lmul@product+3,f,c
  2857  0010A4                     l1849:
  2858  0010A4  90D8               	bcf	status,0,c
  2859  0010A6  364E               	rlcf	___lmul@multiplicand,f,c
  2860  0010A8  364F               	rlcf	___lmul@multiplicand+1,f,c
  2861  0010AA  3650               	rlcf	___lmul@multiplicand+2,f,c
  2862  0010AC  3651               	rlcf	___lmul@multiplicand+3,f,c
  2863  0010AE  90D8               	bcf	status,0,c
  2864  0010B0  324D               	rrcf	___lmul@multiplier+3,f,c
  2865  0010B2  324C               	rrcf	___lmul@multiplier+2,f,c
  2866  0010B4  324B               	rrcf	___lmul@multiplier+1,f,c
  2867  0010B6  324A               	rrcf	___lmul@multiplier,f,c
  2868  0010B8  504A               	movf	___lmul@multiplier,w,c
  2869  0010BA  104B               	iorwf	___lmul@multiplier+1,w,c
  2870  0010BC  104C               	iorwf	___lmul@multiplier+2,w,c
  2871  0010BE  104D               	iorwf	___lmul@multiplier+3,w,c
  2872  0010C0  A4D8               	btfss	status,2,c
  2873  0010C2  D7E6               	goto	l1845
  2874  0010C4  C052  F04A         	movff	___lmul@product,?___lmul
  2875  0010C8  C053  F04B         	movff	___lmul@product+1,?___lmul+1
  2876  0010CC  C054  F04C         	movff	___lmul@product+2,?___lmul+2
  2877  0010D0  C055  F04D         	movff	___lmul@product+3,?___lmul+3
  2878  0010D4  0012               	return		;funcret
  2879  0010D6                     __end_of___lmul:
  2880                           	opt stack 0
  2881                           tosu	equ	0xFFF
  2882                           tosh	equ	0xFFE
  2883                           tosl	equ	0xFFD
  2884                           pclath	equ	0xFFA
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           postinc0	equ	0xFEE
  2892                           wreg	equ	0xFE8
  2893                           postinc1	equ	0xFE6
  2894                           fsr1h	equ	0xFE2
  2895                           fsr1l	equ	0xFE1
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function ___lldiv *****************
  2904 ;; Defined at:
  2905 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lldiv.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  dividend        4   31[COMRAM] unsigned long 
  2908 ;;  divisor         4   35[COMRAM] unsigned long 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  quotient        4   39[COMRAM] unsigned long 
  2911 ;;  counter         1   43[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  4   31[COMRAM] unsigned long 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         8       0       0       0       0       0       0
  2922 ;;      Locals:         5       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:        13       0       0       0       0       0       0
  2925 ;;Total ram usage:       13 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    4
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_SpeedCalcManage
  2932 ;;		_GetAvgSpeed
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text17
  2937  000F3A                     __ptext17:
  2938                           	opt stack 0
  2939  000F3A                     ___lldiv:
  2940                           	opt stack 22
  2941                           
  2942                           ;incstack = 0
  2943  000F3A  0E00               	movlw	0
  2944  000F3C  6E5E               	movwf	___lldiv@quotient,c
  2945  000F3E  0E00               	movlw	0
  2946  000F40  6E5F               	movwf	___lldiv@quotient+1,c
  2947  000F42  0E00               	movlw	0
  2948  000F44  6E60               	movwf	___lldiv@quotient+2,c
  2949  000F46  0E00               	movlw	0
  2950  000F48  6E61               	movwf	___lldiv@quotient+3,c
  2951  000F4A  505A               	movf	___lldiv@divisor,w,c
  2952  000F4C  105B               	iorwf	___lldiv@divisor+1,w,c
  2953  000F4E  105C               	iorwf	___lldiv@divisor+2,w,c
  2954  000F50  105D               	iorwf	___lldiv@divisor+3,w,c
  2955  000F52  B4D8               	btfsc	status,2,c
  2956  000F54  D02A               	goto	l743
  2957  000F56  0E01               	movlw	1
  2958  000F58  6E62               	movwf	___lldiv@counter,c
  2959  000F5A  D006               	goto	l1861
  2960  000F5C                     l1859:
  2961  000F5C  90D8               	bcf	status,0,c
  2962  000F5E  365A               	rlcf	___lldiv@divisor,f,c
  2963  000F60  365B               	rlcf	___lldiv@divisor+1,f,c
  2964  000F62  365C               	rlcf	___lldiv@divisor+2,f,c
  2965  000F64  365D               	rlcf	___lldiv@divisor+3,f,c
  2966  000F66  2A62               	incf	___lldiv@counter,f,c
  2967  000F68                     l1861:
  2968  000F68  AE5D               	btfss	___lldiv@divisor+3,7,c
  2969  000F6A  D7F8               	goto	l1859
  2970  000F6C                     l1863:
  2971  000F6C  90D8               	bcf	status,0,c
  2972  000F6E  365E               	rlcf	___lldiv@quotient,f,c
  2973  000F70  365F               	rlcf	___lldiv@quotient+1,f,c
  2974  000F72  3660               	rlcf	___lldiv@quotient+2,f,c
  2975  000F74  3661               	rlcf	___lldiv@quotient+3,f,c
  2976  000F76  505A               	movf	___lldiv@divisor,w,c
  2977  000F78  5C56               	subwf	___lldiv@dividend,w,c
  2978  000F7A  505B               	movf	___lldiv@divisor+1,w,c
  2979  000F7C  5857               	subwfb	___lldiv@dividend+1,w,c
  2980  000F7E  505C               	movf	___lldiv@divisor+2,w,c
  2981  000F80  5858               	subwfb	___lldiv@dividend+2,w,c
  2982  000F82  505D               	movf	___lldiv@divisor+3,w,c
  2983  000F84  5859               	subwfb	___lldiv@dividend+3,w,c
  2984  000F86  A0D8               	btfss	status,0,c
  2985  000F88  D009               	goto	l1871
  2986  000F8A  505A               	movf	___lldiv@divisor,w,c
  2987  000F8C  5E56               	subwf	___lldiv@dividend,f,c
  2988  000F8E  505B               	movf	___lldiv@divisor+1,w,c
  2989  000F90  5A57               	subwfb	___lldiv@dividend+1,f,c
  2990  000F92  505C               	movf	___lldiv@divisor+2,w,c
  2991  000F94  5A58               	subwfb	___lldiv@dividend+2,f,c
  2992  000F96  505D               	movf	___lldiv@divisor+3,w,c
  2993  000F98  5A59               	subwfb	___lldiv@dividend+3,f,c
  2994  000F9A  805E               	bsf	___lldiv@quotient,0,c
  2995  000F9C                     l1871:
  2996  000F9C  90D8               	bcf	status,0,c
  2997  000F9E  325D               	rrcf	___lldiv@divisor+3,f,c
  2998  000FA0  325C               	rrcf	___lldiv@divisor+2,f,c
  2999  000FA2  325B               	rrcf	___lldiv@divisor+1,f,c
  3000  000FA4  325A               	rrcf	___lldiv@divisor,f,c
  3001  000FA6  2E62               	decfsz	___lldiv@counter,f,c
  3002  000FA8  D7E1               	goto	l1863
  3003  000FAA                     l743:
  3004  000FAA  C05E  F056         	movff	___lldiv@quotient,?___lldiv
  3005  000FAE  C05F  F057         	movff	___lldiv@quotient+1,?___lldiv+1
  3006  000FB2  C060  F058         	movff	___lldiv@quotient+2,?___lldiv+2
  3007  000FB6  C061  F059         	movff	___lldiv@quotient+3,?___lldiv+3
  3008  000FBA  0012               	return		;funcret
  3009  000FBC                     __end_of___lldiv:
  3010                           	opt stack 0
  3011                           tosu	equ	0xFFF
  3012                           tosh	equ	0xFFE
  3013                           tosl	equ	0xFFD
  3014                           pclath	equ	0xFFA
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           postinc1	equ	0xFE6
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _BlinkDigit *****************
  3034 ;; Defined at:
  3035 ;;		line 121 in file "../../../../Common/Driver/BCDdisplay/BCDdisplay.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  Index           1    wreg     unsigned char 
  3038 ;;  duration        1   19[COMRAM] unsigned char 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  Index           1   20[COMRAM] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3050 ;;      Params:         1       0       0       0       0       0       0
  3051 ;;      Locals:         1       0       0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0
  3053 ;;      Totals:         2       0       0       0       0       0       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    4
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_APP_MANAGE
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text18
  3065  00135E                     __ptext18:
  3066                           	opt stack 0
  3067  00135E                     _BlinkDigit:
  3068                           	opt stack 22
  3069                           
  3070                           ;incstack = 0
  3071                           ;BlinkDigit@Index stored from wreg
  3072  00135E  6E4B               	movwf	BlinkDigit@Index,c
  3073                           
  3074                           ;BCDdisplay.c: 123: BlinkIndex = Index;
  3075  001360  C04B  F02F         	movff	BlinkDigit@Index,_BlinkIndex
  3076                           
  3077                           ;BCDdisplay.c: 124: BlinkDuration = duration;
  3078  001364  C04A  F02E         	movff	BlinkDigit@duration,_BlinkDuration
  3079  001368  0012               	return		;funcret
  3080  00136A                     __end_of_BlinkDigit:
  3081                           	opt stack 0
  3082                           tosu	equ	0xFFF
  3083                           tosh	equ	0xFFE
  3084                           tosl	equ	0xFFD
  3085                           pclath	equ	0xFFA
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           postinc1	equ	0xFE6
  3095                           fsr1h	equ	0xFE2
  3096                           fsr1l	equ	0xFE1
  3097                           indf2	equ	0xFDF
  3098                           postinc2	equ	0xFDE
  3099                           postdec2	equ	0xFDD
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _BCDsendNumber *****************
  3105 ;; Defined at:
  3106 ;;		line 34 in file "../../../../Common/Driver/BCDdisplay/BCDdisplay.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  Number          2   26[COMRAM] unsigned short 
  3109 ;;  DecimalPlace    1   28[COMRAM] unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  Buffer          2   35[COMRAM] unsigned short 
  3112 ;;  Output          2   33[COMRAM] unsigned short 
  3113 ;;  Link            2   31[COMRAM] unsigned short 
  3114 ;;  LoopIndex       1   37[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         3       0       0       0       0       0       0
  3125 ;;      Locals:         7       0       0       0       0       0       0
  3126 ;;      Temps:          2       0       0       0       0       0       0
  3127 ;;      Totals:        12       0       0       0       0       0       0
  3128 ;;Total ram usage:       12 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    5
  3131 ;; This function calls:
  3132 ;;		___lwdiv
  3133 ;;		___wmul
  3134 ;; This function is called by:
  3135 ;;		_APP_MANAGE
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text19
  3140  000A4C                     __ptext19:
  3141                           	opt stack 0
  3142  000A4C                     _BCDsendNumber:
  3143                           	opt stack 21
  3144                           
  3145                           ;BCDdisplay.c: 36: unsigned short Link,Output,Buffer;
  3146                           ;BCDdisplay.c: 37: unsigned char LoopIndex;
  3147                           ;BCDdisplay.c: 39: Buffer = Number;
  3148                           
  3149                           ;incstack = 0
  3150  000A4C  C051  F05A         	movff	BCDsendNumber@Number,BCDsendNumber@Buffer
  3151  000A50  C052  F05B         	movff	BCDsendNumber@Number+1,BCDsendNumber@Buffer+1
  3152                           
  3153                           ;BCDdisplay.c: 40: for( LoopIndex = (unsigned char)0; LoopIndex < 4 ; LoopIndex++)
  3154  000A54  0E00               	movlw	0
  3155  000A56  6E5C               	movwf	BCDsendNumber@LoopIndex,c
  3156  000A58                     l1925:
  3157  000A58  0E03               	movlw	3
  3158  000A5A  645C               	cpfsgt	BCDsendNumber@LoopIndex,c
  3159  000A5C  D001               	goto	l1929
  3160  000A5E  D05C               	goto	l1949
  3161  000A60                     l1929:
  3162                           
  3163                           ;BCDdisplay.c: 41: {
  3164                           ;BCDdisplay.c: 42: if((Buffer != (unsigned short)0)|| (LoopIndex <= DecimalPlace) )
  3165  000A60  505A               	movf	BCDsendNumber@Buffer,w,c
  3166  000A62  105B               	iorwf	BCDsendNumber@Buffer+1,w,c
  3167  000A64  A4D8               	btfss	status,2,c
  3168  000A66  D004               	goto	l55
  3169  000A68  505C               	movf	BCDsendNumber@LoopIndex,w,c
  3170  000A6A  5C53               	subwf	BCDsendNumber@DecimalPlace,w,c
  3171  000A6C  A0D8               	btfss	status,0,c
  3172  000A6E  D02D               	goto	l1939
  3173  000A70                     l55:
  3174                           
  3175                           ;BCDdisplay.c: 43: {
  3176                           ;BCDdisplay.c: 44: Link = Buffer;
  3177  000A70  C05A  F056         	movff	BCDsendNumber@Buffer,BCDsendNumber@Link
  3178  000A74  C05B  F057         	movff	BCDsendNumber@Buffer+1,BCDsendNumber@Link+1
  3179                           
  3180                           ;BCDdisplay.c: 45: Buffer = (unsigned short)(Buffer/(unsigned short)10);
  3181  000A78  C05A  F04A         	movff	BCDsendNumber@Buffer,___lwdiv@dividend
  3182  000A7C  C05B  F04B         	movff	BCDsendNumber@Buffer+1,___lwdiv@dividend+1
  3183  000A80  0E00               	movlw	0
  3184  000A82  6E4D               	movwf	___lwdiv@divisor+1,c
  3185  000A84  0E0A               	movlw	10
  3186  000A86  6E4C               	movwf	___lwdiv@divisor,c
  3187  000A88  EC6B  F008         	call	___lwdiv	;wreg free
  3188  000A8C  C04A  F05A         	movff	?___lwdiv,BCDsendNumber@Buffer
  3189  000A90  C04B  F05B         	movff	?___lwdiv+1,BCDsendNumber@Buffer+1
  3190                           
  3191                           ;BCDdisplay.c: 46: Output = Link - (unsigned short)(Buffer * (unsigned short)10);
  3192  000A94  C05A  F04A         	movff	BCDsendNumber@Buffer,___wmul@multiplier
  3193  000A98  C05B  F04B         	movff	BCDsendNumber@Buffer+1,___wmul@multiplier+1
  3194  000A9C  0E00               	movlw	0
  3195  000A9E  6E4D               	movwf	___wmul@multiplicand+1,c
  3196  000AA0  0E0A               	movlw	10
  3197  000AA2  6E4C               	movwf	___wmul@multiplicand,c
  3198  000AA4  EC5D  F009         	call	___wmul	;wreg free
  3199  000AA8  1E4A               	comf	?___wmul,f,c
  3200  000AAA  1E4B               	comf	?___wmul+1,f,c
  3201  000AAC  4A4A               	infsnz	?___wmul,f,c
  3202  000AAE  2A4B               	incf	?___wmul+1,f,c
  3203  000AB0  5056               	movf	BCDsendNumber@Link,w,c
  3204  000AB2  244A               	addwf	?___wmul,w,c
  3205  000AB4  6E58               	movwf	BCDsendNumber@Output,c
  3206  000AB6  5057               	movf	BCDsendNumber@Link+1,w,c
  3207  000AB8  204B               	addwfc	?___wmul+1,w,c
  3208  000ABA  6E59               	movwf	BCDsendNumber@Output+1,c
  3209                           
  3210                           ;BCDdisplay.c: 48: BCDNumber[LoopIndex] = SevenSegmentMAP[Output];
  3211  000ABC  0E11               	movlw	low _SevenSegmentMAP
  3212  000ABE  2458               	addwf	BCDsendNumber@Output,w,c
  3213  000AC0  6EF6               	movwf	tblptrl,c
  3214  000AC2  0E06               	movlw	high _SevenSegmentMAP
  3215  000AC4  2059               	addwfc	BCDsendNumber@Output+1,w,c
  3216  000AC6  6EF7               	movwf	tblptrh,c
  3217  000AC8                     	if	0	;There are less than 3 active tblptr bytes
  3218  000AC8  D008               	goto	L3
  3219  000ACA                     l1939:
  3220                           
  3221                           ;BCDdisplay.c: 50: else if (LoopIndex <= DecimalPlace)
  3222  000ACA  505C               	movf	BCDsendNumber@LoopIndex,w,c
  3223  000ACC  5C53               	subwf	BCDsendNumber@DecimalPlace,w,c
  3224  000ACE  A0D8               	btfss	status,0,c
  3225  000AD0  D015               	goto	l1943
  3226                           
  3227                           ;BCDdisplay.c: 51: {
  3228                           ;BCDdisplay.c: 52: BCDNumber[LoopIndex] = SevenSegmentMAP[0];
  3229  000AD2  0E11               	movlw	low _SevenSegmentMAP
  3230  000AD4  6EF6               	movwf	tblptrl,c
  3231  000AD6                     	if	1	;There is more than 1 active tblptr byte
  3232  000AD6  0E06               	movlw	high _SevenSegmentMAP
  3233  000AD8  6EF7               	movwf	tblptrh,c
  3234  000ADA                     	endif
  3235  000ADA                     	if	0	;There are less than 3 active tblptr bytes
  3236  000ADA                     L3:
  3237  000ADA                     	endif
  3238  000ADA  0008               	tblrd		*
  3239  000ADC  50F5               	movf	tablat,w,c
  3240  000ADE  6E54               	movwf	??_BCDsendNumber& (0+255),c
  3241  000AE0  6A55               	clrf	(??_BCDsendNumber+1)& (0+255),c
  3242  000AE2  505C               	movf	BCDsendNumber@LoopIndex,w,c
  3243  000AE4  0D02               	mullw	2
  3244  000AE6  0E11               	movlw	low _BCDNumber
  3245  000AE8  24F3               	addwf	prodl,w,c
  3246  000AEA  6ED9               	movwf	fsr2l,c
  3247  000AEC  0E00               	movlw	high _BCDNumber
  3248  000AEE  20F4               	addwfc	prodh,w,c
  3249  000AF0  6EDA               	movwf	fsr2h,c
  3250  000AF2  C054  FFDE         	movff	??_BCDsendNumber,postinc2
  3251  000AF6  C055  FFDD         	movff	??_BCDsendNumber+1,postdec2
  3252                           
  3253                           ;BCDdisplay.c: 53: }
  3254  000AFA  D00C               	goto	l1945
  3255  000AFC                     l1943:
  3256                           
  3257                           ;BCDdisplay.c: 54: else
  3258                           ;BCDdisplay.c: 55: {
  3259                           ;BCDdisplay.c: 56: BCDNumber[LoopIndex] = 0x0;
  3260  000AFC  505C               	movf	BCDsendNumber@LoopIndex,w,c
  3261  000AFE  0D02               	mullw	2
  3262  000B00  0E11               	movlw	low _BCDNumber
  3263  000B02  24F3               	addwf	prodl,w,c
  3264  000B04  6ED9               	movwf	fsr2l,c
  3265  000B06  0E00               	movlw	high _BCDNumber
  3266  000B08  20F4               	addwfc	prodh,w,c
  3267  000B0A  6EDA               	movwf	fsr2h,c
  3268  000B0C  0E00               	movlw	0
  3269  000B0E  6EDE               	movwf	postinc2,c
  3270  000B10  0E00               	movlw	0
  3271  000B12  6EDD               	movwf	postdec2,c
  3272  000B14                     l1945:
  3273  000B14  2A5C               	incf	BCDsendNumber@LoopIndex,f,c
  3274  000B16  D7A0               	goto	l1925
  3275  000B18                     l1949:
  3276                           
  3277                           ;BCDdisplay.c: 57: }
  3278                           ;BCDdisplay.c: 58: }
  3279                           ;BCDdisplay.c: 59: if(DecimalPlace != (unsigned char)0)
  3280  000B18  5053               	movf	BCDsendNumber@DecimalPlace,w,c
  3281  000B1A  B4D8               	btfsc	status,2,c
  3282  000B1C  0012               	return	
  3283                           
  3284                           ;BCDdisplay.c: 60: {
  3285                           ;BCDdisplay.c: 61: BCDNumber[DecimalPlace] |= SevenSegmentMAP[10];
  3286  000B1E  5053               	movf	BCDsendNumber@DecimalPlace,w,c
  3287  000B20  0D02               	mullw	2
  3288  000B22  0E11               	movlw	low _BCDNumber
  3289  000B24  24F3               	addwf	prodl,w,c
  3290  000B26  6ED9               	movwf	fsr2l,c
  3291  000B28  0E00               	movlw	high _BCDNumber
  3292  000B2A  20F4               	addwfc	prodh,w,c
  3293  000B2C  6EDA               	movwf	fsr2h,c
  3294  000B2E  0E1B               	movlw	low (_SevenSegmentMAP+10)
  3295  000B30  6EF6               	movwf	tblptrl,c
  3296  000B32  0E06               	movlw	high (_SevenSegmentMAP+10)
  3297  000B34  6EF7               	movwf	tblptrh,c
  3298  000B36                     	if	0	;tblptru may be non-zero
  3299  000B36                     	endif
  3300  000B36                     	if	0	;tblptru may be non-zero
  3301  000B36                     	endif
  3302  000B36  0008               	tblrd		*
  3303  000B38  50F5               	movf	tablat,w,c
  3304  000B3A  12DE               	iorwf	postinc2,f,c
  3305  000B3C  0E00               	movlw	0
  3306  000B3E  12DD               	iorwf	postdec2,f,c
  3307  000B40  0012               	return	
  3308  000B42                     __end_of_BCDsendNumber:
  3309                           	opt stack 0
  3310                           tosu	equ	0xFFF
  3311                           tosh	equ	0xFFE
  3312                           tosl	equ	0xFFD
  3313                           pclath	equ	0xFFA
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           postinc0	equ	0xFEE
  3321                           wreg	equ	0xFE8
  3322                           postinc1	equ	0xFE6
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           indf2	equ	0xFDF
  3326                           postinc2	equ	0xFDE
  3327                           postdec2	equ	0xFDD
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function ___wmul *****************
  3333 ;; Defined at:
  3334 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  multiplier      2   19[COMRAM] unsigned int 
  3337 ;;  multiplicand    2   21[COMRAM] unsigned int 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  product         2   23[COMRAM] unsigned int 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   19[COMRAM] unsigned int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, prodl, prodh
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         4       0       0       0       0       0       0
  3350 ;;      Locals:         2       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         6       0       0       0       0       0       0
  3353 ;;Total ram usage:        6 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    4
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_APP_MANAGE
  3360 ;;		_BCDsendNumber
  3361 ;;		_SpeedCalcManage
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text20
  3366  0012BA                     __ptext20:
  3367                           	opt stack 0
  3368  0012BA                     ___wmul:
  3369                           	opt stack 22
  3370                           
  3371                           ;incstack = 0
  3372  0012BA  504A               	movf	___wmul@multiplier,w,c
  3373  0012BC  024C               	mulwf	___wmul@multiplicand,c
  3374  0012BE  CFF3 F04E          	movff	prodl,___wmul@product
  3375  0012C2  CFF4 F04F          	movff	prodh,___wmul@product+1
  3376  0012C6  504A               	movf	___wmul@multiplier,w,c
  3377  0012C8  024D               	mulwf	___wmul@multiplicand+1,c
  3378  0012CA  50F3               	movf	prodl,w,c
  3379  0012CC  264F               	addwf	___wmul@product+1,f,c
  3380  0012CE  504B               	movf	___wmul@multiplier+1,w,c
  3381  0012D0  024C               	mulwf	___wmul@multiplicand,c
  3382  0012D2  50F3               	movf	prodl,w,c
  3383  0012D4  264F               	addwf	___wmul@product+1,f,c
  3384  0012D6  C04E  F04A         	movff	___wmul@product,?___wmul
  3385  0012DA  C04F  F04B         	movff	___wmul@product+1,?___wmul+1
  3386  0012DE  0012               	return	
  3387  0012E0                     __end_of___wmul:
  3388                           	opt stack 0
  3389                           tosu	equ	0xFFF
  3390                           tosh	equ	0xFFE
  3391                           tosl	equ	0xFFD
  3392                           pclath	equ	0xFFA
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           postinc1	equ	0xFE6
  3402                           fsr1h	equ	0xFE2
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function ___lwdiv *****************
  3412 ;; Defined at:
  3413 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        2   19[COMRAM] unsigned int 
  3416 ;;  divisor         2   21[COMRAM] unsigned int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  quotient        2   24[COMRAM] unsigned int 
  3419 ;;  counter         1   23[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   19[COMRAM] unsigned int 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3429 ;;      Params:         4       0       0       0       0       0       0
  3430 ;;      Locals:         3       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0
  3432 ;;      Totals:         7       0       0       0       0       0       0
  3433 ;;Total ram usage:        7 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_BCDsendNumber
  3440 ;;		_SpeedCalcManage
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text21
  3445  0010D6                     __ptext21:
  3446                           	opt stack 0
  3447  0010D6                     ___lwdiv:
  3448                           	opt stack 22
  3449                           
  3450                           ;incstack = 0
  3451  0010D6  0E00               	movlw	0
  3452  0010D8  6E50               	movwf	___lwdiv@quotient+1,c
  3453  0010DA  0E00               	movlw	0
  3454  0010DC  6E4F               	movwf	___lwdiv@quotient,c
  3455  0010DE  504C               	movf	___lwdiv@divisor,w,c
  3456  0010E0  104D               	iorwf	___lwdiv@divisor+1,w,c
  3457  0010E2  B4D8               	btfsc	status,2,c
  3458  0010E4  D01C               	goto	l796
  3459  0010E6  0E01               	movlw	1
  3460  0010E8  6E4E               	movwf	___lwdiv@counter,c
  3461  0010EA  D004               	goto	l1883
  3462  0010EC                     l1881:
  3463  0010EC  90D8               	bcf	status,0,c
  3464  0010EE  364C               	rlcf	___lwdiv@divisor,f,c
  3465  0010F0  364D               	rlcf	___lwdiv@divisor+1,f,c
  3466  0010F2  2A4E               	incf	___lwdiv@counter,f,c
  3467  0010F4                     l1883:
  3468  0010F4  AE4D               	btfss	___lwdiv@divisor+1,7,c
  3469  0010F6  D7FA               	goto	l1881
  3470  0010F8                     l1885:
  3471  0010F8  90D8               	bcf	status,0,c
  3472  0010FA  364F               	rlcf	___lwdiv@quotient,f,c
  3473  0010FC  3650               	rlcf	___lwdiv@quotient+1,f,c
  3474  0010FE  504C               	movf	___lwdiv@divisor,w,c
  3475  001100  5C4A               	subwf	___lwdiv@dividend,w,c
  3476  001102  504D               	movf	___lwdiv@divisor+1,w,c
  3477  001104  584B               	subwfb	___lwdiv@dividend+1,w,c
  3478  001106  A0D8               	btfss	status,0,c
  3479  001108  D005               	goto	l1893
  3480  00110A  504C               	movf	___lwdiv@divisor,w,c
  3481  00110C  5E4A               	subwf	___lwdiv@dividend,f,c
  3482  00110E  504D               	movf	___lwdiv@divisor+1,w,c
  3483  001110  5A4B               	subwfb	___lwdiv@dividend+1,f,c
  3484  001112  804F               	bsf	___lwdiv@quotient,0,c
  3485  001114                     l1893:
  3486  001114  90D8               	bcf	status,0,c
  3487  001116  324D               	rrcf	___lwdiv@divisor+1,f,c
  3488  001118  324C               	rrcf	___lwdiv@divisor,f,c
  3489  00111A  2E4E               	decfsz	___lwdiv@counter,f,c
  3490  00111C  D7ED               	goto	l1885
  3491  00111E                     l796:
  3492  00111E  C04F  F04A         	movff	___lwdiv@quotient,?___lwdiv
  3493  001122  C050  F04B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3494  001126  0012               	return		;funcret
  3495  001128                     __end_of___lwdiv:
  3496                           	opt stack 0
  3497                           tosu	equ	0xFFF
  3498                           tosh	equ	0xFFE
  3499                           tosl	equ	0xFFD
  3500                           pclath	equ	0xFFA
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postinc1	equ	0xFE6
  3510                           fsr1h	equ	0xFE2
  3511                           fsr1l	equ	0xFE1
  3512                           indf2	equ	0xFDF
  3513                           postinc2	equ	0xFDE
  3514                           postdec2	equ	0xFDD
  3515                           fsr2h	equ	0xFDA
  3516                           fsr2l	equ	0xFD9
  3517                           status	equ	0xFD8
  3518                           
  3519 ;; *************** function _BCDManage7segment *****************
  3520 ;; Defined at:
  3521 ;;		line 65 in file "../../../../Common/Driver/BCDdisplay/BCDdisplay.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  BCD             1   24[COMRAM] unsigned char 
  3526 ;;  Index           1   23[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3536 ;;      Params:         0       0       0       0       0       0       0
  3537 ;;      Locals:         2       0       0       0       0       0       0
  3538 ;;      Temps:          2       0       0       0       0       0       0
  3539 ;;      Totals:         4       0       0       0       0       0       0
  3540 ;;Total ram usage:        4 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    5
  3543 ;; This function calls:
  3544 ;;		_HWI_4Digit_WRITE
  3545 ;;		_HWI_8Digit_WRITE
  3546 ;; This function is called by:
  3547 ;;		_DisplayAlphaNumeric
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text22
  3552  000D86                     __ptext22:
  3553                           	opt stack 0
  3554  000D86                     _BCDManage7segment:
  3555                           	opt stack 22
  3556                           
  3557                           ;BCDdisplay.c: 67: static unsigned char DigitIndex = (unsigned char)0;
  3558                           ;BCDdisplay.c: 68: static unsigned char BlinkCounter = (unsigned char)0;
  3559                           ;BCDdisplay.c: 69: unsigned char Index;
  3560                           ;BCDdisplay.c: 70: unsigned char BCD = (unsigned char)0;
  3561                           
  3562                           ;incstack = 0
  3563  000D86  0E00               	movlw	0
  3564  000D88  6E4F               	movwf	BCDManage7segment@BCD,c
  3565                           
  3566                           ;BCDdisplay.c: 73: if( BlinkDuration != (unsigned char)0)
  3567  000D8A  502E               	movf	_BlinkDuration,w,c
  3568  000D8C  B4D8               	btfsc	status,2,c
  3569  000D8E  D00A               	goto	l1691
  3570                           
  3571                           ;BCDdisplay.c: 74: {
  3572                           ;BCDdisplay.c: 75: BlinkCounter++;
  3573  000D90  2A2C               	incf	BCDManage7segment@BlinkCounter,f,c
  3574                           
  3575                           ;BCDdisplay.c: 76: if(BlinkCounter == BlinkDuration)
  3576  000D92  502E               	movf	_BlinkDuration,w,c
  3577  000D94  182C               	xorwf	BCDManage7segment@BlinkCounter,w,c
  3578  000D96  A4D8               	btfss	status,2,c
  3579  000D98  D007               	goto	l1693
  3580                           
  3581                           ;BCDdisplay.c: 77: {
  3582                           ;BCDdisplay.c: 78: BlinkFlag ^= (unsigned char)1;
  3583  000D9A  0E01               	movlw	1
  3584  000D9C  1A2D               	xorwf	_BlinkFlag,f,c
  3585                           
  3586                           ;BCDdisplay.c: 79: BlinkCounter = (unsigned char)0;
  3587  000D9E  0E00               	movlw	0
  3588  000DA0  6E2C               	movwf	BCDManage7segment@BlinkCounter,c
  3589                           
  3590                           ;BCDdisplay.c: 80: }
  3591                           ;BCDdisplay.c: 81: }
  3592  000DA2  D002               	goto	l1693
  3593  000DA4                     l1691:
  3594                           
  3595                           ;BCDdisplay.c: 82: else
  3596                           ;BCDdisplay.c: 83: {
  3597                           ;BCDdisplay.c: 84: BlinkFlag = (unsigned char)0;
  3598  000DA4  0E00               	movlw	0
  3599  000DA6  6E2D               	movwf	_BlinkFlag,c
  3600  000DA8                     l1693:
  3601                           
  3602                           ;BCDdisplay.c: 85: }
  3603                           ;BCDdisplay.c: 87: if( ((unsigned char)1 == BlinkFlag)&& (DigitIndex == BlinkIndex))
  3604  000DA8  042D               	decf	_BlinkFlag,w,c
  3605  000DAA  A4D8               	btfss	status,2,c
  3606  000DAC  D007               	goto	l1699
  3607  000DAE  502F               	movf	_BlinkIndex,w,c
  3608  000DB0  1836               	xorwf	BCDManage7segment@DigitIndex,w,c
  3609  000DB2  A4D8               	btfss	status,2,c
  3610  000DB4  D003               	goto	l1699
  3611                           
  3612                           ;BCDdisplay.c: 88: {
  3613                           ;BCDdisplay.c: 89: Index = (unsigned char)0xF;
  3614  000DB6  0E0F               	movlw	15
  3615  000DB8  6E4E               	movwf	BCDManage7segment@Index,c
  3616                           
  3617                           ;BCDdisplay.c: 90: }
  3618  000DBA  D01A               	goto	l1703
  3619  000DBC                     l1699:
  3620                           
  3621                           ;BCDdisplay.c: 91: else
  3622                           ;BCDdisplay.c: 92: {
  3623                           ;BCDdisplay.c: 93: Index = (~(((unsigned char) 0x1 << ((4 - DigitIndex)
  3624                           ;BCDdisplay.c: 94: - (unsigned char)1))));
  3625  000DBC  2836               	incf	BCDManage7segment@DigitIndex,w,c
  3626  000DBE  0800               	sublw	0
  3627  000DC0  6E4C               	movwf	??_BCDManage7segment& (0+255),c
  3628  000DC2  0E04               	movlw	4
  3629  000DC4  264C               	addwf	??_BCDManage7segment,f,c
  3630  000DC6  0E01               	movlw	1
  3631  000DC8  6E4D               	movwf	(??_BCDManage7segment+1)& (0+255),c
  3632  000DCA  2A4C               	incf	??_BCDManage7segment,f,c
  3633  000DCC  D002               	goto	u864
  3634  000DCE                     u865:
  3635  000DCE  90D8               	bcf	status,0,c
  3636  000DD0  364D               	rlcf	??_BCDManage7segment+1,f,c
  3637  000DD2                     u864:
  3638  000DD2  2E4C               	decfsz	??_BCDManage7segment,f,c
  3639  000DD4  D7FC               	goto	u865
  3640  000DD6  504D               	movf	??_BCDManage7segment+1,w,c
  3641  000DD8  0AFF               	xorlw	255
  3642  000DDA  6E4E               	movwf	BCDManage7segment@Index,c
  3643                           
  3644                           ;BCDdisplay.c: 95: BCD = BCDNumber[DigitIndex];
  3645  000DDC  5036               	movf	BCDManage7segment@DigitIndex,w,c
  3646  000DDE  0D02               	mullw	2
  3647  000DE0  0E11               	movlw	low _BCDNumber
  3648  000DE2  24F3               	addwf	prodl,w,c
  3649  000DE4  6ED9               	movwf	fsr2l,c
  3650  000DE6  0E00               	movlw	high _BCDNumber
  3651  000DE8  20F4               	addwfc	prodh,w,c
  3652  000DEA  6EDA               	movwf	fsr2h,c
  3653  000DEC  50DF               	movf	indf2,w,c
  3654  000DEE  6E4F               	movwf	BCDManage7segment@BCD,c
  3655  000DF0                     l1703:
  3656                           
  3657                           ;BCDdisplay.c: 96: }
  3658                           ;BCDdisplay.c: 98: if( (unsigned char)1 == bIsAnodeUsed)
  3659  000DF0  046B               	decf	_bIsAnodeUsed,w,c
  3660  000DF2  A4D8               	btfss	status,2,c
  3661  000DF4  D002               	goto	l1707
  3662                           
  3663                           ;BCDdisplay.c: 99: {
  3664                           ;BCDdisplay.c: 100: Index = (unsigned char)~Index;
  3665  000DF6  1E4E               	comf	BCDManage7segment@Index,f,c
  3666                           
  3667                           ;BCDdisplay.c: 101: BCD = (unsigned char)~BCD;
  3668  000DF8  1E4F               	comf	BCDManage7segment@BCD,f,c
  3669  000DFA                     l1707:
  3670                           
  3671                           ;BCDdisplay.c: 102: }
  3672                           ;BCDdisplay.c: 104: HWI_4Digit_WRITE(0,Index);
  3673  000DFA  C04E  F04A         	movff	BCDManage7segment@Index,HWI_4Digit_WRITE@value
  3674  000DFE  0E00               	movlw	0
  3675  000E00  ECEA  F008         	call	_HWI_4Digit_WRITE
  3676                           
  3677                           ;BCDdisplay.c: 105: HWI_8Digit_WRITE(1,BCD);
  3678  000E04  C04F  F04A         	movff	BCDManage7segment@BCD,HWI_8Digit_WRITE@value
  3679  000E08  0E01               	movlw	1
  3680  000E0A  EC70  F009         	call	_HWI_8Digit_WRITE
  3681                           
  3682                           ;BCDdisplay.c: 112: DigitIndex ++;
  3683  000E0E  2A36               	incf	BCDManage7segment@DigitIndex,f,c
  3684                           
  3685                           ;BCDdisplay.c: 113: if(DigitIndex == 4)
  3686  000E10  0E04               	movlw	4
  3687  000E12  1836               	xorwf	BCDManage7segment@DigitIndex,w,c
  3688  000E14  A4D8               	btfss	status,2,c
  3689  000E16  0012               	return	
  3690                           
  3691                           ;BCDdisplay.c: 114: {
  3692                           ;BCDdisplay.c: 115: DigitIndex = (unsigned char)0;
  3693  000E18  0E00               	movlw	0
  3694  000E1A  6E36               	movwf	BCDManage7segment@DigitIndex,c
  3695  000E1C  0012               	return	
  3696  000E1E                     __end_of_BCDManage7segment:
  3697                           	opt stack 0
  3698                           tosu	equ	0xFFF
  3699                           tosh	equ	0xFFE
  3700                           tosl	equ	0xFFD
  3701                           pclath	equ	0xFFA
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           postinc1	equ	0xFE6
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _HWI_8Digit_WRITE *****************
  3721 ;; Defined at:
  3722 ;;		line 41 in file "../../HWIsource/HWI_DIGITAL.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  port            1    wreg     unsigned char 
  3725 ;;  value           1   19[COMRAM] unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  port            1   20[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3737 ;;      Params:         1       0       0       0       0       0       0
  3738 ;;      Locals:         1       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0
  3740 ;;      Totals:         2       0       0       0       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    4
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_BCDManage7segment
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752  0012E0                     __ptext23:
  3753                           	opt stack 0
  3754  0012E0                     _HWI_8Digit_WRITE:
  3755                           	opt stack 22
  3756                           
  3757                           ;incstack = 0
  3758                           ;HWI_8Digit_WRITE@port stored from wreg
  3759  0012E0  6E4B               	movwf	HWI_8Digit_WRITE@port,c
  3760                           
  3761                           ;HWI_DIGITAL.c: 43: switch (port)
  3762  0012E2  D009               	goto	l1639
  3763  0012E4                     l293:
  3764                           
  3765                           ;HWI_DIGITAL.c: 46: PORTC = value;
  3766  0012E4  C04A  FF82         	movff	HWI_8Digit_WRITE@value,3970	;volatile
  3767                           
  3768                           ;HWI_DIGITAL.c: 47: break;
  3769  0012E8  0012               	return	
  3770  0012EA                     l295:
  3771                           
  3772                           ;HWI_DIGITAL.c: 49: PORTD = value;
  3773  0012EA  C04A  FF83         	movff	HWI_8Digit_WRITE@value,3971	;volatile
  3774                           
  3775                           ;HWI_DIGITAL.c: 50: break;
  3776  0012EE  0012               	return	
  3777  0012F0                     l296:
  3778                           
  3779                           ;HWI_DIGITAL.c: 52: PORTD = value;
  3780  0012F0  C04A  FF83         	movff	HWI_8Digit_WRITE@value,3971	;volatile
  3781                           
  3782                           ;HWI_DIGITAL.c: 53: }
  3783  0012F4  0012               	return	
  3784  0012F6                     l1639:
  3785  0012F6  504B               	movf	HWI_8Digit_WRITE@port,w,c
  3786                           
  3787                           ; Switch size 1, requested type "space"
  3788                           ; Number of cases is 2, Range of values is 0 to 1
  3789                           ; switch strategies available:
  3790                           ; Name         Instructions Cycles
  3791                           ; simple_byte            7     4 (average)
  3792                           ;	Chosen strategy is simple_byte
  3793  0012F8  0A00               	xorlw	0	; case 0
  3794  0012FA  B4D8               	btfsc	status,2,c
  3795  0012FC  D7F3               	goto	l293
  3796  0012FE  0A01               	xorlw	1	; case 1
  3797  001300  B4D8               	btfsc	status,2,c
  3798  001302  D7F3               	goto	l295
  3799  001304  D7F5               	goto	l296
  3800  001306                     __end_of_HWI_8Digit_WRITE:
  3801                           	opt stack 0
  3802                           tosu	equ	0xFFF
  3803                           tosh	equ	0xFFE
  3804                           tosl	equ	0xFFD
  3805                           pclath	equ	0xFFA
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           postinc1	equ	0xFE6
  3815                           fsr1h	equ	0xFE2
  3816                           fsr1l	equ	0xFE1
  3817                           indf2	equ	0xFDF
  3818                           postinc2	equ	0xFDE
  3819                           postdec2	equ	0xFDD
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _HWI_4Digit_WRITE *****************
  3825 ;; Defined at:
  3826 ;;		line 8 in file "../../HWIsource/HWI_DIGITAL.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  port            1    wreg     unsigned char 
  3829 ;;  value           1   19[COMRAM] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  port            1   20[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         1       0       0       0       0       0       0
  3842 ;;      Locals:         1       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0
  3844 ;;      Totals:         2       0       0       0       0       0       0
  3845 ;;Total ram usage:        2 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    4
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_BCDManage7segment
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text24
  3856  0011D4                     __ptext24:
  3857                           	opt stack 0
  3858  0011D4                     _HWI_4Digit_WRITE:
  3859                           	opt stack 22
  3860                           
  3861                           ;incstack = 0
  3862                           ;HWI_4Digit_WRITE@port stored from wreg
  3863  0011D4  6E4B               	movwf	HWI_4Digit_WRITE@port,c
  3864                           
  3865                           ;HWI_DIGITAL.c: 10: switch (port)
  3866  0011D6  D00F               	goto	l1635
  3867  0011D8                     l1629:
  3868                           
  3869                           ;HWI_DIGITAL.c: 13: PORTC = (LATC & 0xF0) | value;
  3870  0011D8  508B               	movf	3979,w,c	;volatile
  3871  0011DA  0BF0               	andlw	240
  3872  0011DC  104A               	iorwf	HWI_4Digit_WRITE@value,w,c
  3873  0011DE  6E82               	movwf	3970,c	;volatile
  3874                           
  3875                           ;HWI_DIGITAL.c: 14: break;
  3876  0011E0  0012               	return	
  3877  0011E2                     l1631:
  3878                           
  3879                           ;HWI_DIGITAL.c: 16: PORTD = (LATD & 0xF0) | value;
  3880  0011E2  508C               	movf	3980,w,c	;volatile
  3881  0011E4  0BF0               	andlw	240
  3882  0011E6  104A               	iorwf	HWI_4Digit_WRITE@value,w,c
  3883  0011E8  6E83               	movwf	3971,c	;volatile
  3884                           
  3885                           ;HWI_DIGITAL.c: 17: break;
  3886  0011EA  0012               	return	
  3887  0011EC                     l1633:
  3888                           
  3889                           ;HWI_DIGITAL.c: 19: PORTD = (LATD & 0xF0) | value;
  3890  0011EC  508C               	movf	3980,w,c	;volatile
  3891  0011EE  0BF0               	andlw	240
  3892  0011F0  104A               	iorwf	HWI_4Digit_WRITE@value,w,c
  3893  0011F2  6E83               	movwf	3971,c	;volatile
  3894                           
  3895                           ;HWI_DIGITAL.c: 20: }
  3896  0011F4  0012               	return	
  3897  0011F6                     l1635:
  3898  0011F6  504B               	movf	HWI_4Digit_WRITE@port,w,c
  3899                           
  3900                           ; Switch size 1, requested type "space"
  3901                           ; Number of cases is 2, Range of values is 0 to 1
  3902                           ; switch strategies available:
  3903                           ; Name         Instructions Cycles
  3904                           ; simple_byte            7     4 (average)
  3905                           ;	Chosen strategy is simple_byte
  3906  0011F8  0A00               	xorlw	0	; case 0
  3907  0011FA  B4D8               	btfsc	status,2,c
  3908  0011FC  D7ED               	goto	l1629
  3909  0011FE  0A01               	xorlw	1	; case 1
  3910  001200  B4D8               	btfsc	status,2,c
  3911  001202  D7EF               	goto	l1631
  3912  001204  D7F3               	goto	l1633
  3913  001206                     __end_of_HWI_4Digit_WRITE:
  3914                           	opt stack 0
  3915                           tosu	equ	0xFFF
  3916                           tosh	equ	0xFFE
  3917                           tosl	equ	0xFFD
  3918                           pclath	equ	0xFFA
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           postinc1	equ	0xFE6
  3928                           fsr1h	equ	0xFE2
  3929                           fsr1l	equ	0xFE1
  3930                           indf2	equ	0xFDF
  3931                           postinc2	equ	0xFDE
  3932                           postdec2	equ	0xFDD
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _HWI_INTERRUPTS_INTITALIZE *****************
  3938 ;; Defined at:
  3939 ;;		line 10 in file "../../HWIsource/HWI_Interrupts.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3953 ;;      Params:         0       0       0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0
  3956 ;;      Totals:         0       0       0       0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    4
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_Start_App
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text25
  3968  001128                     __ptext25:
  3969                           	opt stack 0
  3970  001128                     _HWI_INTERRUPTS_INTITALIZE:
  3971                           	opt stack 25
  3972                           
  3973                           ;HWI_Interrupts.c: 12: TRISBbits.RB0 = 1;
  3974                           
  3975                           ;incstack = 0
  3976  001128  8093               	bsf	3987,0,c	;volatile
  3977                           
  3978                           ;HWI_Interrupts.c: 13: TRISBbits.RB1 = 1;
  3979  00112A  8293               	bsf	3987,1,c	;volatile
  3980                           
  3981                           ;HWI_Interrupts.c: 15: INTCON = 0b11110000;
  3982  00112C  0EF0               	movlw	240
  3983  00112E  6EF2               	movwf	intcon,c	;volatile
  3984                           
  3985                           ;HWI_Interrupts.c: 16: INTCON3 = 0b00001000;
  3986  001130  0E08               	movlw	8
  3987  001132  6EF0               	movwf	intcon3,c	;volatile
  3988                           
  3989                           ;HWI_Interrupts.c: 20: T0CON =0b11010001;
  3990  001134  0ED1               	movlw	209
  3991  001136  6ED5               	movwf	4053,c	;volatile
  3992                           
  3993                           ;HWI_Interrupts.c: 21: T1CON =0b10000101;
  3994  001138  0E85               	movlw	133
  3995  00113A  6ECD               	movwf	4045,c	;volatile
  3996                           
  3997                           ;HWI_Interrupts.c: 23: T3CON =0b10011101;
  3998  00113C  0E9D               	movlw	157
  3999  00113E  6EB1               	movwf	4017,c	;volatile
  4000                           
  4001                           ;HWI_Interrupts.c: 26: INTCON2bits.INTEDG0 = 1;
  4002  001140  8CF1               	bsf	intcon2,6,c	;volatile
  4003                           
  4004                           ;HWI_Interrupts.c: 27: INTCON2bits.INTEDG1 = 1;
  4005  001142  8AF1               	bsf	intcon2,5,c	;volatile
  4006                           
  4007                           ;HWI_Interrupts.c: 29: TMR0IF=0;
  4008  001144  94F2               	bcf	intcon,2,c	;volatile
  4009                           
  4010                           ;HWI_Interrupts.c: 30: TMR0IE=1;
  4011  001146  8AF2               	bsf	intcon,5,c	;volatile
  4012                           
  4013                           ;HWI_Interrupts.c: 32: TMR1IF=0;
  4014  001148  909E               	bcf	3998,0,c	;volatile
  4015                           
  4016                           ;HWI_Interrupts.c: 33: TMR1IE=1;
  4017  00114A  809D               	bsf	3997,0,c	;volatile
  4018                           
  4019                           ;HWI_Interrupts.c: 38: TMR3IF=0;
  4020  00114C  92A1               	bcf	4001,1,c	;volatile
  4021                           
  4022                           ;HWI_Interrupts.c: 39: TMR3IE=1;
  4023  00114E  82A0               	bsf	4000,1,c	;volatile
  4024                           
  4025                           ;HWI_Interrupts.c: 41: TMR0L= 19;
  4026  001150  0E13               	movlw	19
  4027  001152  6ED6               	movwf	4054,c	;volatile
  4028                           
  4029                           ;HWI_Interrupts.c: 43: TMR1 = 0;
  4030  001154  0E00               	movlw	0
  4031  001156  6ECF               	movwf	4047,c	;volatile
  4032  001158  0E00               	movlw	0
  4033  00115A  6ECE               	movwf	4046,c	;volatile
  4034                           
  4035                           ;HWI_Interrupts.c: 47: TMR3L=0;
  4036  00115C  0E00               	movlw	0
  4037  00115E  6EB2               	movwf	4018,c	;volatile
  4038                           
  4039                           ;HWI_Interrupts.c: 48: TMR3H=0;
  4040  001160  0E00               	movlw	0
  4041  001162  6EB3               	movwf	4019,c	;volatile
  4042  001164  0012               	return		;funcret
  4043  001166                     __end_of_HWI_INTERRUPTS_INTITALIZE:
  4044                           	opt stack 0
  4045                           tosu	equ	0xFFF
  4046                           tosh	equ	0xFFE
  4047                           tosl	equ	0xFFD
  4048                           pclath	equ	0xFFA
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           intcon2	equ	0xFF1
  4057                           intcon3	equ	0xFF0
  4058                           postinc0	equ	0xFEE
  4059                           wreg	equ	0xFE8
  4060                           postinc1	equ	0xFE6
  4061                           fsr1h	equ	0xFE2
  4062                           fsr1l	equ	0xFE1
  4063                           indf2	equ	0xFDF
  4064                           postinc2	equ	0xFDE
  4065                           postdec2	equ	0xFDD
  4066                           fsr2h	equ	0xFDA
  4067                           fsr2l	equ	0xFD9
  4068                           status	equ	0xFD8
  4069                           
  4070 ;; *************** function _HWI_DIGITAL_INITIALIZE *****************
  4071 ;; Defined at:
  4072 ;;		line 74 in file "../../HWIsource/HWI_DIGITAL.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4086 ;;      Params:         0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    4
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_Start_App
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text26
  4101  001306                     __ptext26:
  4102                           	opt stack 0
  4103  001306                     _HWI_DIGITAL_INITIALIZE:
  4104                           	opt stack 25
  4105                           
  4106                           ;HWI_DIGITAL.c: 77: TRISD = 0x0;
  4107                           
  4108                           ;incstack = 0
  4109  001306  0E00               	movlw	0
  4110  001308  6E95               	movwf	3989,c	;volatile
  4111                           
  4112                           ;HWI_DIGITAL.c: 78: PORTD = 0x0;
  4113  00130A  0E00               	movlw	0
  4114  00130C  6E83               	movwf	3971,c	;volatile
  4115                           
  4116                           ;HWI_DIGITAL.c: 80: TRISC = 0x0;
  4117  00130E  0E00               	movlw	0
  4118  001310  6E94               	movwf	3988,c	;volatile
  4119                           
  4120                           ;HWI_DIGITAL.c: 81: TRISBbits.RB2 = 1;
  4121  001312  8493               	bsf	3987,2,c	;volatile
  4122                           
  4123                           ;HWI_DIGITAL.c: 82: TRISBbits.RB3 = 1;
  4124  001314  8693               	bsf	3987,3,c	;volatile
  4125                           
  4126                           ;HWI_DIGITAL.c: 85: TRISBbits.RB4 =0;
  4127  001316  9893               	bcf	3987,4,c	;volatile
  4128                           
  4129                           ;HWI_DIGITAL.c: 86: TRISBbits.RB5 =0;
  4130  001318  9A93               	bcf	3987,5,c	;volatile
  4131                           
  4132                           ;HWI_DIGITAL.c: 87: TRISBbits.RB6 =0;
  4133  00131A  9C93               	bcf	3987,6,c	;volatile
  4134                           
  4135                           ;HWI_DIGITAL.c: 88: TRISBbits.RB7 =0;
  4136  00131C  9E93               	bcf	3987,7,c	;volatile
  4137  00131E  0012               	return		;funcret
  4138  001320                     __end_of_HWI_DIGITAL_INITIALIZE:
  4139                           	opt stack 0
  4140                           tosu	equ	0xFFF
  4141                           tosh	equ	0xFFE
  4142                           tosl	equ	0xFFD
  4143                           pclath	equ	0xFFA
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           prodh	equ	0xFF4
  4149                           prodl	equ	0xFF3
  4150                           intcon	equ	0xFF2
  4151                           intcon2	equ	0xFF1
  4152                           intcon3	equ	0xFF0
  4153                           postinc0	equ	0xFEE
  4154                           wreg	equ	0xFE8
  4155                           postinc1	equ	0xFE6
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _CreateTask *****************
  4166 ;; Defined at:
  4167 ;;		line 6 in file "../../../../OS/Scheduler/Scheduler.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  MangeFunctio    2   19[COMRAM] PTR FTN()void 
  4170 ;;		 -> ManageDrivers(1), DisplayAlphaNumeric(1), ManageApplication(1), ManageSpeedCalc(1), 
  4171 ;;  TaskId          1   21[COMRAM] unsigned char 
  4172 ;;  Period          1   22[COMRAM] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         4       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0
  4187 ;;      Totals:         4       0       0       0       0       0       0
  4188 ;;Total ram usage:        4 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    4
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_Start_App
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text27
  4199  001028                     __ptext27:
  4200                           	opt stack 0
  4201  001028                     _CreateTask:
  4202                           	opt stack 25
  4203                           
  4204                           ;Scheduler.c: 8: if(TaskId < 4)
  4205                           
  4206                           ;incstack = 0
  4207  001028  0E04               	movlw	4
  4208  00102A  604C               	cpfslt	CreateTask@TaskId,c
  4209  00102C  0012               	return	
  4210                           
  4211                           ;Scheduler.c: 9: {
  4212                           ;Scheduler.c: 10: ArrayTask[TaskId].ManageFunction = MangeFunction;
  4213  00102E  504C               	movf	CreateTask@TaskId,w,c
  4214  001030  0D04               	mullw	4
  4215  001032  0E01               	movlw	low _ArrayTask
  4216  001034  24F3               	addwf	prodl,w,c
  4217  001036  6ED9               	movwf	fsr2l,c
  4218  001038  0E00               	movlw	high _ArrayTask
  4219  00103A  20F4               	addwfc	prodh,w,c
  4220  00103C  6EDA               	movwf	fsr2h,c
  4221  00103E  C04A  FFDE         	movff	CreateTask@MangeFunction,postinc2
  4222  001042  C04B  FFDD         	movff	CreateTask@MangeFunction+1,postdec2
  4223                           
  4224                           ;Scheduler.c: 11: ArrayTask[TaskId].Period = Period;
  4225  001046  504C               	movf	CreateTask@TaskId,w,c
  4226  001048  0D04               	mullw	4
  4227  00104A  0E02               	movlw	2
  4228  00104C  26F3               	addwf	prodl,f,c
  4229  00104E  0E00               	movlw	0
  4230  001050  22F4               	addwfc	prodh,f,c
  4231  001052  0E01               	movlw	low _ArrayTask
  4232  001054  24F3               	addwf	prodl,w,c
  4233  001056  6ED9               	movwf	fsr2l,c
  4234  001058  0E00               	movlw	high _ArrayTask
  4235  00105A  20F4               	addwfc	prodh,w,c
  4236  00105C  6EDA               	movwf	fsr2h,c
  4237  00105E  C04D  FFDF         	movff	CreateTask@Period,indf2
  4238                           
  4239                           ;Scheduler.c: 12: ArrayTask[TaskId].TickCounter = (unsigned char)0;
  4240  001062  504C               	movf	CreateTask@TaskId,w,c
  4241  001064  0D04               	mullw	4
  4242  001066  0E03               	movlw	3
  4243  001068  26F3               	addwf	prodl,f,c
  4244  00106A  0E00               	movlw	0
  4245  00106C  22F4               	addwfc	prodh,f,c
  4246  00106E  0E01               	movlw	low _ArrayTask
  4247  001070  24F3               	addwf	prodl,w,c
  4248  001072  6ED9               	movwf	fsr2l,c
  4249  001074  0E00               	movlw	high _ArrayTask
  4250  001076  20F4               	addwfc	prodh,w,c
  4251  001078  6EDA               	movwf	fsr2h,c
  4252  00107A  0E00               	movlw	0
  4253  00107C  6EDF               	movwf	indf2,c
  4254  00107E  0012               	return	
  4255  001080                     __end_of_CreateTask:
  4256                           	opt stack 0
  4257                           tosu	equ	0xFFF
  4258                           tosh	equ	0xFFE
  4259                           tosl	equ	0xFFD
  4260                           pclath	equ	0xFFA
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           prodh	equ	0xFF4
  4266                           prodl	equ	0xFF3
  4267                           intcon	equ	0xFF2
  4268                           intcon2	equ	0xFF1
  4269                           intcon3	equ	0xFF0
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           postinc1	equ	0xFE6
  4273                           fsr1h	equ	0xFE2
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           status	equ	0xFD8
  4281                           
  4282 ;; *************** function _BCDInitialize *****************
  4283 ;; Defined at:
  4284 ;;		line 29 in file "../../../../Common/Driver/BCDdisplay/BCDdisplay.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  bIsCommonAno    1    wreg     unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  bIsCommonAno    1   19[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4298 ;;      Params:         0       0       0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0
  4301 ;;      Totals:         1       0       0       0       0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    4
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_Start_App
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text28
  4313  001386                     __ptext28:
  4314                           	opt stack 0
  4315  001386                     _BCDInitialize:
  4316                           	opt stack 25
  4317                           
  4318                           ;incstack = 0
  4319                           ;BCDInitialize@bIsCommonAnode stored from wreg
  4320  001386  6E4A               	movwf	BCDInitialize@bIsCommonAnode,c
  4321                           
  4322                           ;BCDdisplay.c: 31: bIsAnodeUsed = bIsCommonAnode;
  4323  001388  C04A  F06B         	movff	BCDInitialize@bIsCommonAnode,_bIsAnodeUsed
  4324  00138C  0012               	return		;funcret
  4325  00138E                     __end_of_BCDInitialize:
  4326                           	opt stack 0
  4327                           tosu	equ	0xFFF
  4328                           tosh	equ	0xFFE
  4329                           tosl	equ	0xFFD
  4330                           pclath	equ	0xFFA
  4331                           tblptru	equ	0xFF8
  4332                           tblptrh	equ	0xFF7
  4333                           tblptrl	equ	0xFF6
  4334                           tablat	equ	0xFF5
  4335                           prodh	equ	0xFF4
  4336                           prodl	equ	0xFF3
  4337                           intcon	equ	0xFF2
  4338                           intcon2	equ	0xFF1
  4339                           intcon3	equ	0xFF0
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           postinc1	equ	0xFE6
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function _APP_INITIALIZE *****************
  4353 ;; Defined at:
  4354 ;;		line 11 in file "../../../../Common/App/APP.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		None
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    4
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_Start_App
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text29
  4383  0013B6                     __ptext29:
  4384                           	opt stack 0
  4385  0013B6                     _APP_INITIALIZE:
  4386                           	opt stack 25
  4387                           
  4388                           ;incstack = 0
  4389  0013B6  0012               	return		;funcret
  4390  0013B8                     __end_of_APP_INITIALIZE:
  4391                           	opt stack 0
  4392                           tosu	equ	0xFFF
  4393                           tosh	equ	0xFFE
  4394                           tosl	equ	0xFFD
  4395                           pclath	equ	0xFFA
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           prodh	equ	0xFF4
  4401                           prodl	equ	0xFF3
  4402                           intcon	equ	0xFF2
  4403                           intcon2	equ	0xFF1
  4404                           intcon3	equ	0xFF0
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           postinc1	equ	0xFE6
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           postinc2	equ	0xFDE
  4412                           postdec2	equ	0xFDD
  4413                           fsr2h	equ	0xFDA
  4414                           fsr2l	equ	0xFD9
  4415                           status	equ	0xFD8
  4416                           
  4417 ;; *************** function _ISR *****************
  4418 ;; Defined at:
  4419 ;;		line 52 in file "../../HWIsource/HWI_Interrupts.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         0       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0
  4435 ;;      Temps:         14       0       0       0       0       0       0
  4436 ;;      Totals:        14       0       0       0       0       0       0
  4437 ;;Total ram usage:       14 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    3
  4440 ;; This function calls:
  4441 ;;		_APP_ISR1
  4442 ;;		_APP_ISR2
  4443 ;;		_APP_ISR3
  4444 ;;		_SchedulerTick
  4445 ;; This function is called by:
  4446 ;;		Interrupt level 2
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	intcode
  4451  000008                     __pintcode:
  4452                           	opt stack 0
  4453  000008                     _ISR:
  4454                           	opt stack 21
  4455                           
  4456                           ;incstack = 0
  4457  000008  826C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4458  00000A  ED16  F006         	call	int_func,f	;refresh shadow registers
  4459                           tosu	equ	0xFFF
  4460                           tosh	equ	0xFFE
  4461                           tosl	equ	0xFFD
  4462                           pclath	equ	0xFFA
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           intcon3	equ	0xFF0
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postinc1	equ	0xFE6
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           indf2	equ	0xFDF
  4478                           postinc2	equ	0xFDE
  4479                           postdec2	equ	0xFDD
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484                           	psect	intcode_body
  4485  000C2C                     __pintcode_body:
  4486                           	opt stack 21
  4487  000C2C                     int_func:
  4488                           	opt stack 21
  4489  000C2C  0006               	pop		; remove dummy address from shadow register refresh
  4490  000C2E  CFFA F03C          	movff	pclath,??_ISR
  4491  000C32  CFFB F03D          	movff	pclatu,??_ISR+1
  4492  000C36  CFE9 F03E          	movff	fsr0l,??_ISR+2
  4493  000C3A  CFEA F03F          	movff	fsr0h,??_ISR+3
  4494  000C3E  CFE1 F040          	movff	fsr1l,??_ISR+4
  4495  000C42  CFE2 F041          	movff	fsr1h,??_ISR+5
  4496  000C46  CFD9 F042          	movff	fsr2l,??_ISR+6
  4497  000C4A  CFDA F043          	movff	fsr2h,??_ISR+7
  4498  000C4E  CFF3 F044          	movff	prodl,??_ISR+8
  4499  000C52  CFF4 F045          	movff	prodh,??_ISR+9
  4500  000C56  CFF6 F046          	movff	tblptrl,??_ISR+10
  4501  000C5A  CFF7 F047          	movff	tblptrh,??_ISR+11
  4502  000C5E  CFF8 F048          	movff	tblptru,??_ISR+12
  4503  000C62  CFF5 F049          	movff	tablat,??_ISR+13
  4504                           
  4505                           ;HWI_Interrupts.c: 54: if(TMR0IF)
  4506  000C66  A4F2               	btfss	intcon,2,c	;volatile
  4507  000C68  D005               	goto	i2l1805
  4508                           
  4509                           ;HWI_Interrupts.c: 55: {
  4510                           ;HWI_Interrupts.c: 56: TMR0IF=0;
  4511  000C6A  94F2               	bcf	intcon,2,c	;volatile
  4512                           
  4513                           ;HWI_Interrupts.c: 57: TMR0L=18;
  4514  000C6C  0E12               	movlw	18
  4515  000C6E  6ED6               	movwf	4054,c	;volatile
  4516                           
  4517                           ;HWI_Interrupts.c: 58: SchedulerTick();
  4518  000C70  EC48  F009         	call	_SchedulerTick	;wreg free
  4519  000C74                     i2l1805:
  4520                           
  4521                           ;HWI_Interrupts.c: 59: }
  4522                           ;HWI_Interrupts.c: 60: if(TMR3IF)
  4523  000C74  A2A1               	btfss	4001,1,c	;volatile
  4524  000C76  D005               	goto	i2l1811
  4525                           
  4526                           ;HWI_Interrupts.c: 61: {
  4527                           ;HWI_Interrupts.c: 62: TMR3IF=0;
  4528  000C78  92A1               	bcf	4001,1,c	;volatile
  4529                           
  4530                           ;HWI_Interrupts.c: 63: TMR3H = 0xEF;
  4531  000C7A  0EEF               	movlw	239
  4532  000C7C  6EB3               	movwf	4019,c	;volatile
  4533                           
  4534                           ;HWI_Interrupts.c: 64: TMR3L = 0;
  4535  000C7E  0E00               	movlw	0
  4536  000C80  6EB2               	movwf	4018,c	;volatile
  4537  000C82                     i2l1811:
  4538                           
  4539                           ;HWI_Interrupts.c: 65: }
  4540                           ;HWI_Interrupts.c: 66: if(TMR1IF)
  4541  000C82  A09E               	btfss	3998,0,c	;volatile
  4542  000C84  D007               	goto	i2l1819
  4543                           
  4544                           ;HWI_Interrupts.c: 67: {
  4545                           ;HWI_Interrupts.c: 68: TMR1IF=0;
  4546  000C86  909E               	bcf	3998,0,c	;volatile
  4547                           
  4548                           ;HWI_Interrupts.c: 69: TMR1 = 0;
  4549  000C88  0E00               	movlw	0
  4550  000C8A  6ECF               	movwf	4047,c	;volatile
  4551  000C8C  0E00               	movlw	0
  4552  000C8E  6ECE               	movwf	4046,c	;volatile
  4553                           
  4554                           ;HWI_Interrupts.c: 70: APP_ISR3();
  4555  000C90  ECD0  F009         	call	_APP_ISR3	;wreg free
  4556  000C94                     i2l1819:
  4557                           
  4558                           ;HWI_Interrupts.c: 71: }
  4559                           ;HWI_Interrupts.c: 72: if(TMR2IF)
  4560  000C94  B29E               	btfsc	3998,1,c	;volatile
  4561                           
  4562                           ;HWI_Interrupts.c: 73: {
  4563                           ;HWI_Interrupts.c: 74: TMR2IF = 0;
  4564  000C96  929E               	bcf	3998,1,c	;volatile
  4565                           
  4566                           ;HWI_Interrupts.c: 76: }
  4567                           ;HWI_Interrupts.c: 78: if((unsigned char)1 == INT0IF)
  4568  000C98  A2F2               	btfss	intcon,1,c	;volatile
  4569  000C9A  D003               	goto	i2l1827
  4570                           
  4571                           ;HWI_Interrupts.c: 79: {
  4572                           ;HWI_Interrupts.c: 80: INT0IF = 0;
  4573  000C9C  92F2               	bcf	intcon,1,c	;volatile
  4574                           
  4575                           ;HWI_Interrupts.c: 81: APP_ISR1();
  4576  000C9E  ECD6  F009         	call	_APP_ISR1	;wreg free
  4577  000CA2                     i2l1827:
  4578                           
  4579                           ;HWI_Interrupts.c: 82: }
  4580                           ;HWI_Interrupts.c: 84: if((unsigned char)1 == INT1IF)
  4581  000CA2  A0F0               	btfss	intcon3,0,c	;volatile
  4582  000CA4  D003               	goto	i2l379
  4583                           
  4584                           ;HWI_Interrupts.c: 85: {
  4585                           ;HWI_Interrupts.c: 86: INT1IF = 0;
  4586  000CA6  90F0               	bcf	intcon3,0,c	;volatile
  4587                           
  4588                           ;HWI_Interrupts.c: 87: APP_ISR2();
  4589  000CA8  ECD3  F009         	call	_APP_ISR2	;wreg free
  4590  000CAC                     i2l379:
  4591  000CAC  C049  FFF5         	movff	??_ISR+13,tablat
  4592  000CB0  C048  FFF8         	movff	??_ISR+12,tblptru
  4593  000CB4  C047  FFF7         	movff	??_ISR+11,tblptrh
  4594  000CB8  C046  FFF6         	movff	??_ISR+10,tblptrl
  4595  000CBC  C045  FFF4         	movff	??_ISR+9,prodh
  4596  000CC0  C044  FFF3         	movff	??_ISR+8,prodl
  4597  000CC4  C043  FFDA         	movff	??_ISR+7,fsr2h
  4598  000CC8  C042  FFD9         	movff	??_ISR+6,fsr2l
  4599  000CCC  C041  FFE2         	movff	??_ISR+5,fsr1h
  4600  000CD0  C040  FFE1         	movff	??_ISR+4,fsr1l
  4601  000CD4  C03F  FFEA         	movff	??_ISR+3,fsr0h
  4602  000CD8  C03E  FFE9         	movff	??_ISR+2,fsr0l
  4603  000CDC  C03D  FFFB         	movff	??_ISR+1,pclatu
  4604  000CE0  C03C  FFFA         	movff	??_ISR,pclath
  4605  000CE4  926C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4606  000CE6  0011               	retfie		f
  4607  000CE8                     __end_of_ISR:
  4608                           	opt stack 0
  4609                           tosu	equ	0xFFF
  4610                           tosh	equ	0xFFE
  4611                           tosl	equ	0xFFD
  4612                           pclatu	equ	0xFFB
  4613                           pclath	equ	0xFFA
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodh	equ	0xFF4
  4619                           prodl	equ	0xFF3
  4620                           intcon	equ	0xFF2
  4621                           intcon2	equ	0xFF1
  4622                           intcon3	equ	0xFF0
  4623                           postinc0	equ	0xFEE
  4624                           fsr0h	equ	0xFEA
  4625                           fsr0l	equ	0xFE9
  4626                           wreg	equ	0xFE8
  4627                           postinc1	equ	0xFE6
  4628                           fsr1h	equ	0xFE2
  4629                           fsr1l	equ	0xFE1
  4630                           indf2	equ	0xFDF
  4631                           postinc2	equ	0xFDE
  4632                           postdec2	equ	0xFDD
  4633                           fsr2h	equ	0xFDA
  4634                           fsr2l	equ	0xFD9
  4635                           status	equ	0xFD8
  4636                           
  4637 ;; *************** function _SchedulerTick *****************
  4638 ;; Defined at:
  4639 ;;		line 16 in file "../../../../OS/Scheduler/Scheduler.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  TaskIndex       1    0[COMRAM] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4653 ;;      Params:         0       0       0       0       0       0       0
  4654 ;;      Locals:         1       0       0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0
  4656 ;;      Totals:         1       0       0       0       0       0       0
  4657 ;;Total ram usage:        1 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_ISR
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text31
  4667  001290                     __ptext31:
  4668                           	opt stack 0
  4669  001290                     _SchedulerTick:
  4670                           	opt stack 23
  4671                           
  4672                           ;Scheduler.c: 18: unsigned char TaskIndex;
  4673                           ;Scheduler.c: 19: for(TaskIndex = (unsigned char)0 ;TaskIndex < 4 ; TaskIndex++)
  4674                           
  4675                           ;incstack = 0
  4676  001290  0E00               	movlw	0
  4677  001292  6E37               	movwf	SchedulerTick@TaskIndex,c
  4678  001294                     i2l1435:
  4679  001294  0E03               	movlw	3
  4680  001296  6437               	cpfsgt	SchedulerTick@TaskIndex,c
  4681  001298  D001               	goto	i2l1439
  4682  00129A  0012               	return	
  4683  00129C                     i2l1439:
  4684                           
  4685                           ;Scheduler.c: 20: {
  4686                           ;Scheduler.c: 21: ArrayTask[TaskIndex].TickCounter ++;
  4687  00129C  5037               	movf	SchedulerTick@TaskIndex,w,c
  4688  00129E  0D04               	mullw	4
  4689  0012A0  0E03               	movlw	3
  4690  0012A2  26F3               	addwf	prodl,f,c
  4691  0012A4  0E00               	movlw	0
  4692  0012A6  22F4               	addwfc	prodh,f,c
  4693  0012A8  0E01               	movlw	low _ArrayTask
  4694  0012AA  24F3               	addwf	prodl,w,c
  4695  0012AC  6ED9               	movwf	fsr2l,c
  4696  0012AE  0E00               	movlw	high _ArrayTask
  4697  0012B0  20F4               	addwfc	prodh,w,c
  4698  0012B2  6EDA               	movwf	fsr2h,c
  4699  0012B4  2ADF               	incf	indf2,f,c
  4700  0012B6  2A37               	incf	SchedulerTick@TaskIndex,f,c
  4701  0012B8  D7ED               	goto	i2l1435
  4702  0012BA                     __end_of_SchedulerTick:
  4703                           	opt stack 0
  4704                           tosu	equ	0xFFF
  4705                           tosh	equ	0xFFE
  4706                           tosl	equ	0xFFD
  4707                           pclatu	equ	0xFFB
  4708                           pclath	equ	0xFFA
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           intcon2	equ	0xFF1
  4717                           intcon3	equ	0xFF0
  4718                           postinc0	equ	0xFEE
  4719                           fsr0h	equ	0xFEA
  4720                           fsr0l	equ	0xFE9
  4721                           wreg	equ	0xFE8
  4722                           postinc1	equ	0xFE6
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8
  4731                           
  4732 ;; *************** function _APP_ISR3 *****************
  4733 ;; Defined at:
  4734 ;;		line 18 in file "../../../../Common/Interrupts/AppInterrupts.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4748 ;;      Params:         0       0       0       0       0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0
  4751 ;;      Totals:         0       0       0       0       0       0       0
  4752 ;;Total ram usage:        0 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    1
  4755 ;; This function calls:
  4756 ;;		_HWtimerCallback
  4757 ;; This function is called by:
  4758 ;;		_ISR
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text32
  4763  0013A0                     __ptext32:
  4764                           	opt stack 0
  4765  0013A0                     _APP_ISR3:
  4766                           	opt stack 22
  4767                           
  4768                           ;AppInterrupts.c: 20: HWtimerCallback();
  4769                           
  4770                           ;incstack = 0
  4771  0013A0  ECBA  F009         	call	_HWtimerCallback	;wreg free
  4772  0013A4  0012               	return		;funcret
  4773  0013A6                     __end_of_APP_ISR3:
  4774                           	opt stack 0
  4775                           tosu	equ	0xFFF
  4776                           tosh	equ	0xFFE
  4777                           tosl	equ	0xFFD
  4778                           pclatu	equ	0xFFB
  4779                           pclath	equ	0xFFA
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           intcon	equ	0xFF2
  4787                           intcon2	equ	0xFF1
  4788                           intcon3	equ	0xFF0
  4789                           postinc0	equ	0xFEE
  4790                           fsr0h	equ	0xFEA
  4791                           fsr0l	equ	0xFE9
  4792                           wreg	equ	0xFE8
  4793                           postinc1	equ	0xFE6
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function _HWtimerCallback *****************
  4804 ;; Defined at:
  4805 ;;		line 133 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4819 ;;      Params:         0       0       0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_APP_ISR3
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text33
  4833  001374                     __ptext33:
  4834                           	opt stack 0
  4835  001374                     _HWtimerCallback:
  4836                           	opt stack 22
  4837                           
  4838                           ;SpeedCalc.c: 135: if(HwTimerOVFLcount < 64)
  4839                           
  4840                           ;incstack = 0
  4841  001374  0E40               	movlw	64
  4842  001376  6028               	cpfslt	_HwTimerOVFLcount,c	;volatile
  4843  001378  0012               	return	
  4844                           
  4845                           ;SpeedCalc.c: 136: {
  4846                           ;SpeedCalc.c: 137: HwTimerOVFLcount++;
  4847  00137A  2A28               	incf	_HwTimerOVFLcount,f,c	;volatile
  4848  00137C  0012               	return	
  4849  00137E                     __end_of_HWtimerCallback:
  4850                           	opt stack 0
  4851                           tosu	equ	0xFFF
  4852                           tosh	equ	0xFFE
  4853                           tosl	equ	0xFFD
  4854                           pclatu	equ	0xFFB
  4855                           pclath	equ	0xFFA
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           prodh	equ	0xFF4
  4861                           prodl	equ	0xFF3
  4862                           intcon	equ	0xFF2
  4863                           intcon2	equ	0xFF1
  4864                           intcon3	equ	0xFF0
  4865                           postinc0	equ	0xFEE
  4866                           fsr0h	equ	0xFEA
  4867                           fsr0l	equ	0xFE9
  4868                           wreg	equ	0xFE8
  4869                           postinc1	equ	0xFE6
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _APP_ISR2 *****************
  4880 ;; Defined at:
  4881 ;;		line 13 in file "../../../../Common/Interrupts/AppInterrupts.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4895 ;;      Params:         0       0       0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    2
  4902 ;; This function calls:
  4903 ;;		_SensorTwoNotify
  4904 ;; This function is called by:
  4905 ;;		_ISR
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text34
  4910  0013A6                     __ptext34:
  4911                           	opt stack 0
  4912  0013A6                     _APP_ISR2:
  4913                           	opt stack 21
  4914                           
  4915                           ;AppInterrupts.c: 15: SensorTwoNotify();
  4916                           
  4917                           ;incstack = 0
  4918  0013A6  EC31  F009         	call	_SensorTwoNotify	;wreg free
  4919  0013AA  0012               	return		;funcret
  4920  0013AC                     __end_of_APP_ISR2:
  4921                           	opt stack 0
  4922                           tosu	equ	0xFFF
  4923                           tosh	equ	0xFFE
  4924                           tosl	equ	0xFFD
  4925                           pclatu	equ	0xFFB
  4926                           pclath	equ	0xFFA
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           intcon	equ	0xFF2
  4934                           intcon2	equ	0xFF1
  4935                           intcon3	equ	0xFF0
  4936                           postinc0	equ	0xFEE
  4937                           fsr0h	equ	0xFEA
  4938                           fsr0l	equ	0xFE9
  4939                           wreg	equ	0xFE8
  4940                           postinc1	equ	0xFE6
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           postdec2	equ	0xFDD
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _SensorTwoNotify *****************
  4951 ;; Defined at:
  4952 ;;		line 44 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4966 ;;      Params:         0       0       0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    1
  4973 ;; This function calls:
  4974 ;;		_ReloadHWtimer
  4975 ;; This function is called by:
  4976 ;;		_APP_ISR2
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text35
  4981  001262                     __ptext35:
  4982                           	opt stack 0
  4983  001262                     _SensorTwoNotify:
  4984                           	opt stack 21
  4985                           
  4986                           ;SpeedCalc.c: 46: if( (unsigned char)0 == NotifyFlag )
  4987                           
  4988                           ;incstack = 0
  4989  001262  502B               	movf	_NotifyFlag,w,c	;volatile
  4990  001264  A4D8               	btfss	status,2,c
  4991  001266  D00F               	goto	i2l1753
  4992                           
  4993                           ;SpeedCalc.c: 47: {
  4994                           ;SpeedCalc.c: 48: NotifyFlag = (unsigned char)1;
  4995  001268  0E01               	movlw	1
  4996  00126A  6E2B               	movwf	_NotifyFlag,c	;volatile
  4997                           
  4998                           ;SpeedCalc.c: 49: LapCounter++;
  4999  00126C  2A2A               	incf	_LapCounter,f,c	;volatile
  5000                           
  5001                           ;SpeedCalc.c: 50: HWtimerCount = ReloadHWtimer((unsigned char)1);
  5002  00126E  0E01               	movlw	1
  5003  001270  ECB3  F008         	call	_ReloadHWtimer
  5004  001274  C037  F01D         	movff	?_ReloadHWtimer,_HWtimerCount	;volatile
  5005  001278  C038  F01E         	movff	?_ReloadHWtimer+1,_HWtimerCount+1	;volatile
  5006                           
  5007                           ;SpeedCalc.c: 51: TimerOVFLcount = HwTimerOVFLcount;
  5008  00127C  C028  F029         	movff	_HwTimerOVFLcount,_TimerOVFLcount	;volatile
  5009                           
  5010                           ;SpeedCalc.c: 52: HwTimerOVFLcount = (unsigned char)0;
  5011  001280  0E00               	movlw	0
  5012  001282  6E28               	movwf	_HwTimerOVFLcount,c	;volatile
  5013                           
  5014                           ;SpeedCalc.c: 53: }
  5015  001284  0012               	return	
  5016  001286                     i2l1753:
  5017                           
  5018                           ;SpeedCalc.c: 54: else
  5019                           ;SpeedCalc.c: 55: {
  5020                           ;SpeedCalc.c: 56: if(LapCounter != (unsigned char)0)
  5021  001286  502A               	movf	_LapCounter,w,c	;volatile
  5022  001288  B4D8               	btfsc	status,2,c
  5023  00128A  0012               	return	
  5024                           
  5025                           ;SpeedCalc.c: 57: {
  5026                           ;SpeedCalc.c: 58: LapCounter--;
  5027  00128C  062A               	decf	_LapCounter,f,c	;volatile
  5028  00128E  0012               	return	
  5029  001290                     __end_of_SensorTwoNotify:
  5030                           	opt stack 0
  5031                           tosu	equ	0xFFF
  5032                           tosh	equ	0xFFE
  5033                           tosl	equ	0xFFD
  5034                           pclatu	equ	0xFFB
  5035                           pclath	equ	0xFFA
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           intcon2	equ	0xFF1
  5044                           intcon3	equ	0xFF0
  5045                           postinc0	equ	0xFEE
  5046                           fsr0h	equ	0xFEA
  5047                           fsr0l	equ	0xFE9
  5048                           wreg	equ	0xFE8
  5049                           postinc1	equ	0xFE6
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           indf2	equ	0xFDF
  5053                           postinc2	equ	0xFDE
  5054                           postdec2	equ	0xFDD
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _ReloadHWtimer *****************
  5060 ;; Defined at:
  5061 ;;		line 91 in file "../../HWIsource/HWI_Interrupts.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  TimerId         1    wreg     unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  TimerId         1    2[COMRAM] unsigned char 
  5066 ;;  ElapsedTime     2    3[COMRAM] unsigned short 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  2    0[COMRAM] unsigned short 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5076 ;;      Params:         2       0       0       0       0       0       0
  5077 ;;      Locals:         3       0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0
  5079 ;;      Totals:         5       0       0       0       0       0       0
  5080 ;;Total ram usage:        5 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_SensorTwoNotify
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text36
  5090  001166                     __ptext36:
  5091                           	opt stack 0
  5092  001166                     _ReloadHWtimer:
  5093                           	opt stack 21
  5094                           
  5095                           ;incstack = 0
  5096                           ;ReloadHWtimer@TimerId stored from wreg
  5097  001166  6E39               	movwf	ReloadHWtimer@TimerId,c
  5098                           
  5099                           ;HWI_Interrupts.c: 94: unsigned short ElapsedTime = (unsigned short)0;
  5100  001168  0E00               	movlw	0
  5101  00116A  6E3B               	movwf	ReloadHWtimer@ElapsedTime+1,c
  5102  00116C  0E00               	movlw	0
  5103  00116E  6E3A               	movwf	ReloadHWtimer@ElapsedTime,c
  5104                           
  5105                           ;HWI_Interrupts.c: 95: switch(TimerId)
  5106  001170  D009               	goto	i2l1733
  5107  001172                     i2l385:
  5108                           
  5109                           ;HWI_Interrupts.c: 98: case 1:
  5110                           ;HWI_Interrupts.c: 99: case 2:
  5111                           ;HWI_Interrupts.c: 100: ElapsedTime = TMR1;
  5112  001172  CFCE F03A          	movff	4046,ReloadHWtimer@ElapsedTime	;volatile
  5113  001176  CFCF F03B          	movff	4047,ReloadHWtimer@ElapsedTime+1	;volatile
  5114                           
  5115                           ;HWI_Interrupts.c: 101: TMR1 = 0;
  5116  00117A  0E00               	movlw	0
  5117  00117C  6ECF               	movwf	4047,c	;volatile
  5118  00117E  0E00               	movlw	0
  5119  001180  6ECE               	movwf	4046,c	;volatile
  5120                           
  5121                           ;HWI_Interrupts.c: 105: }
  5122                           
  5123                           ;HWI_Interrupts.c: 104: break;
  5124                           
  5125                           ;HWI_Interrupts.c: 103: default:
  5126                           
  5127                           ;HWI_Interrupts.c: 102: break;
  5128  001182  D00A               	goto	i2l386
  5129  001184                     i2l1733:
  5130  001184  5039               	movf	ReloadHWtimer@TimerId,w,c
  5131                           
  5132                           ; Switch size 1, requested type "space"
  5133                           ; Number of cases is 3, Range of values is 0 to 2
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte           10     6 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138  001186  0A00               	xorlw	0	; case 0
  5139  001188  B4D8               	btfsc	status,2,c
  5140  00118A  D7F3               	goto	i2l385
  5141  00118C  0A01               	xorlw	1	; case 1
  5142  00118E  B4D8               	btfsc	status,2,c
  5143  001190  D7F0               	goto	i2l385
  5144  001192  0A03               	xorlw	3	; case 2
  5145  001194  B4D8               	btfsc	status,2,c
  5146  001196  D7ED               	goto	i2l385
  5147  001198                     i2l386:
  5148                           
  5149                           ;HWI_Interrupts.c: 106: return ElapsedTime;
  5150  001198  C03A  F037         	movff	ReloadHWtimer@ElapsedTime,?_ReloadHWtimer
  5151  00119C  C03B  F038         	movff	ReloadHWtimer@ElapsedTime+1,?_ReloadHWtimer+1
  5152  0011A0  0012               	return		;funcret
  5153  0011A2                     __end_of_ReloadHWtimer:
  5154                           	opt stack 0
  5155                           tosu	equ	0xFFF
  5156                           tosh	equ	0xFFE
  5157                           tosl	equ	0xFFD
  5158                           pclatu	equ	0xFFB
  5159                           pclath	equ	0xFFA
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           intcon3	equ	0xFF0
  5169                           postinc0	equ	0xFEE
  5170                           fsr0h	equ	0xFEA
  5171                           fsr0l	equ	0xFE9
  5172                           wreg	equ	0xFE8
  5173                           postinc1	equ	0xFE6
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           indf2	equ	0xFDF
  5177                           postinc2	equ	0xFDE
  5178                           postdec2	equ	0xFDD
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function _APP_ISR1 *****************
  5184 ;; Defined at:
  5185 ;;		line 8 in file "../../../../Common/Interrupts/AppInterrupts.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         0       0       0       0       0       0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    1
  5206 ;; This function calls:
  5207 ;;		_SensorOneNotify
  5208 ;; This function is called by:
  5209 ;;		_ISR
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text37
  5214  0013AC                     __ptext37:
  5215                           	opt stack 0
  5216  0013AC                     _APP_ISR1:
  5217                           	opt stack 22
  5218                           
  5219                           ;AppInterrupts.c: 10: SensorOneNotify();
  5220                           
  5221                           ;incstack = 0
  5222  0013AC  EC9B  F009         	call	_SensorOneNotify	;wreg free
  5223  0013B0  0012               	return		;funcret
  5224  0013B2                     __end_of_APP_ISR1:
  5225                           	opt stack 0
  5226                           tosu	equ	0xFFF
  5227                           tosh	equ	0xFFE
  5228                           tosl	equ	0xFFD
  5229                           pclatu	equ	0xFFB
  5230                           pclath	equ	0xFFA
  5231                           tblptru	equ	0xFF8
  5232                           tblptrh	equ	0xFF7
  5233                           tblptrl	equ	0xFF6
  5234                           tablat	equ	0xFF5
  5235                           prodh	equ	0xFF4
  5236                           prodl	equ	0xFF3
  5237                           intcon	equ	0xFF2
  5238                           intcon2	equ	0xFF1
  5239                           intcon3	equ	0xFF0
  5240                           postinc0	equ	0xFEE
  5241                           fsr0h	equ	0xFEA
  5242                           fsr0l	equ	0xFE9
  5243                           wreg	equ	0xFE8
  5244                           postinc1	equ	0xFE6
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           fsr2h	equ	0xFDA
  5251                           fsr2l	equ	0xFD9
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _SensorOneNotify *****************
  5255 ;; Defined at:
  5256 ;;		line 29 in file "../../../../Common/Driver/SpeedCalc/SpeedCalc.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5270 ;;      Params:         0       0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_APP_ISR1
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text38
  5284  001336                     __ptext38:
  5285                           	opt stack 0
  5286  001336                     _SensorOneNotify:
  5287                           	opt stack 22
  5288                           
  5289                           ;SpeedCalc.c: 31: if( (unsigned char)1 == NotifyFlag )
  5290                           
  5291                           ;incstack = 0
  5292  001336  042B               	decf	_NotifyFlag,w,c	;volatile
  5293  001338  A4D8               	btfss	status,2,c
  5294  00133A  D003               	goto	i2l1331
  5295                           
  5296                           ;SpeedCalc.c: 32: {
  5297                           ;SpeedCalc.c: 33: NotifyFlag = (unsigned char)0;
  5298  00133C  0E00               	movlw	0
  5299  00133E  6E2B               	movwf	_NotifyFlag,c	;volatile
  5300                           
  5301                           ;SpeedCalc.c: 34: }
  5302  001340  0012               	return	
  5303  001342                     i2l1331:
  5304                           
  5305                           ;SpeedCalc.c: 35: else
  5306                           ;SpeedCalc.c: 36: {
  5307                           ;SpeedCalc.c: 37: if(LapCounter != (unsigned char)0)
  5308  001342  502A               	movf	_LapCounter,w,c	;volatile
  5309  001344  B4D8               	btfsc	status,2,c
  5310  001346  0012               	return	
  5311                           
  5312                           ;SpeedCalc.c: 38: {
  5313                           ;SpeedCalc.c: 39: LapCounter--;
  5314  001348  062A               	decf	_LapCounter,f,c	;volatile
  5315  00134A  0012               	return	
  5316  00134C                     __end_of_SensorOneNotify:
  5317                           	opt stack 0
  5318                           tosu	equ	0xFFF
  5319                           tosh	equ	0xFFE
  5320                           tosl	equ	0xFFD
  5321                           pclatu	equ	0xFFB
  5322                           pclath	equ	0xFFA
  5323                           tblptru	equ	0xFF8
  5324                           tblptrh	equ	0xFF7
  5325                           tblptrl	equ	0xFF6
  5326                           tablat	equ	0xFF5
  5327                           prodh	equ	0xFF4
  5328                           prodl	equ	0xFF3
  5329                           intcon	equ	0xFF2
  5330                           intcon2	equ	0xFF1
  5331                           intcon3	equ	0xFF0
  5332                           postinc0	equ	0xFEE
  5333                           fsr0h	equ	0xFEA
  5334                           fsr0l	equ	0xFE9
  5335                           wreg	equ	0xFE8
  5336                           postinc1	equ	0xFE6
  5337                           fsr1h	equ	0xFE2
  5338                           fsr1l	equ	0xFE1
  5339                           indf2	equ	0xFDF
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8
  5345                           tosu	equ	0xFFF
  5346                           tosh	equ	0xFFE
  5347                           tosl	equ	0xFFD
  5348                           pclatu	equ	0xFFB
  5349                           pclath	equ	0xFFA
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           intcon2	equ	0xFF1
  5358                           intcon3	equ	0xFF0
  5359                           postinc0	equ	0xFEE
  5360                           fsr0h	equ	0xFEA
  5361                           fsr0l	equ	0xFE9
  5362                           wreg	equ	0xFE8
  5363                           postinc1	equ	0xFE6
  5364                           fsr1h	equ	0xFE2
  5365                           fsr1l	equ	0xFE1
  5366                           indf2	equ	0xFDF
  5367                           postinc2	equ	0xFDE
  5368                           postdec2	equ	0xFDD
  5369                           fsr2h	equ	0xFDA
  5370                           fsr2l	equ	0xFD9
  5371                           status	equ	0xFD8
  5372                           
  5373                           	psect	text39
  5374  000000                     __ptext39:
  5375                           	opt stack 0
  5376                           tosu	equ	0xFFF
  5377                           tosh	equ	0xFFE
  5378                           tosl	equ	0xFFD
  5379                           pclatu	equ	0xFFB
  5380                           pclath	equ	0xFFA
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           intcon2	equ	0xFF1
  5389                           intcon3	equ	0xFF0
  5390                           postinc0	equ	0xFEE
  5391                           fsr0h	equ	0xFEA
  5392                           fsr0l	equ	0xFE9
  5393                           wreg	equ	0xFE8
  5394                           postinc1	equ	0xFE6
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           indf2	equ	0xFDF
  5398                           postinc2	equ	0xFDE
  5399                           postdec2	equ	0xFDD
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404                           	psect	rparam
  5405  0000                     tosu	equ	0xFFF
  5406                           tosh	equ	0xFFE
  5407                           tosl	equ	0xFFD
  5408                           pclatu	equ	0xFFB
  5409                           pclath	equ	0xFFA
  5410                           tblptru	equ	0xFF8
  5411                           tblptrh	equ	0xFF7
  5412                           tblptrl	equ	0xFF6
  5413                           tablat	equ	0xFF5
  5414                           prodh	equ	0xFF4
  5415                           prodl	equ	0xFF3
  5416                           intcon	equ	0xFF2
  5417                           intcon2	equ	0xFF1
  5418                           intcon3	equ	0xFF0
  5419                           postinc0	equ	0xFEE
  5420                           fsr0h	equ	0xFEA
  5421                           fsr0l	equ	0xFE9
  5422                           wreg	equ	0xFE8
  5423                           postinc1	equ	0xFE6
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           indf2	equ	0xFDF
  5427                           postinc2	equ	0xFDE
  5428                           postdec2	equ	0xFDD
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433                           	psect	temp
  5434  00006C                     btemp:
  5435                           	opt stack 0
  5436  00006C                     	ds	1
  5437  0000                     int$flags	set	btemp
  5438                           tosu	equ	0xFFF
  5439                           tosh	equ	0xFFE
  5440                           tosl	equ	0xFFD
  5441                           pclatu	equ	0xFFB
  5442                           pclath	equ	0xFFA
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           intcon2	equ	0xFF1
  5451                           intcon3	equ	0xFF0
  5452                           postinc0	equ	0xFEE
  5453                           fsr0h	equ	0xFEA
  5454                           fsr0l	equ	0xFE9
  5455                           wreg	equ	0xFE8
  5456                           postinc1	equ	0xFE6
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           postinc2	equ	0xFDE
  5461                           postdec2	equ	0xFDD
  5462                           fsr2h	equ	0xFDA
  5463                           fsr2l	equ	0xFD9
  5464                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    27
    Data        2
    BSS         54
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50     107
    BANK0           128     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    S227$ManageFunction	PTR FTN()void  size(2) Largest target is 1
		 -> ManageDrivers(), DisplayAlphaNumeric(), ManageApplication(), ManageSpeedCalc(), 

    ArrayTask.ManageFunction	PTR FTN()void  size(2) Largest target is 1
		 -> ManageDrivers(), DisplayAlphaNumeric(), ManageApplication(), ManageSpeedCalc(), 

    CreateTask@MangeFunction	PTR FTN()void  size(2) Largest target is 1
		 -> ManageDrivers(), DisplayAlphaNumeric(), ManageApplication(), ManageSpeedCalc(), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> KeyInternalData(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _Start_App->_RunScheduler
    _ManageSpeedCalc->_SpeedCalcManage
    _SpeedCalcManage->___lldiv
    _ManageDrivers->_MangeKeys
    _MangeKeys->_HWI_DIGI_READ
    _APP_MANAGE->_GetAvgSpeed
    _GetAvgSpeed->___lldiv
    ___lldiv->___lmul
    _BCDsendNumber->___lwdiv
    _DisplayAlphaNumeric->_BCDManage7segment
    _BCDManage7segment->_HWI_4Digit_WRITE
    _BCDManage7segment->_HWI_8Digit_WRITE

Critical Paths under _ISR in COMRAM

    _SensorTwoNotify->_ReloadHWtimer

Critical Paths under _main in BANK0

    _ManageApplication->_APP_MANAGE
    _APP_MANAGE->_GetAvgSpeed

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8125
                          _Start_App
 ---------------------------------------------------------------------------------
 (1) _Start_App                                            0     0      0    8125
                     _APP_INITIALIZE
                      _BCDInitialize
                         _CreateTask
             _HWI_DIGITAL_INITIALIZE
          _HWI_INTERRUPTS_INTITALIZE
                       _RunScheduler
          _SpeedCalcNotifyInitialize
 ---------------------------------------------------------------------------------
 (2) _SpeedCalcNotifyInitialize                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RunScheduler                                         2     2      0    7210
                                             48 COMRAM     2     2      0
                _DisplayAlphaNumeric *
                  _ManageApplication *
                      _ManageDrivers *
                    _ManageSpeedCalc *
 ---------------------------------------------------------------------------------
 (3) _ManageSpeedCalc                                      0     0      0    1857
                    _SpeedCalcManage
 ---------------------------------------------------------------------------------
 (4) _SpeedCalcManage                                      4     4      0    1857
                                             44 COMRAM     4     4      0
                            ___lldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ManageDrivers                                        1     1      0     660
                                             26 COMRAM     1     1      0
                          _MangeKeys
 ---------------------------------------------------------------------------------
 (4) _MangeKeys                                            5     5      0     615
                                             21 COMRAM     5     5      0
                      _HWI_DIGI_READ
 ---------------------------------------------------------------------------------
 (5) _HWI_DIGI_READ                                        2     2      0      30
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ManageApplication                                    0     0      0    4295
                         _APP_MANAGE
 ---------------------------------------------------------------------------------
 (4) _APP_MANAGE                                           5     5      0    4295
                                              7 BANK0      5     5      0
                      _BCDsendNumber
                         _BlinkDigit
                        _GetAvgSpeed
                        _GetDistance
                       _GetKeyStatus
                   _SetCircumfirunce
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _SetCircumfirunce                                     2     0      2     108
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetKeyStatus                                         2     2      0      67
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _GetDistance                                          4     0      4       0
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _GetAvgSpeed                                          9     7      2    1061
                                             44 COMRAM     2     0      2
                                              0 BANK0      7     7      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     404
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     549
                                             31 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _BlinkDigit                                           2     1      1     216
                                             19 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _BCDsendNumber                                       12     9      3    1973
                                             26 COMRAM    12     9      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     694
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _DisplayAlphaNumeric                                  0     0      0     398
                  _BCDManage7segment
 ---------------------------------------------------------------------------------
 (4) _BCDManage7segment                                    4     4      0     398
                                             21 COMRAM     4     4      0
                   _HWI_4Digit_WRITE
                   _HWI_8Digit_WRITE
 ---------------------------------------------------------------------------------
 (5) _HWI_8Digit_WRITE                                     2     1      1     152
                                             19 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _HWI_4Digit_WRITE                                     2     1      1     152
                                             19 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _HWI_INTERRUPTS_INTITALIZE                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HWI_DIGITAL_INITIALIZE                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CreateTask                                           4     0      4     900
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _BCDInitialize                                        1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _APP_INITIALIZE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0      91
                                              5 COMRAM    14    14      0
                           _APP_ISR1
                           _APP_ISR2
                           _APP_ISR3
                      _SchedulerTick
 ---------------------------------------------------------------------------------
 (8) _SchedulerTick                                        1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _APP_ISR3                                             0     0      0       0
                    _HWtimerCallback
 ---------------------------------------------------------------------------------
 (9) _HWtimerCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _APP_ISR2                                             0     0      0      46
                    _SensorTwoNotify
 ---------------------------------------------------------------------------------
 (9) _SensorTwoNotify                                      0     0      0      46
                      _ReloadHWtimer
 ---------------------------------------------------------------------------------
 (10) _ReloadHWtimer                                       5     3      2      46
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _APP_ISR1                                             0     0      0       0
                    _SensorOneNotify
 ---------------------------------------------------------------------------------
 (9) _SensorOneNotify                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Start_App
     _APP_INITIALIZE
     _BCDInitialize
     _CreateTask
     _HWI_DIGITAL_INITIALIZE
     _HWI_INTERRUPTS_INTITALIZE
     _RunScheduler
       _DisplayAlphaNumeric *
         _BCDManage7segment
           _HWI_4Digit_WRITE
           _HWI_8Digit_WRITE
       _ManageApplication *
         _APP_MANAGE
           _BCDsendNumber
             ___lwdiv
             ___wmul
           _BlinkDigit
           _GetAvgSpeed
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _GetDistance
           _GetKeyStatus
           _SetCircumfirunce
           ___wmul
       _ManageDrivers *
         _MangeKeys
           _HWI_DIGI_READ
       _ManageSpeedCalc *
         _SpeedCalcManage
           ___lldiv
             ___lmul (ARG)
           ___lwdiv
           ___wmul
     _SpeedCalcNotifyInitialize

 _ISR (ROOT)
   _APP_ISR1
     _SensorOneNotify
   _APP_ISR2
     _SensorTwoNotify
       _ReloadHWtimer
   _APP_ISR3
     _HWtimerCallback
   _SchedulerTick

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C       C       5        9.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77      15        0.0%
DATA                 0      0      77       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 23 15:15:00 2017

                                  l55 0A70                   __end_of_GetAvgSpeed 0D86  
                 ___wmul@multiplicand 004C                           __CFG_BORV$3 000000  
                   GetAvgSpeed@bIsKph 0080                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                          __CFG_CP2$OFF 000000  
                        __CFG_CP3$OFF 000000                   __end_of_GetDistance 135E  
                         __CFG_OSC$XT 000000                           __CFG_LVP$ON 000000  
                                 l312 120A                                   l313 1230  
                                 l314 1212                                   l293 12E4  
                                 l295 12EA                                   l296 12F0  
                                 l743 0FAA                                   l796 111E  
                        __CFG_CPB$OFF 000000                                   u311 06D2  
                                 u341 0808                          __CFG_CPD$OFF 000000  
                                 _ISR 0008                                   u864 0DD2  
                                 u865 0DCE                BCDManage7segment@Index 004E  
                                 prod 000FF3                                   tosl 000FFD  
                                 wreg 000FE8                                  ?_ISR 0037  
                        __CFG_WDT$OFF 000000                                  l2021 0EB2  
                                l2031 0F36                                  l2025 0EBA  
                                l1155 121A                                  l1251 0748  
                                l1315 1324                                  l2019 0EAE  
                                l2029 0F1A                                  l1159 1220  
                                l1263 085C                                  l1239 0652  
                                l1319 132C                                  l1281 0A20  
                                l1273 096C                                  l1265 089A  
                                l1249 0726                                  l1277 09CC  
                                l1269 0918                                  l1285 0A36  
                                l1631 11E2                                  l1703 0DF0  
                                l1633 11EC                                  l1635 11F6  
                                l1707 0DFA                                  l1629 11D8  
                                l1639 12F6                                  l1911 0D6A  
                                l1905 0D08                                  l1691 0DA4  
                                l1915 0D7C                                  l1693 0DA8  
                                l1925 0A58                                  l1861 0F68  
                                l1845 1090                                  l1943 0AFC  
                                l1871 0F9C                                  l1863 0F6C  
                                l1881 10EC                                  l1945 0B14  
                                l1929 0A60                                  l1849 10A4  
                                l1699 0DBC                                  l1883 10F4  
                                l1939 0ACA                                  l1859 0F5C  
                                l1893 1114                                  l1885 10F8  
                                l1949 0B18                                  l1983 0BCE  
                                l1995 0C04                                  _LATC 000F8B  
                                _LATD 000F8C                                  u1288 0F06  
                                _TMR1 000FCE                                  _main 137E  
                __end_of_GetKeyStatus 1262                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 006C                                  prodh 000FF4  
                                prodl 000FF3                     _BCDManage7segment 0D86  
                                start 000E                         __CFG_IESO$OFF 000000  
                          _BlinkDigit 135E                            _BlinkIndex 002F  
                  ?_BCDManage7segment 0037              __size_of_SpeedCalcManage 0090  
                        ___param_bank 000000                      __end_of_APP_ISR1 13B2  
                    __end_of_APP_ISR2 13AC                      __end_of_APP_ISR3 13A6  
                               ??_ISR 003C                       ??_ManageDrivers 0051  
                 BCDsendNumber@Buffer 005A             _SpeedCalcNotifyInitialize 13B4  
                 BCDsendNumber@Number 0051                  APP_MANAGE@blinkIndex 0025  
                 __size_of_APP_MANAGE 00EA                   ??_BCDManage7segment 004C  
                 BCDsendNumber@Output 0058                                 ?_main 0037  
                          _CreateTask 1028                  HWI_DIGI_READ@HWIread 004B  
                     __end_of___lldiv 0FBC                            _LapCounter 002A  
                               _T0CON 000FD5                                 _T1CON 000FCD  
                               _T3CON 000FB1                       __end_of___lwdiv 1128  
                               i2l385 1172                                 i2l386 1198  
                               i2l379 0CAC                                 _TMR0L 000FD6  
                               _TMR3H 000FB3                                 _TMR3L 000FB2  
                   _ManageApplication 1394                                 _PORTC 000F82  
                               _PORTD 000F83                                 _TRISC 000F94  
                               _TRISD 000F95                         __CFG_PWRT$OFF 000000  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                   ___lmul@multiplicand 004E  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                  ?_ManageApplication 0037                         __CFG_WRTB$OFF 000000  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                      __CFG_EBTRB$OFF 000000               CreateTask@MangeFunction 004A  
           BCDsendNumber@DecimalPlace 0053                                 pclath 000FFA  
                               tablat 000FF5                   ??_ManageApplication 0065  
                   ?_HWI_8Digit_WRITE 004A             __end_of_BCDManage7segment 0E1E  
                               status 000FD8                 __end_of_BCDsendNumber 0B42  
     __size_of_HWI_DIGITAL_INITIALIZE 001A                    ??_HWI_8Digit_WRITE 004B  
                         _GetAvgSpeed 0CE8                        __CFG_MCLRE$OFF 000000  
                     __initialization 11A2                           _GetDistance 134C  
                        __end_of_main 1386             __end_of_ManageApplication 139A  
                              ??_main 0069                        MangeKeys@KeyID 0050  
                       __activetblptr 000002                    __size_of_MangeKeys 042E  
                              _INT0IF 007F91                                _INT1IF 007F80  
                              i2l1331 1342                                i2l1435 1294  
                              i2l1439 129C                                i2l1811 0C82  
                              i2l1733 1184                                i2l1805 0C74  
                              i2l1753 1286                                i2l1827 0CA2  
                              i2l1819 0C94           BCDManage7segment@DigitIndex 0036  
                              _INTCON 000FF2              __size_of_SensorOneNotify 0016  
            __size_of_ManageSpeedCalc 0006                  HWI_8Digit_WRITE@port 004B  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR1IE 007CE8                                _TMR1IF 007CF0  
                              _TMR2IF 007CF1                                _TMR3IE 007D01  
                              _TMR3IF 007D09                __size_of_BCDInitialize 0008  
                     BlinkDigit@Index 004B                   _DisplayAlphaNumeric 138E  
                         ?_BlinkDigit 004A                        __CFG_XINST$OFF 000000  
                          _NotifyFlag 002B                                ___lmul 1080  
                              ___wmul 12BA                        __CFG_STVREN$ON 000000  
                           ??___lldiv 005E                             ??___lwdiv 004E  
                        _HWtimerCount 001D                                clear_0 11C0  
                   ??_SpeedCalcManage 0063                           ?_CreateTask 004A  
              _HWI_DIGITAL_INITIALIZE 1306                      CreateTask@Period 004D  
                    CreateTask@TaskId 004C                          __pdataCOMRAM 0069  
              __size_of_HWI_DIGI_READ 002E                  ?_DisplayAlphaNumeric 0037  
                        __mediumconst 0000              __size_of_SensorTwoNotify 002E  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                    __size_of_Start_App 006C  
               __size_of_GetKeyStatus 002E                          ??_APP_MANAGE 0065  
                           ?_APP_ISR1 0037                             ?_APP_ISR2 0037  
                           ?_APP_ISR3 0037                __size_of_SchedulerTick 002A  
            ReloadHWtimer@ElapsedTime 003A            __size_of_BCDManage7segment 0098  
                          __accesstop 0080               __end_of__initialization 11C6  
                     __CFG_PBADEN$OFF 000000                     MangeKeys@KeyState 004E  
                   ?_SetCircumfirunce 004A                         ___rparam_used 000001  
                  ??_SetCircumfirunce 004C                        _TimerOVFLcount 0029  
                      __pcstackCOMRAM 0037                     BCDsendNumber@Link 0056  
           GetAvgSpeed@AvgSpeedKphMph 0085                     __end_of_MangeKeys 0A4C  
           __size_of_HWI_4Digit_WRITE 0032            __size_of_ManageApplication 0006  
                  __end_of_APP_MANAGE 0C2C                          _GetKeyStatus 1234  
                       _BCDInitialize 1386                 ??_DisplayAlphaNumeric 0050  
SpeedCalcManage@HundredMeterReference 0065              __size_of_HWtimerCallback 000A  
  __size_of_SpeedCalcNotifyInitialize 0002                   __size_of_BlinkDigit 000C  
              __size_of_ReloadHWtimer 003C                            ??_APP_ISR1 0037  
                          ??_APP_ISR2 003C                            ??_APP_ISR3 0037  
       BCDManage7segment@BlinkCounter 002C                          _CircumFactor 0069  
                          __pnvCOMRAM 006B                   __size_of_CreateTask 0058  
                       _HWI_DIGI_READ 1206                     ??_SensorOneNotify 0037  
                   ??_ManageSpeedCalc 0067               __size_of_APP_INITIALIZE 0002  
                             ?___lmul 004A                SetCircumfirunce@Circum 004A  
                   __end_of_Start_App 1028                               ?___wmul 004A  
                       _SchedulerTick 1290                        ___lmul@product 0052  
  __size_of_HWI_INTERRUPTS_INTITALIZE 003E            ?_HWI_INTERRUPTS_INTITALIZE 0037  
                      ?_BCDInitialize 0037                               _INTCON3 000FF0  
               HWI_8Digit_WRITE@value 004A                     ??_SensorTwoNotify 003C  
                    HWI_DIGI_READ@pin 004A                        ?_HWI_DIGI_READ 0037  
                             __Hparam 0000                          ?_GetAvgSpeed 0063  
                           _BCDNumber 0011                               __Lparam 0000  
                        ?_GetDistance 004A                       __size_of___lmul 0056  
                       _ReloadHWtimer 1166                        ?_SchedulerTick 0037  
                             ___lldiv 0F3A                       __size_of___wmul 0026  
                             ___lwdiv 10D6                          __psmallconst 0600  
           __size_of_HWI_8Digit_WRITE 0026                 __end_of_ManageDrivers 1336  
                             __pcinit 11A2                               __ramtop 0600  
                             __ptext0 137E                               __ptext1 0FBC  
                             __ptext2 13B4                               __ptext3 0EAE  
                             __ptext4 1320                               __ptext5 138E  
                             __ptext6 1394                               __ptext7 139A  
                             __ptext8 0E1E                               __ptext9 061E  
   __end_of_HWI_INTERRUPTS_INTITALIZE 1166                          __size_of_ISR 0CE0  
                       ?_RunScheduler 0037                SchedulerTick@TaskIndex 0037  
                      __pintcode_body 0C2C                  end_of_initialization 11C6  
                   ??_HWtimerCallback 0037                         __Lmediumconst 0000  
                             int_func 0C2C                       _SevenSegmentMAP 0611  
                     ___lldiv@divisor 005A                       _SpeedCalcManage 0E1E  
                        ??_BlinkDigit 004B                       ___lldiv@counter 0062  
                      ?_ReloadHWtimer 0037                               postdec2 000FDD  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE               ?_HWI_DIGITAL_INITIALIZE 0037  
         APP_MANAGE@TravelledDistance 0089                      _HWI_4Digit_WRITE 11D4  
                     ??_BCDInitialize 004A                          ??_CreateTask 004E  
                           _PORTBbits 000F81                __size_of_BCDsendNumber 00F6  
                      ??_RunScheduler 0067                             _TRISBbits 000F93  
                BCDManage7segment@BCD 004F                    __end_of_BlinkDigit 136A  
                     ??_HWI_DIGI_READ 004A                     __size_of_APP_ISR1 0006  
                   __size_of_APP_ISR2 0006                     __size_of_APP_ISR3 0006  
                  __end_of_CreateTask 1080           BCDInitialize@bIsCommonAnode 004A  
                           _BlinkFlag 002D                        _APP_INITIALIZE 13B6  
                      _DistTravelCntr 0019                       ??_SchedulerTick 0037  
                       _BlinkDuration 002E                     _LapTimeTenthMilli 001F  
      __end_of_HWI_DIGITAL_INITIALIZE 1320                        __end_of___lmul 10D6  
                      __end_of___wmul 12E0                         __pidataCOMRAM 13B2  
                           _ArrayTask 0001             __size_of_SetCircumfirunce 000A  
                           _MangeKeys 061E                   start_initialization 11A2  
                         __end_of_ISR 0CE8                       _SensorOneNotify 1336  
             __end_of_SevenSegmentMAP 061C                       _ManageSpeedCalc 139A  
             __end_of_SpeedCalcManage 0EAE                   APP_MANAGE@keystatus 008B  
              __end_of_APP_INITIALIZE 13B8                         _BCDsendNumber 0A4C  
                     ??_ReloadHWtimer 0039                              ??___lmul 0052  
                            ??___wmul 004E                  __size_of_GetAvgSpeed 009E  
         __end_of_DisplayAlphaNumeric 1394                      __CFG_LPT1OSC$OFF 000000  
                __size_of_GetDistance 0012                      _HWI_8Digit_WRITE 12E0  
                           _Start_App 0FBC                    BlinkDigit@duration 004A  
         ??_HWI_INTERRUPTS_INTITALIZE 004A                            ?_MangeKeys 0037  
                     _SensorTwoNotify 1262                           __pbssCOMRAM 0001  
              BCDsendNumber@LoopIndex 005C                         __pcstackBANK0 0080  
               APP_MANAGE@AvgSpeedKph 0087                 RunScheduler@TaskIndex 0027  
                      ?_BCDsendNumber 0051                       ?_APP_INITIALIZE 0037  
                    ___lwdiv@dividend 004A                  __end_of_RunScheduler 0F3A  
                   __CFG_CCP2MX$PORTC 000000                APP_MANAGE@bIsBlinkMode 0023  
                           __pintcode 0008                              ?___lldiv 0056  
                            ?___lwdiv 004A                            ?_Start_App 0037  
                    _HwTimerOVFLcount 0028                          _bIsAnodeUsed 006B  
                     _HWtimerCallback 1374                           __smallconst 0600  
             __end_of_SensorOneNotify 134C               __end_of_ManageSpeedCalc 13A0  
               HWI_4Digit_WRITE@value 004A                      ___lwdiv@quotient 004F  
            __end_of_HWI_4Digit_WRITE 1206                              _APP_ISR1 13AC  
                            _APP_ISR2 13A6                              _APP_ISR3 13A0  
          ?_SpeedCalcNotifyInitialize 0037                      ?_SpeedCalcManage 0037  
           _HWI_INTERRUPTS_INTITALIZE 1128                  ReloadHWtimer@TimerId 0039  
                      ___wmul@product 004E                      __CFG_WDTPS$32768 000000  
             __end_of_SensorTwoNotify 1290                      _SetCircumfirunce 136A  
                   ___wmul@multiplier 004A                           ??_MangeKeys 004C  
                   ___lmul@multiplier 004A                           _INTCON2bits 000FF1  
                     ??_BCDsendNumber 0054     __end_of_SpeedCalcNotifyInitialize 13B6  
              __size_of_ManageDrivers 0016                        _KeyArrayConfig 0601  
                            __Hrparam 0000                              __Lrparam 0000  
                  __CFG_BOREN$SBORDIS 000000               __end_of_HWtimerCallback 137E  
                   GetKeyStatus@KeyID 004B                      __size_of___lldiv 0082  
                    __size_of___lwdiv 0052                           ??_Start_App 0069  
               __end_of_BCDInitialize 138E                         ?_GetKeyStatus 0037  
                    ?_SensorOneNotify 0037                      ?_ManageSpeedCalc 0037  
                     ___lwdiv@divisor 004C                       ___lwdiv@counter 004E  
                            __ptext10 1206                              __ptext11 0B42  
                            __ptext20 12BA                              __ptext12 136A  
                            __ptext21 10D6                              __ptext13 1234  
                            __ptext22 0D86                              __ptext14 134C  
                            __ptext31 1290                              __ptext23 12E0  
                            __ptext15 0CE8                              __ptext32 13A0  
                            __ptext24 11D4                              __ptext16 1080  
                            __ptext33 1374                              __ptext25 1128  
                            __ptext17 0F3A                              __ptext34 13A6  
                            __ptext26 1306                              __ptext18 135E  
                            __ptext35 1262                              __ptext27 1028  
                            __ptext19 0A4C                              __ptext36 1166  
                            __ptext28 1386                              __ptext37 13AC  
                            __ptext29 13B6                              __ptext38 1336  
                            __ptext39 0000                            _APP_MANAGE 0B42  
                     _KeyInternalData 0030              __end_of_HWI_8Digit_WRITE 1306  
                  _LapDistanceCounter 0021                 __size_of_RunScheduler 008C  
                HWI_4Digit_WRITE@port 004B                         __size_of_main 0008  
              __end_of_KeyArrayConfig 0611                   MangeKeys@HWIreading 004F  
               __end_of_HWI_DIGI_READ 1234                              int$flags 006C  
               __end_of_SchedulerTick 12BA                      ?_SensorTwoNotify 0037  
             GetAvgSpeed@KphMphFactor 0081                        ??_GetKeyStatus 004A  
                       _ManageDrivers 1320                          _RunScheduler 0EAE  
                    ??_APP_INITIALIZE 004A                              intlevel2 0000  
                    ___lldiv@dividend 0056                         ??_GetAvgSpeed 0065  
                       ??_GetDistance 004E                 __end_of_ReloadHWtimer 11A2  
                    ?_HWtimerCallback 0037                        ?_ManageDrivers 0037  
                    ___lldiv@quotient 005E          __size_of_DisplayAlphaNumeric 0006  
                         ?_APP_MANAGE 0037           ??_SpeedCalcNotifyInitialize 004A  
                   ?_HWI_4Digit_WRITE 004A              __end_of_SetCircumfirunce 1374  
            ??_HWI_DIGITAL_INITIALIZE 004A                    ??_HWI_4Digit_WRITE 004B  
              ManageDrivers@LoopIndex 0051                 GetKeyStatus@KeyStatus 004A  
